(* Grammar generated by ART from 'csharp2.art' on Oct 23 2015 18:35:12 *)

CS2()(compilation_unit)

new_line_opt ::= `\r | `\n | `\r`\n | # ;

accessor_body ::=
   block |
   SEMICOLON ;

SEMICOLON ::= new_line_opt `; ;

accessor_declarations ::=
   get_accessor_declaration |
   get_accessor_declaration set_accessor_declaration |
   set_accessor_declaration |
   set_accessor_declaration get_accessor_declaration ;

accessor_modifier ::=
   PROTECTED |
   INTERNAL |
   PRIVATE |
   PROTECTED INTERNAL |
   INTERNAL PROTECTED ;

PROTECTED ::= new_line_opt `p`r`o`t`e`c`t`e`d;
INTERNAL ::= new_line_opt `i`n`t`e`r`n`a`l;
PRIVATE ::= new_line_opt `p`r`i`v`a`t`e;

add_accessor_declaration ::=
   ADD block |
   attributes ADD block ;

ADD ::= new_line_opt `a`d`d;

additive_expression ::=
   multiplicative_expression |
   additive_expression PLUS multiplicative_expression |
   additive_expression MINUS multiplicative_expression ;

PLUS ::= new_line_opt `+;
MINUS ::= new_line_opt `-;

and_expression ::=
   equality_expression |
   and_expression AMPERSAND equality_expression ;

AMPERSAND ::= new_line_opt `&;

anonymous_method_expression ::=
   DELEGATE block |
   DELEGATE anonymous_method_signature block ;

DELEGATE ::= new_line_opt `d`e`l`e`g`a`t`e;

anonymous_method_parameter ::=
   type IDENTIFIER |
   parameter_modifier type IDENTIFIER ;

//WHITESPACE ::= new_line_opt `  | `\t | `\v | `\f ;

//COMMENT ::= new_line_opt `/`/ input_character* | `/`* (not_asterisk | `*+ not_slash)* `*+ `/ ;

input_character ::=
  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `" | `# | `$ | `% | `& 
  | `' | `( | `) | `* | `+ | `, | `- | `. | `/ | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `\\ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ ;
  
new_line_character ::= `\r | `\n ;

not_asterisk ::= 
  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `" | `# | `$ | `% | `& 
  | `' | `( | `) | `\r | `\n | `+ | `, | `- | `. | `/ | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `\\ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ ;
  
not_slash ::=
  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `" | `# | `$ | `% | `& 
  | `' | `( | `) | `\r | `\n | `+ | `, | `- | `. | `* | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `\\ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ ;
  
unicode_character_escape_sequence ::=
  `\\`u hex_digit hex_digit hex_digit hex_digit
  | `\\`U hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit hex_digit ;
  
IDENTIFIER ::= new_line_opt (letter_character | `_) identifier_part_character* | new_line_opt `@ (letter_character | `_) identifier_part_character* ;

// Can I filter keywords?

letter_character ::= 
  `A | `B | `C | `D | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P 
  | `Q | `R | `S | `T | `U | `V | `W | `X | `Y | `Z | `a | `b | `c | `d | `e 
  | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q | `r | `s | `t 
  | `u | `v | `w | `x | `y | `z ;
  
identifier_part_character ::= 
  `A | `B | `C | `D | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P 
  | `Q | `R | `S | `T | `U | `V | `W | `X | `Y | `Z | `a | `b | `c | `d | `e 
  | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q | `r | `s | `t 
  | `u | `v | `w | `x | `y | `z | `0 | `1 | `2 | `3 | `4 | `5 | `6 | `7 | `8 
  | `9 | `_ | unicode_character_escape_sequence;

anonymous_method_parameter_list ::=
   anonymous_method_parameter |
   anonymous_method_parameter_list COMMA anonymous_method_parameter ;

COMMA ::= new_line_opt `,;

anonymous_method_signature ::=
   LEFTPAR RIGHTPAR |
   LEFTPAR anonymous_method_parameter_list RIGHTPAR ;

LEFTPAR ::= new_line_opt `(;
RIGHTPAR ::= new_line_opt `);

argument ::=
   expression |
   REF variable_reference |
   OUT variable_reference ;

REF ::= new_line_opt `r`e`f;
OUT ::= new_line_opt `o`u`t;

argument_list ::=
   argument |
   argument_list COMMA argument ;

array_creation_expression ::=
   NEW array_type array_initializer |
   NEW non_array_type LEFTBRACK expression_list RIGHTBRACK |
   NEW non_array_type LEFTBRACK expression_list RIGHTBRACK array_initializer |
   NEW non_array_type LEFTBRACK expression_list RIGHTBRACK rank_specifiers |
   NEW non_array_type LEFTBRACK expression_list RIGHTBRACK rank_specifiers array_initializer ;

NEW ::= new_line_opt `n`e`w;
LEFTBRACK ::= new_line_opt `[;
RIGHTBRACK ::= new_line_opt `];

array_initializer ::=
   LEFTBRACE variable_initializer_list COMMA RIGHTBRACE |
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE variable_initializer_list RIGHTBRACE ;

LEFTBRACE ::= new_line_opt `{;
RIGHTBRACE ::= new_line_opt `};

array_type ::=
   non_array_type rank_specifiers ;

assignment ::=
   unary_expression assignment_operator expression ;

assignment_operator ::=
   EQ |
   PLUSEQ |
   MINUSEQ |
   MULEQ |
   DIVEQ |
   PERCEQ |
   AMPEREQ |
   BAREQ |
   CARETEQ |
   LTLTEQ |
   GTGTEQ ;

EQ ::= new_line_opt `=;
PLUSEQ ::= new_line_opt `+`=;
MINUSEQ ::= new_line_opt `-`=;
MULEQ ::= new_line_opt `*`=;
DIVEQ ::= new_line_opt `/`=;
PERCEQ ::= new_line_opt `%`=;
AMPEREQ ::= new_line_opt `&`=;
BAREQ ::= new_line_opt `|`=;
CARETEQ ::= new_line_opt `^`=;
LTLTEQ ::= new_line_opt `<`<`=;
GTGTEQ ::= new_line_opt `>`>`=;


attribute ::=
   attribute_name |
   attribute_name attribute_arguments ;

attribute_argument_expression ::=
   expression ;

attribute_arguments ::=
   LEFTPAR positional_argument_list COMMA named_argument_list RIGHTPAR |
   LEFTPAR named_argument_list RIGHTPAR |
   LEFTPAR RIGHTPAR |
   LEFTPAR positional_argument_list RIGHTPAR ;

attribute_list ::=
   attribute |
   attribute_list COMMA attribute ;

attribute_name ::=
   type_name ;

attribute_section ::=
   LEFTBRACK attribute_list RIGHTBRACK |
   LEFTBRACK attribute_target_specifier attribute_list RIGHTBRACK |
   LEFTBRACK attribute_list COMMA RIGHTBRACK |
   LEFTBRACK attribute_target_specifier attribute_list COMMA RIGHTBRACK ;

attribute_sections ::=
   attribute_section |
   attribute_sections attribute_section ;

attribute_target ::=
   IDENTIFIER |
   ABSTRACT |
   AS |
   BASE |
   BOOL |
   BREAK | BYTE |
   CASE |
   CATCH |
   CHAR |
   CHECKED | CLASS |
   CONST |
   CONTINUE |
   DECIMAL |
   DEFAULT | DELEGATE |
   DO |
   DOUBLE |
   ELSE |
   ENUM | EVENT |
   EXPLICIT |
   EXTERN |
   FALSE |
   FINALLY | FIXED |
   FLOAT |
   FOR |
   FOREACH |
   GOTO | IF |
   IMPLICIT |
   IN |
   INT |
   INTERFACE | INTERNAL |
   IS |
   LOCK |
   LONG |
   NAMESPACE | NEW |
   NULL |
   OBJECT |
   OPERATOR |
   OUT | OVERRIDE |
   PARAMS |
   PRIVATE |
   PROTECTED |
   PUBLIC | READONLY |
   REF |
   RETURN |
   SBYTE |
   SEALED | SHORT |
   SIZEOF |
   STACKALLOC |
   STATIC |
   STRING | STRUCT |
   SWITCH |
   THIS |
   THROW |
   TRUE | TRY |
   TYPEOF |
   UINT |
   ULONG |
   UNCHECKED | UNSAFE |
   USHORT |
   USING |
   VIRTUAL |
   VOID | VOLATILE |
   WHILE ;

SIZEOF ::= new_line_opt `s`i`z`e`o`f;
UNSAFE ::= new_line_opt `u`n`s`a`f`e;

attribute_target_specifier ::=
   attribute_target COLON ;

COLON ::= new_line_opt `:;

attributes ::=
   attribute_sections ;

base_access ::=
   BASE LEFTBRACK expression_list RIGHTBRACK |
   BASE DOT IDENTIFIER |
   BASE DOT IDENTIFIER type_argument_list ;

BASE ::= new_line_opt `b`a`s`e;
DOT ::= new_line_opt `.;

binary_operator_declarator ::=
   type OPERATOR overloadable_binary_operator LEFTPAR type IDENTIFIER COMMA type IDENTIFIER RIGHTPAR ;

OPERATOR ::= new_line_opt `o`p`e`r`a`t`o`r;

block ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE statement_list RIGHTBRACE ;

boolean_expression ::=
   expression ;

break_statement ::=
   BREAK SEMICOLON ;

BREAK ::= new_line_opt `b`r`e`a`k;

cast_expression ::=
   LEFTPAR type RIGHTPAR unary_expression ;

catch_clauses ::=
   specific_catch_clauses |
   general_catch_clause |
   specific_catch_clauses general_catch_clause ;

checked_expression ::=
   CHECKED LEFTPAR expression RIGHTPAR ;

CHECKED ::= new_line_opt `c`h`e`c`k`e`d;

checked_statement ::=
   CHECKED block ;

class_base ::=
   COLON class_type |
   COLON interface_type_list |
   COLON class_type COMMA interface_type_list ;

class_body ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE class_member_declarations RIGHTBRACE ;

class_declaration ::=
   CLASS IDENTIFIER class_body |
   CLASS IDENTIFIER class_body SEMICOLON |
   CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   CLASS IDENTIFIER class_base class_body |
   CLASS IDENTIFIER class_base class_body SEMICOLON |
   CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   CLASS IDENTIFIER type_parameter_list class_body |
   CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   CLASS IDENTIFIER type_parameter_list class_base class_body |
   CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER class_body |
   PARTIAL CLASS IDENTIFIER class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER class_base class_body |
   PARTIAL CLASS IDENTIFIER class_base class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_body |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER class_body |
   class_modifiers CLASS IDENTIFIER class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   class_modifiers CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER class_base class_body |
   class_modifiers CLASS IDENTIFIER class_base class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   class_modifiers CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_body |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   class_modifiers CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_base class_body |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   class_modifiers CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER class_base class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER class_base class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes CLASS IDENTIFIER class_body |
   attributes CLASS IDENTIFIER class_body SEMICOLON |
   attributes CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   attributes CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   attributes CLASS IDENTIFIER class_base class_body |
   attributes CLASS IDENTIFIER class_base class_body SEMICOLON |
   attributes CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   attributes CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes CLASS IDENTIFIER type_parameter_list class_body |
   attributes CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   attributes CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   attributes CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   attributes CLASS IDENTIFIER type_parameter_list class_base class_body |
   attributes CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   attributes CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   attributes CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER class_body |
   attributes PARTIAL CLASS IDENTIFIER class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER class_base class_body |
   attributes PARTIAL CLASS IDENTIFIER class_base class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   attributes PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_body |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   attributes PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER class_body |
   attributes class_modifiers CLASS IDENTIFIER class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER class_base class_body |
   attributes class_modifiers CLASS IDENTIFIER class_base class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   attributes class_modifiers CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_body |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_base class_body |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   attributes class_modifiers CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_base class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_base class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER class_base type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list type_parameter_constraints_clauses class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base class_body SEMICOLON |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body |
   attributes class_modifiers PARTIAL CLASS IDENTIFIER type_parameter_list class_base type_parameter_constraints_clauses class_body SEMICOLON ;

CLASS ::= new_line_opt `c`l`a`s`s;
PARTIAL ::= new_line_opt `p`a`r`t`i`a`l;

class_member_declaration ::=
   constant_declaration |
   field_declaration |
   method_declaration |
   property_declaration |
   event_declaration |
   indexer_declaration |
   operator_declaration |
   constructor_declaration |
   finalizer_declaration |
   static_constructor_declaration |
   type_declaration ;

class_member_declarations ::=
   class_member_declaration |
   class_member_declarations class_member_declaration ;

class_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   ABSTRACT |
   SEALED |
   STATIC ;

PUBLIC ::= new_line_opt `p`u`b`l`i`c;
ABSTRACT ::= new_line_opt `a`b`s`t`r`a`c`t;
SEALED ::= new_line_opt `s`e`a`l`e`d;
STATIC ::= new_line_opt `s`t`a`t`i`c;

class_modifiers ::=
   class_modifier |
   class_modifiers class_modifier ;

class_type ::=
   type_name |
   OBJECT |
   STRING ;

OBJECT ::= new_line_opt `o`b`j`e`c`t;
STRING ::= new_line_opt `s`t`r`i`n`g;

commas ::=
   COMMA |
   commas COMMA ;

compilation_unit ::=
   # |
   namespace_member_declarations |
   global_attributes |
   global_attributes namespace_member_declarations |
   using_directives |
   using_directives namespace_member_declarations |
   using_directives global_attributes |
   using_directives global_attributes namespace_member_declarations |
   extern_alias_directives |
   extern_alias_directives namespace_member_declarations |
   extern_alias_directives global_attributes |
   extern_alias_directives global_attributes namespace_member_declarations |
   extern_alias_directives using_directives |
   extern_alias_directives using_directives namespace_member_declarations |
   extern_alias_directives using_directives global_attributes |
   extern_alias_directives using_directives global_attributes namespace_member_declarations ;

conditional_and_expression ::=
   inclusive_or_expression |
   conditional_and_expression AMPERAMPER inclusive_or_expression ;

AMPERAMPER ::= new_line_opt `&`&;

conditional_expression ::=
   null_coalescing_expression |
   null_coalescing_expression QUESTION expression COLON expression ;

QUESTION ::= new_line_opt `?;

conditional_or_expression ::=
   conditional_and_expression |
   conditional_or_expression BARBAR conditional_and_expression ;

BARBAR ::= new_line_opt `|`|;

constant_declaration ::=
   CONST type constant_declarators SEMICOLON |
   constant_modifiers CONST type constant_declarators SEMICOLON |
   attributes CONST type constant_declarators SEMICOLON |
   attributes constant_modifiers CONST type constant_declarators SEMICOLON ;

CONST ::= new_line_opt `c`o`n`s`t;

constant_declarator ::=
   IDENTIFIER EQ constant_expression ;

constant_declarators ::=
   constant_declarator |
   constant_declarators COMMA constant_declarator ;

constant_expression ::=
   expression ;

constant_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE ;

constant_modifiers ::=
   constant_modifier |
   constant_modifiers constant_modifier ;

constructor_body ::=
   block |
   SEMICOLON ;

constructor_constraint ::=
   NEW LEFTPAR RIGHTPAR ;

constructor_declaration ::=
   constructor_declarator constructor_body |
   constructor_modifiers constructor_declarator constructor_body |
   attributes constructor_declarator constructor_body |
   attributes constructor_modifiers constructor_declarator constructor_body ;

constructor_declarator ::=
   IDENTIFIER LEFTPAR RIGHTPAR |
   IDENTIFIER LEFTPAR RIGHTPAR constructor_initializer |
   IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR |
   IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR constructor_initializer ;

constructor_initializer ::=
   COLON BASE LEFTPAR RIGHTPAR |
   COLON BASE LEFTPAR argument_list RIGHTPAR |
   COLON THIS LEFTPAR RIGHTPAR |
   COLON THIS LEFTPAR argument_list RIGHTPAR ;

THIS ::= new_line_opt `t`h`i`s;

constructor_modifier ::=
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   EXTERN ;

EXTERN ::= new_line_opt `e`x`t`e`r`n;

constructor_modifiers ::=
   constructor_modifier |
   constructor_modifiers constructor_modifier ;

continue_statement ::=
   CONTINUE SEMICOLON ;

CONTINUE ::= new_line_opt `c`o`n`t`i`n`u`e;

conversion_operator_declarator ::=
   IMPLICIT OPERATOR type LEFTPAR type IDENTIFIER RIGHTPAR |
   EXPLICIT OPERATOR type LEFTPAR type IDENTIFIER RIGHTPAR ;

IMPLICIT ::= new_line_opt `i`m`p`l`i`c`i`t;
EXPLICIT ::= new_line_opt `e`x`p`l`i`c`i`t;

declaration_statement ::=
   local_variable_declaration SEMICOLON |
   local_constant_declaration SEMICOLON ;

default_value_expression ::=
   DEFAULT LEFTPAR type RIGHTPAR ;

DEFAULT ::= new_line_opt `d`e`f`a`u`l`t;

delegate_creation_expression ::=
   NEW delegate_type LEFTPAR expression RIGHTPAR ;

delegate_declaration ::=
   DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes delegate_modifiers DELEGATE return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON ;

delegate_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE ;

delegate_modifiers ::=
   delegate_modifier |
   delegate_modifiers delegate_modifier ;

delegate_type ::=
   type_name ;

dim_separators ::=
   COMMA |
   dim_separators COMMA ;

do_statement ::=
   DO embedded_statement WHILE LEFTPAR boolean_expression RIGHTPAR SEMICOLON ;

DO ::= new_line_opt `d`o;
WHILE ::= new_line_opt `w`h`i`l`e;

element_access ::=
   primary_no_array_creation_expression LEFTBRACK expression_list RIGHTBRACK ;

embedded_statement ::=
   block |
   empty_statement |
   expression_statement |
   selection_statement |
   iteration_statement |
   jump_statement |
   try_statement |
   checked_statement |
   unchecked_statement |
   lock_statement |
   using_statement |
   yield_statement ;

empty_statement ::=
   SEMICOLON ;

enum_base ::=
   COLON integral_type ;

enum_body ::=
   LEFTBRACE enum_member_declarations COMMA RIGHTBRACE |
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE enum_member_declarations RIGHTBRACE ;

enum_declaration ::=
   ENUM IDENTIFIER enum_body |
   ENUM IDENTIFIER enum_body SEMICOLON |
   ENUM IDENTIFIER enum_base enum_body |
   ENUM IDENTIFIER enum_base enum_body SEMICOLON |
   enum_modifiers ENUM IDENTIFIER enum_body |
   enum_modifiers ENUM IDENTIFIER enum_body SEMICOLON |
   enum_modifiers ENUM IDENTIFIER enum_base enum_body |
   enum_modifiers ENUM IDENTIFIER enum_base enum_body SEMICOLON |
   attributes ENUM IDENTIFIER enum_body |
   attributes ENUM IDENTIFIER enum_body SEMICOLON |
   attributes ENUM IDENTIFIER enum_base enum_body |
   attributes ENUM IDENTIFIER enum_base enum_body SEMICOLON |
   attributes enum_modifiers ENUM IDENTIFIER enum_body |
   attributes enum_modifiers ENUM IDENTIFIER enum_body SEMICOLON |
   attributes enum_modifiers ENUM IDENTIFIER enum_base enum_body |
   attributes enum_modifiers ENUM IDENTIFIER enum_base enum_body SEMICOLON ;

ENUM ::= new_line_opt `e`n`u`m;

enum_member_declaration ::=
   IDENTIFIER |
   attributes IDENTIFIER |
   IDENTIFIER EQ constant_expression |
   attributes IDENTIFIER EQ constant_expression ;

enum_member_declarations ::=
   enum_member_declaration |
   enum_member_declarations COMMA enum_member_declaration ;

enum_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE ;

enum_modifiers ::=
   enum_modifier |
   enum_modifiers enum_modifier ;

enum_type ::=
   type_name ;

equality_expression ::=
   relational_expression |
   equality_expression EQEQ relational_expression |
   equality_expression EXCEQ relational_expression ;

EQEQ ::= new_line_opt `=`=;
EXCEQ ::= new_line_opt `!`=;

event_accessor_declarations ::=
   add_accessor_declaration remove_accessor_declaration |
   remove_accessor_declaration add_accessor_declaration ;

event_declaration ::=
   EVENT type variable_declarators SEMICOLON |
   event_modifiers EVENT type variable_declarators SEMICOLON |
   attributes EVENT type variable_declarators SEMICOLON |
   attributes event_modifiers EVENT type variable_declarators SEMICOLON |
   EVENT type member_name LEFTBRACE event_accessor_declarations RIGHTBRACE |
   event_modifiers EVENT type member_name LEFTBRACE event_accessor_declarations RIGHTBRACE |
   attributes EVENT type member_name LEFTBRACE event_accessor_declarations RIGHTBRACE |
   attributes event_modifiers EVENT type member_name LEFTBRACE event_accessor_declarations RIGHTBRACE ;

EVENT ::= new_line_opt `e`v`e`n`t;

event_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   STATIC |
   VIRTUAL |
   SEALED |
   OVERRIDE |
   ABSTRACT |
   EXTERN ;

VIRTUAL ::= new_line_opt `v`i`r`t`u`a`l;
OVERRIDE ::= new_line_opt `o`v`e`r`r`i`d`e;

event_modifiers ::=
   event_modifier |
   event_modifiers event_modifier ;

exclusive_or_expression ::=
   and_expression |
   exclusive_or_expression CARET and_expression ;

expression ::=
   conditional_expression |
   assignment ;

expression_list ::=
   expression |
   expression_list COMMA expression ;

expression_statement ::=
   statement_expression SEMICOLON ;

extern_alias_directive ::=
   EXTERN ALIAS IDENTIFIER SEMICOLON ;

ALIAS ::= new_line_opt `a`l`i`a`s;

extern_alias_directives ::=
   extern_alias_directive |
   extern_alias_directives extern_alias_directive ;

field_declaration ::=
   type variable_declarators SEMICOLON |
   field_modifiers type variable_declarators SEMICOLON |
   attributes type variable_declarators SEMICOLON |
   attributes field_modifiers type variable_declarators SEMICOLON ;

field_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   STATIC |
   READONLY |
   VOLATILE ;

READONLY ::= new_line_opt `r`e`a`d`o`n`l`y;
VOLATILE ::= new_line_opt `v`o`l`a`t`i`l`e;

field_modifiers ::=
   field_modifier |
   field_modifiers field_modifier ;

finalizer_body ::=
   block |
   SEMICOLON ;

finalizer_declaration ::=
   EXTERN TILDE IDENTIFIER LEFTPAR RIGHTPAR finalizer_body |
   attributes EXTERN TILDE IDENTIFIER LEFTPAR RIGHTPAR finalizer_body |
   TILDE IDENTIFIER LEFTPAR RIGHTPAR finalizer_body |
   attributes TILDE IDENTIFIER LEFTPAR RIGHTPAR finalizer_body 
   ;

TILDE ::= new_line_opt `~;

finally_clause ::=
   FINALLY block ;

FINALLY ::= new_line_opt `f`i`n`a`l`l`y;

fixed_parameter ::=
   type IDENTIFIER |
   parameter_modifier type IDENTIFIER |
   attributes type IDENTIFIER |
   attributes parameter_modifier type IDENTIFIER ;

fixed_parameters ::=
   fixed_parameter |
   fixed_parameters COMMA fixed_parameter ;

floating_point_type ::=
   FLOAT |
   DOUBLE ;

FLOAT ::= new_line_opt `f`l`o`a`t;
DOUBLE ::= new_line_opt `d`o`u`b`l`e;

for_condition ::=
   boolean_expression ;

for_initializer ::=
   local_variable_declaration |
   statement_expression_list ;

for_iterator ::=
   statement_expression_list ;

for_statement ::=
   FOR LEFTPAR SEMICOLON SEMICOLON RIGHTPAR embedded_statement |
   FOR LEFTPAR SEMICOLON SEMICOLON for_iterator RIGHTPAR embedded_statement |
   FOR LEFTPAR SEMICOLON for_condition SEMICOLON RIGHTPAR embedded_statement |
   FOR LEFTPAR SEMICOLON for_condition SEMICOLON for_iterator RIGHTPAR embedded_statement |
   FOR LEFTPAR for_initializer SEMICOLON SEMICOLON RIGHTPAR embedded_statement |
   FOR LEFTPAR for_initializer SEMICOLON SEMICOLON for_iterator RIGHTPAR embedded_statement |
   FOR LEFTPAR for_initializer SEMICOLON for_condition SEMICOLON RIGHTPAR embedded_statement |
   FOR LEFTPAR for_initializer SEMICOLON for_condition SEMICOLON for_iterator RIGHTPAR embedded_statement ;

FOR ::= new_line_opt `f`o`r;

foreach_statement ::=
   FOREACH LEFTPAR type IDENTIFIER IN expression RIGHTPAR embedded_statement ;

FOREACH ::= new_line_opt `f`o`r`e`a`c`h;
IN ::= new_line_opt `i`n;

formal_parameter_list ::=
   fixed_parameters |
   fixed_parameters COMMA parameter_array |
   parameter_array ;

general_catch_clause ::=
   CATCH block ;

CATCH ::= new_line_opt `c`a`t`c`h;

generic_dimension_specifier ::=
   LT GT |
   LT commas GT ;

LT ::= new_line_opt `<;
GT ::= new_line_opt `>;

get_accessor_declaration ::=
   GET accessor_body |
   accessor_modifier GET accessor_body |
   attributes GET accessor_body |
   attributes accessor_modifier GET accessor_body ;

GET ::= new_line_opt `g`e`t;

global_attribute_section ::=
   LEFTBRACK global_attribute_target_specifier attribute_list RIGHTBRACK |
   LEFTBRACK global_attribute_target_specifier attribute_list COMMA RIGHTBRACK ;

global_attribute_sections ::=
   global_attribute_section |
   global_attribute_sections global_attribute_section ;

global_attribute_target ::=
   IDENTIFIER |
   ABSTRACT |
   AS |
   BASE |
   BOOL |
   BREAK | BYTE |
   CASE |
   CATCH |
   CHAR |
   CHECKED | CLASS |
   CONST |
   CONTINUE |
   DECIMAL |
   DEFAULT | DELEGATE |
   DO |
   DOUBLE |
   ELSE |
   ENUM | EVENT |
   EXPLICIT |
   EXTERN |
   FALSE |
   FINALLY | FIXED |
   FLOAT |
   FOR |
   FOREACH |
   GOTO | IF |
   IMPLICIT |
   IN |
   INT |
   INTERFACE | INTERNAL |
   IS |
   LOCK |
   LONG |
   NAMESPACE | NEW |
   NULL |
   OBJECT |
   OPERATOR |
   OUT | OVERRIDE |
   PARAMS |
   PRIVATE |
   PROTECTED |
   PUBLIC | READONLY |
   REF |
   RETURN |
   SBYTE |
   SEALED | SHORT |
   SIZEOF |
   STACKALLOC |
   STATIC |
   STRING | STRUCT |
   SWITCH |
   THIS |
   THROW |
   TRUE | TRY |
   TYPEOF |
   UINT |
   ULONG |
   UNCHECKED | UNSAFE |
   USHORT |
   USING |
   VIRTUAL |
   VOID | VOLATILE |
   WHILE ;

FIXED ::= new_line_opt `f`i`x`e`d;
STACKALLOC ::= new_line_opt `s`t`a`c`k`a`l`l`o`c;

global_attribute_target_specifier ::=
   global_attribute_target COLON ;

global_attributes ::=
   global_attribute_sections ;

goto_statement ::=
   GOTO IDENTIFIER SEMICOLON |
   GOTO CASE constant_expression SEMICOLON |
   GOTO DEFAULT SEMICOLON ;

GOTO ::= new_line_opt `g`o`t`o;
CASE ::= new_line_opt `c`a`s`e;

if_statement ::=
   IF LEFTPAR boolean_expression RIGHTPAR embedded_statement |
   IF LEFTPAR boolean_expression RIGHTPAR embedded_statement ELSE embedded_statement ;

IF ::= new_line_opt `i`f;
ELSE ::= new_line_opt `e`l`s`e;

inclusive_or_expression ::=
   exclusive_or_expression |
   inclusive_or_expression BAR exclusive_or_expression ;

BAR ::= new_line_opt `|;

indexer_declaration ::=
   indexer_declarator LEFTBRACE accessor_declarations RIGHTBRACE |
   indexer_modifiers indexer_declarator LEFTBRACE accessor_declarations RIGHTBRACE |
   attributes indexer_declarator LEFTBRACE accessor_declarations RIGHTBRACE |
   attributes indexer_modifiers indexer_declarator LEFTBRACE accessor_declarations RIGHTBRACE ;

indexer_declarator ::=
   type THIS LEFTBRACK formal_parameter_list RIGHTBRACK |
   type interface_type DOT THIS LEFTBRACK formal_parameter_list RIGHTBRACK ;

indexer_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   VIRTUAL |
   SEALED |
   OVERRIDE |
   ABSTRACT |
   EXTERN ;

indexer_modifiers ::=
   indexer_modifier |
   indexer_modifiers indexer_modifier ;

integral_type ::=
   SBYTE |
   BYTE |
   SHORT |
   USHORT |
   INT |
   UINT |
   LONG |
   ULONG |
   CHAR ;

SBYTE ::= new_line_opt `s`b`y`t`e;
BYTE ::= new_line_opt `b`y`t`e;
SHORT ::= new_line_opt `s`h`o`r`t;
USHORT ::= new_line_opt `u`s`h`o`r`t;
INT ::= new_line_opt `i`n`t;
UINT ::= new_line_opt `u`i`n`t;
LONG ::= new_line_opt `l`o`n`g;
ULONG ::= new_line_opt `u`l`o`n`g;
CHAR ::= new_line_opt `c`h`a`r;

interface_accessors ::=
   GET SEMICOLON |
   attributes GET SEMICOLON |
   SET SEMICOLON |
   attributes SET SEMICOLON |
   GET SEMICOLON SET SEMICOLON |
   GET SEMICOLON attributes SET SEMICOLON |
   attributes GET SEMICOLON SET SEMICOLON |
   attributes GET SEMICOLON attributes SET SEMICOLON |
   SET SEMICOLON GET SEMICOLON |
   SET SEMICOLON attributes GET SEMICOLON |
   attributes SET SEMICOLON GET SEMICOLON |
   attributes SET SEMICOLON attributes GET SEMICOLON ;

SET ::= new_line_opt `s`e`t;

interface_base ::=
   COLON interface_type_list ;

interface_body ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE interface_member_declarations RIGHTBRACE ;

interface_declaration ::=
   INTERFACE IDENTIFIER interface_body |
   INTERFACE IDENTIFIER interface_body SEMICOLON |
   INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   INTERFACE IDENTIFIER interface_base interface_body |
   INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   INTERFACE IDENTIFIER type_parameter_list interface_body |
   INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER interface_body |
   PARTIAL INTERFACE IDENTIFIER interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER interface_base interface_body |
   PARTIAL INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER interface_body |
   interface_modifiers INTERFACE IDENTIFIER interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER interface_base interface_body |
   interface_modifiers INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   interface_modifiers INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_body |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER interface_body |
   attributes INTERFACE IDENTIFIER interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   attributes INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER interface_base interface_body |
   attributes INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   attributes INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_body |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   attributes INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   attributes INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER interface_base interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   attributes PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_base interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER interface_base type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list type_parameter_constraints_clauses interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base interface_body SEMICOLON |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body |
   attributes interface_modifiers PARTIAL INTERFACE IDENTIFIER type_parameter_list interface_base type_parameter_constraints_clauses interface_body SEMICOLON ;

INTERFACE ::= new_line_opt `i`n`t`e`r`f`a`c`e;

interface_event_declaration ::=
   EVENT type IDENTIFIER SEMICOLON |
   NEW EVENT type IDENTIFIER SEMICOLON |
   attributes EVENT type IDENTIFIER SEMICOLON |
   attributes NEW EVENT type IDENTIFIER SEMICOLON ;

interface_indexer_declaration ::=
   type THIS LEFTBRACK formal_parameter_list RIGHTBRACK LEFTBRACE interface_accessors RIGHTBRACE |
   NEW type THIS LEFTBRACK formal_parameter_list RIGHTBRACK LEFTBRACE interface_accessors RIGHTBRACE |
   attributes type THIS LEFTBRACK formal_parameter_list RIGHTBRACK LEFTBRACE interface_accessors RIGHTBRACE |
   attributes NEW type THIS LEFTBRACK formal_parameter_list RIGHTBRACK LEFTBRACE interface_accessors RIGHTBRACE ;

interface_member_declaration ::=
   interface_method_declaration |
   interface_property_declaration |
   interface_event_declaration |
   interface_indexer_declaration ;

interface_member_declarations ::=
   interface_member_declaration |
   interface_member_declarations interface_member_declaration ;

interface_method_declaration ::=
   return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   NEW return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   NEW return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   NEW return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   NEW return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   NEW return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   NEW return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   NEW return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   NEW return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   attributes return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   attributes return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes NEW return_type IDENTIFIER LEFTPAR RIGHTPAR SEMICOLON |
   attributes NEW return_type IDENTIFIER LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes NEW return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes NEW return_type IDENTIFIER LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes NEW return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR SEMICOLON |
   attributes NEW return_type IDENTIFIER type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses SEMICOLON |
   attributes NEW return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR SEMICOLON |
   attributes NEW return_type IDENTIFIER type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses SEMICOLON ;

interface_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE ;

interface_modifiers ::=
   interface_modifier |
   interface_modifiers interface_modifier ;

interface_property_declaration ::=
   type IDENTIFIER LEFTBRACE interface_accessors RIGHTBRACE |
   NEW type IDENTIFIER LEFTBRACE interface_accessors RIGHTBRACE |
   attributes type IDENTIFIER LEFTBRACE interface_accessors RIGHTBRACE |
   attributes NEW type IDENTIFIER LEFTBRACE interface_accessors RIGHTBRACE ;

interface_type ::=
   type_name ;

interface_type_list ::=
   interface_type |
   interface_type_list COMMA interface_type ;

invocation_expression ::=
   primary_expression LEFTPAR RIGHTPAR |
   primary_expression LEFTPAR argument_list RIGHTPAR ;

iteration_statement ::=
   while_statement |
   do_statement |
   for_statement |
   foreach_statement ;

jump_statement ::=
   break_statement |
   continue_statement |
   goto_statement |
   return_statement |
   throw_statement ;

labeled_statement ::=
   IDENTIFIER COLON statement ;

literal ::=
   TRUE |
   FALSE |
   INTEGER_LITERAL |
   REAL_LITERAL |
   CHARACTER_LITERAL |
   STRING_LITERAL |
   NULL ;

NULL ::= new_line_opt `n`u`l`l;
TRUE ::= new_line_opt `t`r`u`e;
FALSE ::= new_line_opt `f`a`l`s`e;
INTEGER_LITERAL ::= new_line_opt decimal_digit+ integer_type_suffix? | new_line_opt `0`x hex_digit+ integer_type_suffix?
  | new_line_opt `0`X hex_digit+ integer_type_suffix? ;

decimal_digit ::= `0 | `1 | `2 | `3 | `4 | `5 | `6 | `7 | `8 | `9 ;

integer_type_suffix ::= `U | `u | `L | `l | `U`L | `U`l | `u`L | `u`l | `L`U | `L`u
  | `l`U | `l`u ;
  
hex_digit ::=
  `0 | `1 | `2 | `3 | `4 | `5 | `6 | `7 | `8 | `9 | `A | `B | `C | `D | `E | `F
  | `a | `b | `c | `d | `e | `f ;
  
REAL_LITERAL ::= new_line_opt decimal_digit+ `. decimal_digit+ exponent_part? real_type_suffix?
  | new_line_opt `. decimal_digit+ exponent_part? real_type_suffix?
  | new_line_opt decimal_digit+ exponent_part real_type_suffix?
  | new_line_opt decimal_digit+ real_type_suffix ;
  
exponent_part ::=
  `e (`+ | `-)? decimal_digit+
  | `E (`+ | `-)? decimal_digit+ ;

real_type_suffix ::= `F | `f | `D | `d | `M | `m ;

CHARACTER_LITERAL ::= new_line_opt `' character `' ;

character ::= single_character | simple_escape_sequence | hexadecimal_escape_sequence
  | unicode_character_escape_sequence ;
  
single_character ::=  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `" | `# | `$ | `% | `& 
  | `( | `) | `* | `+ | `, | `- | `. | `/ | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ ;

simple_escape_sequence ::= `\\`' | `\\ `" | `\\`\\ | `\\`0 | `\\`a | `\\`b | `\\`f | `\\`n
  | `\\`n | `\\`r | `\\`t | `\\`v ;
  
hexadecimal_escape_sequence ::= `\\`x hex_digit hex_digit? hex_digit? hex_digit? ;

STRING_LITERAL ::= new_line_opt `" regular_string_literal_character* `" | new_line_opt `@ `" (single_verbatim_string_literal_character | `" `")* `" ;

regular_string_literal_character ::= single_regular_string_literal_character
  | simple_escape_sequence
  | hexadecimal_escape_sequence
  | unicode_character_escape_sequence;
  
single_regular_string_literal_character ::=
  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `# | `$ | `% | `& 
  | `' | `( | `) | `* | `+ | `, | `- | `. | `/ | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ ;
  
single_verbatim_string_literal_character ::=
  `\0 | `\a | `\b | `\t | `\v | `\f | `\e | `  | `! | `# | `$ | `% | `& 
  | `' | `( | `) | `* | `+ | `, | `- | `. | `/ | `0 | `1 | `2 | `3 | `4 | `5
  | `6 | `7 | `8 | `9 | `: | `; | `< | `= | `> | `? | `@ | `A | `B | `C | `D
  | `E | `F | `G | `H | `I | `J | `K | `L | `M | `N | `O | `P | `Q | `R | `S
  | `T | `U | `V | `W | `X | `Y | `Z | `[ | `\\ | `] | `^ | `_ | `` | `a | `b
  | `c | `d | `e | `f | `g | `h | `i | `j | `k | `l | `m | `n | `o | `p | `q 
  | `r | `s | `t | `u | `v | `w | `x | `y | `z | `{ | `| | `} | `~ | `\n | `\r ;

local_constant_declaration ::=
   CONST type constant_declarators ;

local_variable_declaration ::=
   type local_variable_declarators ;

local_variable_declarator ::=
   IDENTIFIER |
   IDENTIFIER EQ local_variable_initializer ;

local_variable_declarators ::=
   local_variable_declarator |
   local_variable_declarators COMMA local_variable_declarator ;

local_variable_initializer ::=
   expression |
   array_initializer ;

lock_statement ::=
   LOCK LEFTPAR expression RIGHTPAR embedded_statement ;

LOCK ::= new_line_opt `l`o`c`k;

member_access ::=
   primary_expression DOT IDENTIFIER |
   primary_expression DOT IDENTIFIER type_argument_list |
   predefined_type DOT IDENTIFIER |
   predefined_type DOT IDENTIFIER type_argument_list |
   qualified_alias_member DOT IDENTIFIER |
   qualified_alias_member DOT IDENTIFIER type_argument_list ;

member_name ::=
   IDENTIFIER |
   interface_type DOT IDENTIFIER ;

method_body ::=
   block |
   SEMICOLON ;

method_declaration ::=
   method_header method_body ;

method_header ::=
   return_type member_name LEFTPAR RIGHTPAR |
   return_type member_name LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   return_type member_name LEFTPAR formal_parameter_list RIGHTPAR |
   return_type member_name LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   return_type member_name type_parameter_list LEFTPAR RIGHTPAR |
   return_type member_name type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR |
   return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   method_modifiers return_type member_name LEFTPAR RIGHTPAR |
   method_modifiers return_type member_name LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   method_modifiers return_type member_name LEFTPAR formal_parameter_list RIGHTPAR |
   method_modifiers return_type member_name LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   method_modifiers return_type member_name type_parameter_list LEFTPAR RIGHTPAR |
   method_modifiers return_type member_name type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   method_modifiers return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR |
   method_modifiers return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   attributes return_type member_name LEFTPAR RIGHTPAR |
   attributes return_type member_name LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   attributes return_type member_name LEFTPAR formal_parameter_list RIGHTPAR |
   attributes return_type member_name LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   attributes return_type member_name type_parameter_list LEFTPAR RIGHTPAR |
   attributes return_type member_name type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   attributes return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR |
   attributes return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   attributes method_modifiers return_type member_name LEFTPAR RIGHTPAR |
   attributes method_modifiers return_type member_name LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   attributes method_modifiers return_type member_name LEFTPAR formal_parameter_list RIGHTPAR |
   attributes method_modifiers return_type member_name LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses |
   attributes method_modifiers return_type member_name type_parameter_list LEFTPAR RIGHTPAR |
   attributes method_modifiers return_type member_name type_parameter_list LEFTPAR RIGHTPAR type_parameter_constraints_clauses |
   attributes method_modifiers return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR |
   attributes method_modifiers return_type member_name type_parameter_list LEFTPAR formal_parameter_list RIGHTPAR type_parameter_constraints_clauses ;

method_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   STATIC |
   VIRTUAL |
   SEALED |
   OVERRIDE |
   ABSTRACT |
   EXTERN ;

method_modifiers ::=
   method_modifier |
   method_modifiers method_modifier ;

multiplicative_expression ::=
   unary_expression |
   multiplicative_expression MUL unary_expression |
   multiplicative_expression DIV unary_expression |
   multiplicative_expression PERC unary_expression ;

MUL ::= new_line_opt `*;
DIV ::= new_line_opt `/;
PERC ::= new_line_opt `%;

named_argument_list ::=
   IDENTIFIER EQ attribute_argument_expression ;

namespace_body ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE namespace_member_declarations RIGHTBRACE |
   LEFTBRACE using_directives RIGHTBRACE |
   LEFTBRACE using_directives namespace_member_declarations RIGHTBRACE |
   LEFTBRACE extern_alias_directives RIGHTBRACE |
   LEFTBRACE extern_alias_directives namespace_member_declarations RIGHTBRACE |
   LEFTBRACE extern_alias_directives using_directives RIGHTBRACE |
   LEFTBRACE extern_alias_directives using_directives namespace_member_declarations RIGHTBRACE ;

namespace_declaration ::=
   NAMESPACE qualified_identifier namespace_body |
   NAMESPACE qualified_identifier namespace_body SEMICOLON ;

NAMESPACE ::= new_line_opt `n`a`m`e`s`p`a`c`e;

namespace_member_declaration ::=
   namespace_declaration |
   type_declaration ;

namespace_member_declarations ::=
   namespace_member_declaration |
   namespace_member_declarations namespace_member_declaration ;

namespace_name ::=
   namespace_or_type_name ;

namespace_or_type_name ::=
   qualified_alias_member |
   IDENTIFIER |
   IDENTIFIER type_argument_list |
   namespace_or_type_name DOT IDENTIFIER |
   namespace_or_type_name DOT IDENTIFIER type_argument_list ;

non_array_type ::=
   value_type |
   class_type |
   interface_type |
   delegate_type |
   type_parameter ;

non_nullable_value_type ::=
   enum_type |
   type_name |
   simple_type ;

null_coalescing_expression ::=
   conditional_or_expression |
   conditional_or_expression QUESTIONQUESTION null_coalescing_expression ;

QUESTIONQUESTION ::= new_line_opt `?`?;

nullable_type ::=
   non_nullable_value_type QUESTION ;

numeric_type ::=
   integral_type |
   floating_point_type |
   DECIMAL ;

DECIMAL ::= new_line_opt `d`e`c`i`m`a`l;

object_creation_expression ::=
   NEW type LEFTPAR RIGHTPAR |
   NEW type LEFTPAR argument_list RIGHTPAR ;

operator_body ::=
   block |
   SEMICOLON ;

operator_declaration ::=
   operator_modifiers operator_declarator operator_body |
   attributes operator_modifiers operator_declarator operator_body ;

operator_declarator ::=
   unary_operator_declarator |
   binary_operator_declarator |
   conversion_operator_declarator ;

operator_modifier ::=
   PUBLIC |
   STATIC |
   EXTERN ;

operator_modifiers ::=
   operator_modifier |
   operator_modifiers operator_modifier ;

overloadable_binary_operator ::=
   PLUS |
   MINUS |
   MUL |
   DIV |
   PERC |
   AMPERSAND |
   BAR |
   CARET |
   LTLT |
   GTGT |
   EQEQ |
   EXCEQ |
   GT |
   LT |
   GTEQ |
   LTEQ ;

CARET ::= new_line_opt `^;
LTLT ::= new_line_opt `<`<;
GTGT ::= new_line_opt `>`>;
GTEQ ::= new_line_opt `>`=;
LTEQ ::= new_line_opt `<`=;

overloadable_unary_operator ::=
   PLUS |
   MINUS |
   EXC |
   TILDE |
   PLUSPLUS |
   MINUSMINUS |
   TRUE |
   FALSE ;

EXC ::= new_line_opt `!;
PLUSPLUS ::= new_line_opt `+`+;
MINUSMINUS ::= new_line_opt `-`-;

parameter_array ::=
   PARAMS array_type IDENTIFIER |
   attributes PARAMS array_type IDENTIFIER ;

PARAMS ::= new_line_opt `p`a`r`a`m`s;

parameter_modifier ::=
   REF |
   OUT ;

parenthesized_expression ::=
   LEFTPAR expression RIGHTPAR ;

positional_argument ::=
   attribute_argument_expression ;

positional_argument_list ::=
   positional_argument |
   positional_argument_list COMMA positional_argument ;

post_decrement_expression ::=
   primary_expression MINUSMINUS ;

post_increment_expression ::=
   primary_expression PLUSPLUS ;

pre_decrement_expression ::=
   MINUSMINUS unary_expression ;

pre_increment_expression ::=
   PLUSPLUS unary_expression ;

predefined_type ::=
   BOOL |
   BYTE |
   CHAR |
   DECIMAL |
   DOUBLE |
   FLOAT |
   INT |
   LONG |
   OBJECT |
   SBYTE |
   SHORT |
   STRING |
   UINT |
   ULONG |
   USHORT ;

BOOL ::= new_line_opt `b`o`o`l;

primary_constraint ::=
   class_type |
   CLASS |
   STRUCT ;

STRUCT ::= new_line_opt `s`t`r`u`c`t;

primary_expression ::=
   array_creation_expression |
   primary_no_array_creation_expression ;

primary_no_array_creation_expression ::=
   literal |
   simple_name |
   parenthesized_expression |
   member_access |
   invocation_expression |
   element_access |
   this_access |
   base_access |
   post_increment_expression |
   post_decrement_expression |
   object_creation_expression |
   delegate_creation_expression |
   typeof_expression |
   checked_expression |
   unchecked_expression |
   default_value_expression |
   anonymous_method_expression ;

property_declaration ::=
   type member_name LEFTBRACE accessor_declarations RIGHTBRACE |
   property_modifiers type member_name LEFTBRACE accessor_declarations RIGHTBRACE |
   attributes type member_name LEFTBRACE accessor_declarations RIGHTBRACE |
   attributes property_modifiers type member_name LEFTBRACE accessor_declarations RIGHTBRACE ;

property_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE |
   STATIC |
   VIRTUAL |
   SEALED |
   OVERRIDE |
   ABSTRACT |
   EXTERN ;

property_modifiers ::=
   property_modifier |
   property_modifiers property_modifier ;

qualified_alias_member ::=
   IDENTIFIER COLONCOLON IDENTIFIER |
   IDENTIFIER COLONCOLON IDENTIFIER type_argument_list ;

COLONCOLON ::= new_line_opt `:`:;

qualified_identifier ::=
   IDENTIFIER |
   qualified_identifier DOT IDENTIFIER ;

rank_specifier ::=
   LEFTBRACK RIGHTBRACK |
   LEFTBRACK dim_separators RIGHTBRACK ;

rank_specifiers ::=
   rank_specifier |
   rank_specifiers rank_specifier ;

reference_type ::=
   class_type |
   interface_type |
   array_type |
   delegate_type ;

relational_expression ::=
   shift_expression |
   relational_expression LT shift_expression |
   relational_expression GT shift_expression |
   relational_expression LTEQ shift_expression |
   relational_expression GTEQ shift_expression |
   relational_expression IS type |
   relational_expression AS type ;

IS ::= new_line_opt `i`s;
AS ::= new_line_opt `a`s;

remove_accessor_declaration ::=
   REMOVE block |
   attributes REMOVE block ;

REMOVE ::= new_line_opt `r`e`m`o`v`e;

resource_acquisition ::=
   local_variable_declaration |
   expression ;

return_statement ::=
   RETURN SEMICOLON |
   RETURN expression SEMICOLON ;

RETURN ::= new_line_opt `r`e`t`u`r`n;

return_type ::=
   type |
   VOID ;

secondary_constraints ::=
   interface_type |
   type_parameter |
   secondary_constraints COMMA interface_type |
   secondary_constraints COMMA type_parameter ;

selection_statement ::=
   if_statement |
   switch_statement ;

set_accessor_declaration ::=
   SET accessor_body |
   accessor_modifier SET accessor_body |
   attributes SET accessor_body |
   attributes accessor_modifier SET accessor_body ;

shift_expression ::=
   additive_expression |
   shift_expression LTLT additive_expression |
   shift_expression GTGT additive_expression ;

simple_name ::=
   IDENTIFIER |
   IDENTIFIER type_argument_list ;

simple_type ::=
   numeric_type |
   BOOL ;

specific_catch_clause ::=
   CATCH LEFTPAR class_type RIGHTPAR block |
   CATCH LEFTPAR class_type IDENTIFIER RIGHTPAR block ;

specific_catch_clauses ::=
   specific_catch_clause |
   specific_catch_clauses specific_catch_clause ;

statement ::=
   labeled_statement |
   declaration_statement |
   embedded_statement ;

statement_expression ::=
   invocation_expression |
   object_creation_expression |
   assignment |
   post_increment_expression |
   post_decrement_expression |
   pre_increment_expression |
   pre_decrement_expression ;

statement_expression_list ::=
   statement_expression |
   statement_expression_list COMMA statement_expression ;

statement_list ::=
   statement |
   statement_list statement ;

static_constructor_body ::=
   block |
   SEMICOLON ;

static_constructor_declaration ::=
   static_constructor_modifiers IDENTIFIER LEFTPAR RIGHTPAR static_constructor_body |
   attributes static_constructor_modifiers IDENTIFIER LEFTPAR RIGHTPAR static_constructor_body ;

static_constructor_modifiers ::=
   STATIC |
   EXTERN STATIC |
   STATIC EXTERN ;

struct_body ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE struct_member_declarations RIGHTBRACE ;

struct_declaration ::=
   STRUCT IDENTIFIER struct_body |
   STRUCT IDENTIFIER struct_body SEMICOLON |
   STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   STRUCT IDENTIFIER struct_interfaces struct_body |
   STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   STRUCT IDENTIFIER type_parameter_list struct_body |
   STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER struct_body |
   PARTIAL STRUCT IDENTIFIER struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body |
   PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER struct_body |
   struct_modifiers STRUCT IDENTIFIER struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   struct_modifiers STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER struct_interfaces struct_body |
   struct_modifiers STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   struct_modifiers STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_body |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER struct_body |
   attributes STRUCT IDENTIFIER struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   attributes STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER struct_interfaces struct_body |
   attributes STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER type_parameter_list struct_body |
   attributes STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   attributes STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   attributes STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   attributes STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER struct_body |
   attributes PARTIAL STRUCT IDENTIFIER struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body |
   attributes PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER struct_interfaces struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list type_parameter_constraints_clauses struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces struct_body SEMICOLON |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body |
   attributes struct_modifiers PARTIAL STRUCT IDENTIFIER type_parameter_list struct_interfaces type_parameter_constraints_clauses struct_body SEMICOLON ;

struct_interfaces ::=
   COLON interface_type_list ;

struct_member_declaration ::=
   constant_declaration |
   field_declaration |
   method_declaration |
   property_declaration |
   event_declaration |
   indexer_declaration |
   operator_declaration |
   constructor_declaration |
   static_constructor_declaration |
   type_declaration ;

struct_member_declarations ::=
   struct_member_declaration |
   struct_member_declarations struct_member_declaration ;

struct_modifier ::=
   NEW |
   PUBLIC |
   PROTECTED |
   INTERNAL |
   PRIVATE ;

struct_modifiers ::=
   struct_modifier |
   struct_modifiers struct_modifier ;

struct_type ::=
   type_name |
   simple_type |
   nullable_type ;

switch_block ::=
   LEFTBRACE RIGHTBRACE |
   LEFTBRACE switch_sections RIGHTBRACE ;

switch_label ::=
   CASE constant_expression COLON |
   DEFAULT COLON ;

switch_labels ::=
   switch_label |
   switch_labels switch_label ;

switch_section ::=
   switch_labels statement_list ;

switch_sections ::=
   switch_section |
   switch_sections switch_section ;

switch_statement ::=
   SWITCH LEFTPAR expression RIGHTPAR switch_block ;

SWITCH ::= new_line_opt `s`w`i`t`c`h;

this_access ::=
   THIS ;

throw_statement ::=
   THROW SEMICOLON |
   THROW expression SEMICOLON ;

THROW ::= new_line_opt `t`h`r`o`w;

try_statement ::=
   TRY block catch_clauses |
   TRY block finally_clause |
   TRY block catch_clauses finally_clause ;

TRY ::= new_line_opt `t`r`y;

type ::=
   value_type |
   reference_type |
   type_parameter ;

type_argument ::=
   type ;

type_argument_list ::=
   LT type_arguments GT ;

type_arguments ::=
   type_argument |
   type_arguments COMMA type_argument ;

type_declaration ::=
   class_declaration |
   struct_declaration |
   interface_declaration |
   enum_declaration |
   delegate_declaration ;

type_name ::=
   namespace_or_type_name ;

type_parameter ::=
   IDENTIFIER ;

type_parameter_constraints ::=
   primary_constraint |
   secondary_constraints |
   constructor_constraint |
   primary_constraint COMMA secondary_constraints |
   primary_constraint COMMA constructor_constraint |
   secondary_constraints COMMA constructor_constraint |
   primary_constraint COMMA secondary_constraints COMMA constructor_constraint ;

type_parameter_constraints_clause ::=
   WHERE type_parameter COLON type_parameter_constraints ;

WHERE ::= new_line_opt `w`h`e`r`e;

type_parameter_constraints_clauses ::=
   type_parameter_constraints_clause |
   type_parameter_constraints_clauses type_parameter_constraints_clause ;

type_parameter_list ::=
   LT type_parameters GT ;

type_parameters ::=
   type_parameter |
   attributes type_parameter |
   type_parameters COMMA type_parameter |
   type_parameters COMMA attributes type_parameter ;

typeof_expression ::=
   TYPEOF LEFTPAR type RIGHTPAR |
   TYPEOF LEFTPAR unbound_type_name RIGHTPAR |
   TYPEOF LEFTPAR VOID RIGHTPAR ;

TYPEOF ::= new_line_opt `t`y`p`e`o`f;
VOID ::= new_line_opt `v`o`i`d;

unary_expression ::=
   primary_expression |
   PLUS unary_expression |
   MINUS unary_expression |
   EXC unary_expression |
   TILDE unary_expression |
   pre_increment_expression |
   pre_decrement_expression |
   cast_expression ;

unary_operator_declarator ::=
   type OPERATOR overloadable_unary_operator LEFTPAR type IDENTIFIER RIGHTPAR ;

unbound_type_name ::=
   IDENTIFIER |
   IDENTIFIER generic_dimension_specifier |
   IDENTIFIER COLONCOLON IDENTIFIER |
   IDENTIFIER COLONCOLON IDENTIFIER generic_dimension_specifier |
   unbound_type_name DOT IDENTIFIER |
   unbound_type_name DOT IDENTIFIER generic_dimension_specifier ;

unchecked_expression ::=
   UNCHECKED LEFTPAR expression RIGHTPAR ;

UNCHECKED ::= new_line_opt `u`n`c`h`e`c`k`e`d;

unchecked_statement ::=
   UNCHECKED block ;

using_alias_directive ::=
   USING IDENTIFIER EQ namespace_or_type_name SEMICOLON ;

USING ::= new_line_opt `u`s`i`n`g;

using_directive ::=
   using_alias_directive |
   using_namespace_directive ;

using_directives ::=
   using_directive |
   using_directives using_directive ;

using_namespace_directive ::=
   USING namespace_name SEMICOLON ;

using_statement ::=
   USING LEFTPAR resource_acquisition RIGHTPAR embedded_statement ;

value_type ::=
   struct_type |
   enum_type ;

variable_declarator ::=
   IDENTIFIER |
   IDENTIFIER EQ variable_initializer ;

variable_declarators ::=
   variable_declarator |
   variable_declarators COMMA variable_declarator ;

variable_initializer ::=
   expression |
   array_initializer ;

variable_initializer_list ::=
   variable_initializer |
   variable_initializer_list COMMA variable_initializer ;

variable_reference ::=
   expression ;

while_statement ::=
   WHILE LEFTPAR boolean_expression RIGHTPAR embedded_statement ;

yield_statement ::=
   YIELD RETURN expression SEMICOLON |
   YIELD BREAK SEMICOLON ;

YIELD ::= new_line_opt `y`i`e`l`d;

