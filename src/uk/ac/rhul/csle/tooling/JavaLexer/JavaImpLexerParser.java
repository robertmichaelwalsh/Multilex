package uk.ac.rhul.csle.tooling.JavaLexer;

import uk.ac.rhul.csle.text.DefaultTextHandler;
import uk.ac.rhul.csle.text.Text;

/*******************************************************************************
*
* JavaImpLexerParser.java
*
*******************************************************************************/
public class JavaImpLexerParser extends uk.ac.rhul.csle.gll.GLLHashPool {
	private static boolean[] ARTSet1;
	private static boolean[] ARTSet2;
	private static boolean[] ARTSet4;
	private static boolean[] ARTSet7;
	private static boolean[] ARTSet8;
	private static boolean[] ARTSet17;
	private static boolean[] ARTSet20;
	private static boolean[] ARTSet21;
	private static boolean[] ARTSet22;
	private static boolean[] ARTSet27;
	private static boolean[] ARTSet28;
	private static boolean[] ARTSet29;
	private static boolean[] ARTSet30;
	private static boolean[] ARTSet31;
	private static boolean[] ARTSet32;
	private static boolean[] ARTSet33;
	private static boolean[] ARTSet34;
	private static boolean[] ARTSet35;
	private static boolean[] ARTSet36;
	private static boolean[] ARTSet37;
	private static boolean[] ARTSet38;
	private static boolean[] ARTSet39;
	private static boolean[] ARTSet40;
	private static boolean[] ARTSet41;
	private static boolean[] ARTSet42;
	private static boolean[] ARTSet43;
	private static boolean[] ARTSet44;
	private static boolean[] ARTSet45;
	private static boolean[] ARTSet46;
	private static boolean[] ARTSet47;
	private static boolean[] ARTSet48;
	private static boolean[] ARTSet49;
	private static boolean[] ARTSet50;
	private static boolean[] ARTSet51;
	private static boolean[] ARTSet52;
	private static boolean[] ARTSet53;
	private static boolean[] ARTSet54;
	private static boolean[] ARTSet55;
	private static boolean[] ARTSet56;
	private static boolean[] ARTSet57;
	private static boolean[] ARTSet58;
	private static boolean[] ARTSet59;
	private static boolean[] ARTSet60;
	private static boolean[] ARTSet61;
	private static boolean[] ARTSet62;
	private static boolean[] ARTSet63;
	private static boolean[] ARTSet64;
	private static boolean[] ARTSet65;
	private static boolean[] ARTSet66;
	private static boolean[] ARTSet67;
	private static boolean[] ARTSet68;
	private static boolean[] ARTSet69;
	private static boolean[] ARTSet70;
	private static boolean[] ARTSet71;
	private static boolean[] ARTSet72;
	private static boolean[] ARTSet73;
	private static boolean[] ARTSet74;
	private static boolean[] ARTSet75;
	private static boolean[] ARTSet76;
	private static boolean[] ARTSet77;
	private static boolean[] ARTSet78;
	private static boolean[] ARTSet79;
	private static boolean[] ARTSet80;
	private static boolean[] ARTSet81;
	private static boolean[] ARTSet82;
	private static boolean[] ARTSet83;
	private static boolean[] ARTSet84;
	private static boolean[] ARTSet85;
	private static boolean[] ARTSet86;
	private static boolean[] ARTSet87;
	private static boolean[] ARTSet88;
	private static boolean[] ARTSet89;
	private static boolean[] ARTSet90;
	private static boolean[] ARTSet91;
	private static boolean[] ARTSet92;
	private static boolean[] ARTSet93;
	private static boolean[] ARTSet94;
	private static boolean[] ARTSet95;
	private static boolean[] ARTSet96;
	private static boolean[] ARTSet97;
	private static boolean[] ARTSet98;
	private static boolean[] ARTSet99;
	private static boolean[] ARTSet100;
	private static boolean[] ARTSet101;
	private static boolean[] ARTSet102;
	private static boolean[] ARTSet103;
	private static boolean[] ARTSet104;
	private static boolean[] ARTSet105;
	private static boolean[] ARTSet106;
	private static boolean[] ARTSet108;
	private static boolean[] ARTSet109;
	private static boolean[] ARTSet110;
	private static boolean[] ARTSet111;
	private static boolean[] ARTSet112;
	private static boolean[] ARTSet114;
	private static boolean[] ARTSet115;
	private static boolean[] ARTSet116;
	private static boolean[] ARTSet117;
	private static boolean[] ARTSet118;
	private static boolean[] ARTSet119;
	private static boolean[] ARTSet120;
	private static boolean[] ARTSet121;
	private static boolean[] ARTSet122;
	private static boolean[] ARTSet123;
	private static boolean[] ARTSet124;
	private static boolean[] ARTSet126;
	private static boolean[] ARTSet127;
	private static boolean[] ARTSet128;
	private static boolean[] ARTSet129;
	private static boolean[] ARTSet131;
	private static boolean[] ARTSet132;
	private static boolean[] ARTSet133;
	private static boolean[] ARTSet134;
	private static boolean[] ARTSet135;
	private static boolean[] ARTSet136;
	private static boolean[] ARTSet137;
	private static boolean[] ARTSet138;
	private static boolean[] ARTSet139;
	private static boolean[] ARTSet140;
	private static boolean[] ARTSet141;
	private static boolean[] ARTSet142;
	private static boolean[] ARTSet143;
	private static boolean[] ARTSet144;
	private static boolean[] ARTSet145;
	private static boolean[] ARTSet146;
	private static boolean[] ARTSet147;
	private static boolean[] ARTSet148;
	private static boolean[] ARTSet149;
	private static boolean[] ARTSet150;
	private static boolean[] ARTSet151;
	private static boolean[] ARTSet152;
	private static boolean[] ARTSet153;
	private static boolean[] ARTSet154;
	private static boolean[] ARTSet155;
	private static boolean[] ARTSet156;
	private static boolean[] ARTSet157;
	private static boolean[] ARTSet158;
	private static boolean[] ARTSet159;
	private static boolean[] ARTSet160;
	private static boolean[] ARTSet161;
	private static boolean[] ARTSet162;
	private static boolean[] ARTSet163;
	private static boolean[] ARTSet164;
	private static boolean[] ARTSet165;
	private static boolean[] ARTSet166;

	/* Start of artLabel enumeration */
	public static final int ART_X_EOS = 0;
	public static final int ART_TC_ = 1;
	public static final int ART_TC__BEL = 2;
	public static final int ART_TC__BS = 3;
	public static final int ART_TC__HT = 4;
	public static final int ART_TC__LF = 5;
	public static final int ART_TC__VT = 6;
	public static final int ART_TC__FF = 7;
	public static final int ART_TC__CR = 8;
	public static final int ART_TC__SPACE = 9;
	public static final int ART_TC__SHREIK = 10;
	public static final int ART_TC__DBLQUOTE = 11;
	public static final int ART_TC__HASH = 12;
	public static final int ART_TC__DOLLAR = 13;
	public static final int ART_TC__PERCENT = 14;
	public static final int ART_TC__AMPERSAND = 15;
	public static final int ART_TC__QUOTE = 16;
	public static final int ART_TC__LPAR = 17;
	public static final int ART_TC__RPAR = 18;
	public static final int ART_TC__STAR = 19;
	public static final int ART_TC__PLUS = 20;
	public static final int ART_TC__COMMA = 21;
	public static final int ART_TC__MINUS = 22;
	public static final int ART_TC__PERIOD = 23;
	public static final int ART_TC__SLASH = 24;
	public static final int ART_TC_0 = 25;
	public static final int ART_TC_1 = 26;
	public static final int ART_TC_2 = 27;
	public static final int ART_TC_3 = 28;
	public static final int ART_TC_4 = 29;
	public static final int ART_TC_5 = 30;
	public static final int ART_TC_6 = 31;
	public static final int ART_TC_7 = 32;
	public static final int ART_TC_8 = 33;
	public static final int ART_TC_9 = 34;
	public static final int ART_TC__COLON = 35;
	public static final int ART_TC__SEMICOLON = 36;
	public static final int ART_TC__LT = 37;
	public static final int ART_TC__EQUAL = 38;
	public static final int ART_TC__GT = 39;
	public static final int ART_TC__QUERY = 40;
	public static final int ART_TC__AT = 41;
	public static final int ART_TC_A = 42;
	public static final int ART_TC_B = 43;
	public static final int ART_TC_C = 44;
	public static final int ART_TC_D = 45;
	public static final int ART_TC_E = 46;
	public static final int ART_TC_F = 47;
	public static final int ART_TC_G = 48;
	public static final int ART_TC_H = 49;
	public static final int ART_TC_I = 50;
	public static final int ART_TC_J = 51;
	public static final int ART_TC_K = 52;
	public static final int ART_TC_L = 53;
	public static final int ART_TC_M = 54;
	public static final int ART_TC_N = 55;
	public static final int ART_TC_O = 56;
	public static final int ART_TC_P = 57;
	public static final int ART_TC_Q = 58;
	public static final int ART_TC_R = 59;
	public static final int ART_TC_S = 60;
	public static final int ART_TC_T = 61;
	public static final int ART_TC_U = 62;
	public static final int ART_TC_V = 63;
	public static final int ART_TC_W = 64;
	public static final int ART_TC_X = 65;
	public static final int ART_TC_Y = 66;
	public static final int ART_TC_Z = 67;
	public static final int ART_TC__LBRACK = 68;
	public static final int ART_TC__BACKSLASH = 69;
	public static final int ART_TC__RBRACK = 70;
	public static final int ART_TC__UPARROW = 71;
	public static final int ART_TC__ = 72;
	public static final int ART_TC__BACKQUOTE = 73;
	public static final int ART_TC_a = 74;
	public static final int ART_TC_b = 75;
	public static final int ART_TC_c = 76;
	public static final int ART_TC_d = 77;
	public static final int ART_TC_e = 78;
	public static final int ART_TC_f = 79;
	public static final int ART_TC_g = 80;
	public static final int ART_TC_h = 81;
	public static final int ART_TC_i = 82;
	public static final int ART_TC_j = 83;
	public static final int ART_TC_k = 84;
	public static final int ART_TC_l = 85;
	public static final int ART_TC_m = 86;
	public static final int ART_TC_n = 87;
	public static final int ART_TC_o = 88;
	public static final int ART_TC_p = 89;
	public static final int ART_TC_q = 90;
	public static final int ART_TC_r = 91;
	public static final int ART_TC_s = 92;
	public static final int ART_TC_t = 93;
	public static final int ART_TC_u = 94;
	public static final int ART_TC_v = 95;
	public static final int ART_TC_w = 96;
	public static final int ART_TC_x = 97;
	public static final int ART_TC_y = 98;
	public static final int ART_TC_z = 99;
	public static final int ART_TC__LBRACE = 100;
	public static final int ART_TC__BAR = 101;
	public static final int ART_TC__RBRACE = 102;
	public static final int ART_TC__TILDE = 103;
	public static final int ART_X_EPSILON = 104;
	public static final int ART_L_JavaLexerImp_input = 105;
	public static final int ART_L_JavaLexerImp_input_5 = 106;
	public static final int ART_L_JavaLexerImp_input_9 = 107;
	public static final int ART_L_JavaLexerImp_input_11 = 108;
	public static final int ART_L_JavaLexerImp_input_13 = 109;
	public static final int ART_L_JavaLexerImp_input_15 = 110;
	public static final int ART_L_JavaLexerImp_input_17 = 111;
	public static final int ART_L_JavaLexerImp_input_19 = 112;
	public static final int ART_L_JavaLexerImp_input_21 = 113;
	public static final int ART_L_JavaLexerImp_input_23 = 114;
	public static final int ART_L_JavaLexerImp_input_25 = 115;
	public static final int ART_L_JavaLexerImp_input_27 = 116;
	public static final int ART_L_JavaLexerImp_input_29 = 117;
	public static final int ART_L_JavaLexerImp_input_31 = 118;
	public static final int ART_L_JavaLexerImp_input_33 = 119;
	public static final int ART_L_JavaLexerImp_input_35 = 120;
	public static final int ART_L_JavaLexerImp_input_37 = 121;
	public static final int ART_L_JavaLexerImp_input_39 = 122;
	public static final int ART_L_JavaLexerImp_input_41 = 123;
	public static final int ART_L_JavaLexerImp_input_43 = 124;
	public static final int ART_L_JavaLexerImp_input_45 = 125;
	public static final int ART_L_JavaLexerImp_input_47 = 126;
	public static final int ART_L_JavaLexerImp_input_49 = 127;
	public static final int ART_L_JavaLexerImp_input_51 = 128;
	public static final int ART_L_JavaLexerImp_input_53 = 129;
	public static final int ART_L_JavaLexerImp_input_55 = 130;
	public static final int ART_L_JavaLexerImp_input_57 = 131;
	public static final int ART_L_JavaLexerImp_input_59 = 132;
	public static final int ART_L_JavaLexerImp_input_61 = 133;
	public static final int ART_L_JavaLexerImp_input_63 = 134;
	public static final int ART_L_JavaLexerImp_input_65 = 135;
	public static final int ART_L_JavaLexerImp_input_67 = 136;
	public static final int ART_L_JavaLexerImp_input_69 = 137;
	public static final int ART_L_JavaLexerImp_input_71 = 138;
	public static final int ART_L_JavaLexerImp_input_73 = 139;
	public static final int ART_L_JavaLexerImp_input_75 = 140;
	public static final int ART_L_JavaLexerImp_input_77 = 141;
	public static final int ART_L_JavaLexerImp_input_79 = 142;
	public static final int ART_L_JavaLexerImp_input_81 = 143;
	public static final int ART_L_JavaLexerImp_input_83 = 144;
	public static final int ART_L_JavaLexerImp_input_85 = 145;
	public static final int ART_L_JavaLexerImp_input_87 = 146;
	public static final int ART_L_JavaLexerImp_input_89 = 147;
	public static final int ART_L_JavaLexerImp_input_91 = 148;
	public static final int ART_L_JavaLexerImp_input_93 = 149;
	public static final int ART_L_JavaLexerImp_input_95 = 150;
	public static final int ART_L_JavaLexerImp_input_97 = 151;
	public static final int ART_L_JavaLexerImp_input_99 = 152;
	public static final int ART_L_JavaLexerImp_input_101 = 153;
	public static final int ART_L_JavaLexerImp_input_103 = 154;
	public static final int ART_L_JavaLexerImp_input_105 = 155;
	public static final int ART_L_JavaLexerImp_input_107 = 156;
	public static final int ART_L_JavaLexerImp_input_109 = 157;
	public static final int ART_L_JavaLexerImp_input_111 = 158;
	public static final int ART_L_JavaLexerImp_input_113 = 159;
	public static final int ART_L_JavaLexerImp_input_115 = 160;
	public static final int ART_L_JavaLexerImp_input_117 = 161;
	public static final int ART_L_JavaLexerImp_input_119 = 162;
	public static final int ART_L_JavaLexerImp_input_121 = 163;
	public static final int ART_L_JavaLexerImp_input_123 = 164;
	public static final int ART_L_JavaLexerImp_input_125 = 165;
	public static final int ART_L_JavaLexerImp_input_127 = 166;
	public static final int ART_L_JavaLexerImp_input_129 = 167;
	public static final int ART_L_JavaLexerImp_input_131 = 168;
	public static final int ART_L_JavaLexerImp_input_133 = 169;
	public static final int ART_L_JavaLexerImp_input_135 = 170;
	public static final int ART_L_JavaLexerImp_input_137 = 171;
	public static final int ART_L_JavaLexerImp_input_139 = 172;
	public static final int ART_L_JavaLexerImp_input_141 = 173;
	public static final int ART_L_JavaLexerImp_input_143 = 174;
	public static final int ART_L_JavaLexerImp_input_145 = 175;
	public static final int ART_L_JavaLexerImp_input_147 = 176;
	public static final int ART_L_JavaLexerImp_input_149 = 177;
	public static final int ART_L_JavaLexerImp_input_151 = 178;
	public static final int ART_L_JavaLexerImp_input_153 = 179;
	public static final int ART_L_JavaLexerImp_input_155 = 180;
	public static final int ART_L_JavaLexerImp_input_157 = 181;
	public static final int ART_L_JavaLexerImp_input_159 = 182;
	public static final int ART_L_JavaLexerImp_input_161 = 183;
	public static final int ART_L_JavaLexerImp_input_163 = 184;
	public static final int ART_L_JavaLexerImp_input_165 = 185;
	public static final int ART_L_JavaLexerImp_input_167 = 186;
	public static final int ART_L_JavaLexerImp_input_169 = 187;
	public static final int ART_L_JavaLexerImp_input_171 = 188;
	public static final int ART_L_JavaLexerImp_input_173 = 189;
	public static final int ART_L_JavaLexerImp_input_175 = 190;
	public static final int ART_L_JavaLexerImp_input_177 = 191;
	public static final int ART_L_JavaLexerImp_input_179 = 192;
	public static final int ART_L_JavaLexerImp_input_181 = 193;
	public static final int ART_L_JavaLexerImp_input_183 = 194;
	public static final int ART_L_JavaLexerImp_input_185 = 195;
	public static final int ART_L_JavaLexerImp_input_187 = 196;
	public static final int ART_L_JavaLexerImp_input_189 = 197;
	public static final int ART_L_JavaLexerImp_input_191 = 198;
	public static final int ART_L_JavaLexerImp_input_193 = 199;
	public static final int ART_L_JavaLexerImp_input_195 = 200;
	public static final int ART_L_JavaLexerImp_input_197 = 201;
	public static final int ART_L_JavaLexerImp_input_199 = 202;
	public static final int ART_L_JavaLexerImp_input_201 = 203;
	public static final int ART_L_JavaLexerImp_input_203 = 204;
	public static final int ART_L_JavaLexerImp_input_205 = 205;
	public static final int ART_L_JavaLexerImp_input_207 = 206;
	public static final int ART_L_JavaLexerImp_input_209 = 207;
	public static final int ART_L_JavaLexerImp_input_211 = 208;
	public static final int ART_L_JavaLexerImp_input_213 = 209;
	public static final int ART_L_JavaLexerImp_input_215 = 210;
	public static final int ART_L_JavaLexerImp_input_217 = 211;
	public static final int ART_L_JavaLexerImp_input_219 = 212;
	public static final int ART_L_JavaLexerImp_input_221 = 213;
	public static final int ART_L_JavaLexerImp_input_223 = 214;
	public static final int ART_L_JavaLexerImp_input_225 = 215;
	public static final int ART_L_JavaLexerImp_input_227 = 216;
	public static final int ART_L_JavaLexerImp_input_229 = 217;
	public static final int ART_L_JavaLexerImp_input_231 = 218;
	public static final int ART_L_JavaLexerImp_input_233 = 219;
	public static final int ART_L_JavaLexerImp_input_235 = 220;
	public static final int ART_L_JavaLexerImp_input_237 = 221;
	public static final int ART_L_JavaLexerImp_input_239 = 222;
	public static final int ART_L_JavaLexerImp_input_241 = 223;
	public static final int ART_L_JavaLexerImp_input_243 = 224;
	public static final int ART_L_JavaLexerImp_input_245 = 225;
	public static final int ART_L_JavaLexerImp_input_247 = 226;
	public static final int ART_L_JavaLexerImp_input_249 = 227;
	public static final int ART_L_JavaLexerImp_input_251 = 228;
	public static final int ART_L_JavaLexerImp_input_252 = 229;
	public static final int ART_L_JavaLexerImp_abstract = 230;
	public static final int ART_L_JavaLexerImp_abstract_255 = 231;
	public static final int ART_L_JavaLexerImp_assert = 232;
	public static final int ART_L_JavaLexerImp_assert_274 = 233;
	public static final int ART_L_JavaLexerImp_boolean = 234;
	public static final int ART_L_JavaLexerImp_boolean_289 = 235;
	public static final int ART_L_JavaLexerImp_break = 236;
	public static final int ART_L_JavaLexerImp_break_306 = 237;
	public static final int ART_L_JavaLexerImp_byte = 238;
	public static final int ART_L_JavaLexerImp_byte_319 = 239;
	public static final int ART_L_JavaLexerImp_case = 240;
	public static final int ART_L_JavaLexerImp_case_330 = 241;
	public static final int ART_L_JavaLexerImp_catch = 242;
	public static final int ART_L_JavaLexerImp_catch_341 = 243;
	public static final int ART_L_JavaLexerImp_char = 244;
	public static final int ART_L_JavaLexerImp_char_354 = 245;
	public static final int ART_L_JavaLexerImp_class = 246;
	public static final int ART_L_JavaLexerImp_class_365 = 247;
	public static final int ART_L_JavaLexerImp_const = 248;
	public static final int ART_L_JavaLexerImp_const_378 = 249;
	public static final int ART_L_JavaLexerImp_continue = 250;
	public static final int ART_L_JavaLexerImp_continue_391 = 251;
	public static final int ART_L_JavaLexerImp_default = 252;
	public static final int ART_L_JavaLexerImp_default_410 = 253;
	public static final int ART_L_JavaLexerImp_do = 254;
	public static final int ART_L_JavaLexerImp_do_427 = 255;
	public static final int ART_L_JavaLexerImp_double = 256;
	public static final int ART_L_JavaLexerImp_double_434 = 257;
	public static final int ART_L_JavaLexerImp_else = 258;
	public static final int ART_L_JavaLexerImp_else_449 = 259;
	public static final int ART_L_JavaLexerImp_enum = 260;
	public static final int ART_L_JavaLexerImp_enum_460 = 261;
	public static final int ART_L_JavaLexerImp_extends = 262;
	public static final int ART_L_JavaLexerImp_extends_471 = 263;
	public static final int ART_L_JavaLexerImp_final = 264;
	public static final int ART_L_JavaLexerImp_final_488 = 265;
	public static final int ART_L_JavaLexerImp_finally = 266;
	public static final int ART_L_JavaLexerImp_finally_501 = 267;
	public static final int ART_L_JavaLexerImp_float = 268;
	public static final int ART_L_JavaLexerImp_float_518 = 269;
	public static final int ART_L_JavaLexerImp_for = 270;
	public static final int ART_L_JavaLexerImp_for_531 = 271;
	public static final int ART_L_JavaLexerImp_if = 272;
	public static final int ART_L_JavaLexerImp_if_540 = 273;
	public static final int ART_L_JavaLexerImp_goto = 274;
	public static final int ART_L_JavaLexerImp_goto_547 = 275;
	public static final int ART_L_JavaLexerImp_implements = 276;
	public static final int ART_L_JavaLexerImp_implements_558 = 277;
	public static final int ART_L_JavaLexerImp_import = 278;
	public static final int ART_L_JavaLexerImp_import_581 = 279;
	public static final int ART_L_JavaLexerImp_instanceof = 280;
	public static final int ART_L_JavaLexerImp_instanceof_596 = 281;
	public static final int ART_L_JavaLexerImp_int = 282;
	public static final int ART_L_JavaLexerImp_int_619 = 283;
	public static final int ART_L_JavaLexerImp_interface = 284;
	public static final int ART_L_JavaLexerImp_interface_628 = 285;
	public static final int ART_L_JavaLexerImp_long = 286;
	public static final int ART_L_JavaLexerImp_long_649 = 287;
	public static final int ART_L_JavaLexerImp_native = 288;
	public static final int ART_L_JavaLexerImp_native_660 = 289;
	public static final int ART_L_JavaLexerImp_new = 290;
	public static final int ART_L_JavaLexerImp_new_675 = 291;
	public static final int ART_L_JavaLexerImp_package = 292;
	public static final int ART_L_JavaLexerImp_package_684 = 293;
	public static final int ART_L_JavaLexerImp_private = 294;
	public static final int ART_L_JavaLexerImp_private_701 = 295;
	public static final int ART_L_JavaLexerImp_protected = 296;
	public static final int ART_L_JavaLexerImp_protected_718 = 297;
	public static final int ART_L_JavaLexerImp_public = 298;
	public static final int ART_L_JavaLexerImp_public_739 = 299;
	public static final int ART_L_JavaLexerImp_return = 300;
	public static final int ART_L_JavaLexerImp_return_754 = 301;
	public static final int ART_L_JavaLexerImp_short = 302;
	public static final int ART_L_JavaLexerImp_short_769 = 303;
	public static final int ART_L_JavaLexerImp_static = 304;
	public static final int ART_L_JavaLexerImp_static_782 = 305;
	public static final int ART_L_JavaLexerImp_strictfp = 306;
	public static final int ART_L_JavaLexerImp_strictfp_797 = 307;
	public static final int ART_L_JavaLexerImp_super = 308;
	public static final int ART_L_JavaLexerImp_super_816 = 309;
	public static final int ART_L_JavaLexerImp_switch = 310;
	public static final int ART_L_JavaLexerImp_switch_829 = 311;
	public static final int ART_L_JavaLexerImp_synchronized = 312;
	public static final int ART_L_JavaLexerImp_synchronized_844 = 313;
	public static final int ART_L_JavaLexerImp_this = 314;
	public static final int ART_L_JavaLexerImp_this_871 = 315;
	public static final int ART_L_JavaLexerImp_throw = 316;
	public static final int ART_L_JavaLexerImp_throw_882 = 317;
	public static final int ART_L_JavaLexerImp_throws = 318;
	public static final int ART_L_JavaLexerImp_throws_895 = 319;
	public static final int ART_L_JavaLexerImp_transient = 320;
	public static final int ART_L_JavaLexerImp_transient_910 = 321;
	public static final int ART_L_JavaLexerImp_try = 322;
	public static final int ART_L_JavaLexerImp_try_931 = 323;
	public static final int ART_L_JavaLexerImp_void = 324;
	public static final int ART_L_JavaLexerImp_void_940 = 325;
	public static final int ART_L_JavaLexerImp_volatile = 326;
	public static final int ART_L_JavaLexerImp_volatile_951 = 327;
	public static final int ART_L_JavaLexerImp_while = 328;
	public static final int ART_L_JavaLexerImp_while_970 = 329;
	public static final int ART_L_JavaLexerImp_WS = 330;
	public static final int ART_L_JavaLexerImp_WS_983 = 331;
	public static final int ART_L_JavaLexerImp_WS_987 = 332;
	public static final int ART_L_JavaLexerImp_WS_991 = 333;
	public static final int ART_L_JavaLexerImp_WS_997 = 334;
	public static final int ART_L_JavaLexerImp_WS_1001 = 335;
	public static final int ART_L_JavaLexerImp_WS_1005 = 336;
	public static final int ART_L_JavaLexerImp_COMMENT = 337;
	public static final int ART_L_JavaLexerImp_COMMENT_1010 = 338;
	public static final int ART_L_JavaLexerImp_COMMENT_1019 = 339;
	public static final int ART_L_JavaLexerImp_COMMENT_1020 = 340;
	public static final int ART_L_JavaLexerImp_COMMENT_1022 = 341;
	public static final int ART_L_JavaLexerImp_COMMENT_1030 = 342;
	public static final int ART_L_JavaLexerImp_COMMENT_1032 = 343;
	public static final int ART_L_JavaLexerImp_COMMENT_1034 = 344;
	public static final int ART_L_JavaLexerImp_COMMENT_1040 = 345;
	public static final int ART_L_JavaLexerImp_COMMENT_1042 = 346;
	public static final int ART_L_JavaLexerImp_COMMENT_1043 = 347;
	public static final int ART_L_JavaLexerImp_COMMENT_1049 = 348;
	public static final int ART_L_JavaLexerImp_input_character = 349;
	public static final int ART_L_JavaLexerImp_input_character_1054 = 350;
	public static final int ART_L_JavaLexerImp_input_character_1058 = 351;
	public static final int ART_L_JavaLexerImp_input_character_1062 = 352;
	public static final int ART_L_JavaLexerImp_input_character_1066 = 353;
	public static final int ART_L_JavaLexerImp_input_character_1070 = 354;
	public static final int ART_L_JavaLexerImp_input_character_1074 = 355;
	public static final int ART_L_JavaLexerImp_input_character_1078 = 356;
	public static final int ART_L_JavaLexerImp_input_character_1082 = 357;
	public static final int ART_L_JavaLexerImp_input_character_1086 = 358;
	public static final int ART_L_JavaLexerImp_input_character_1090 = 359;
	public static final int ART_L_JavaLexerImp_input_character_1094 = 360;
	public static final int ART_L_JavaLexerImp_input_character_1098 = 361;
	public static final int ART_L_JavaLexerImp_input_character_1102 = 362;
	public static final int ART_L_JavaLexerImp_input_character_1106 = 363;
	public static final int ART_L_JavaLexerImp_input_character_1110 = 364;
	public static final int ART_L_JavaLexerImp_input_character_1114 = 365;
	public static final int ART_L_JavaLexerImp_input_character_1118 = 366;
	public static final int ART_L_JavaLexerImp_input_character_1122 = 367;
	public static final int ART_L_JavaLexerImp_input_character_1126 = 368;
	public static final int ART_L_JavaLexerImp_input_character_1130 = 369;
	public static final int ART_L_JavaLexerImp_input_character_1134 = 370;
	public static final int ART_L_JavaLexerImp_input_character_1138 = 371;
	public static final int ART_L_JavaLexerImp_input_character_1142 = 372;
	public static final int ART_L_JavaLexerImp_input_character_1146 = 373;
	public static final int ART_L_JavaLexerImp_input_character_1150 = 374;
	public static final int ART_L_JavaLexerImp_input_character_1154 = 375;
	public static final int ART_L_JavaLexerImp_input_character_1158 = 376;
	public static final int ART_L_JavaLexerImp_input_character_1162 = 377;
	public static final int ART_L_JavaLexerImp_input_character_1166 = 378;
	public static final int ART_L_JavaLexerImp_input_character_1170 = 379;
	public static final int ART_L_JavaLexerImp_input_character_1174 = 380;
	public static final int ART_L_JavaLexerImp_input_character_1178 = 381;
	public static final int ART_L_JavaLexerImp_input_character_1182 = 382;
	public static final int ART_L_JavaLexerImp_input_character_1186 = 383;
	public static final int ART_L_JavaLexerImp_input_character_1190 = 384;
	public static final int ART_L_JavaLexerImp_input_character_1194 = 385;
	public static final int ART_L_JavaLexerImp_input_character_1198 = 386;
	public static final int ART_L_JavaLexerImp_input_character_1202 = 387;
	public static final int ART_L_JavaLexerImp_input_character_1206 = 388;
	public static final int ART_L_JavaLexerImp_input_character_1210 = 389;
	public static final int ART_L_JavaLexerImp_input_character_1214 = 390;
	public static final int ART_L_JavaLexerImp_input_character_1218 = 391;
	public static final int ART_L_JavaLexerImp_input_character_1222 = 392;
	public static final int ART_L_JavaLexerImp_input_character_1226 = 393;
	public static final int ART_L_JavaLexerImp_input_character_1230 = 394;
	public static final int ART_L_JavaLexerImp_input_character_1234 = 395;
	public static final int ART_L_JavaLexerImp_input_character_1238 = 396;
	public static final int ART_L_JavaLexerImp_input_character_1242 = 397;
	public static final int ART_L_JavaLexerImp_input_character_1246 = 398;
	public static final int ART_L_JavaLexerImp_input_character_1250 = 399;
	public static final int ART_L_JavaLexerImp_input_character_1254 = 400;
	public static final int ART_L_JavaLexerImp_input_character_1258 = 401;
	public static final int ART_L_JavaLexerImp_input_character_1262 = 402;
	public static final int ART_L_JavaLexerImp_input_character_1266 = 403;
	public static final int ART_L_JavaLexerImp_input_character_1270 = 404;
	public static final int ART_L_JavaLexerImp_input_character_1274 = 405;
	public static final int ART_L_JavaLexerImp_input_character_1278 = 406;
	public static final int ART_L_JavaLexerImp_input_character_1282 = 407;
	public static final int ART_L_JavaLexerImp_input_character_1286 = 408;
	public static final int ART_L_JavaLexerImp_input_character_1290 = 409;
	public static final int ART_L_JavaLexerImp_input_character_1294 = 410;
	public static final int ART_L_JavaLexerImp_input_character_1298 = 411;
	public static final int ART_L_JavaLexerImp_input_character_1302 = 412;
	public static final int ART_L_JavaLexerImp_input_character_1306 = 413;
	public static final int ART_L_JavaLexerImp_input_character_1310 = 414;
	public static final int ART_L_JavaLexerImp_input_character_1314 = 415;
	public static final int ART_L_JavaLexerImp_input_character_1318 = 416;
	public static final int ART_L_JavaLexerImp_input_character_1322 = 417;
	public static final int ART_L_JavaLexerImp_input_character_1326 = 418;
	public static final int ART_L_JavaLexerImp_input_character_1330 = 419;
	public static final int ART_L_JavaLexerImp_input_character_1334 = 420;
	public static final int ART_L_JavaLexerImp_input_character_1338 = 421;
	public static final int ART_L_JavaLexerImp_input_character_1342 = 422;
	public static final int ART_L_JavaLexerImp_input_character_1346 = 423;
	public static final int ART_L_JavaLexerImp_input_character_1350 = 424;
	public static final int ART_L_JavaLexerImp_input_character_1354 = 425;
	public static final int ART_L_JavaLexerImp_input_character_1358 = 426;
	public static final int ART_L_JavaLexerImp_input_character_1362 = 427;
	public static final int ART_L_JavaLexerImp_input_character_1366 = 428;
	public static final int ART_L_JavaLexerImp_input_character_1370 = 429;
	public static final int ART_L_JavaLexerImp_input_character_1374 = 430;
	public static final int ART_L_JavaLexerImp_input_character_1378 = 431;
	public static final int ART_L_JavaLexerImp_input_character_1382 = 432;
	public static final int ART_L_JavaLexerImp_input_character_1386 = 433;
	public static final int ART_L_JavaLexerImp_input_character_1390 = 434;
	public static final int ART_L_JavaLexerImp_input_character_1394 = 435;
	public static final int ART_L_JavaLexerImp_input_character_1398 = 436;
	public static final int ART_L_JavaLexerImp_input_character_1402 = 437;
	public static final int ART_L_JavaLexerImp_input_character_1406 = 438;
	public static final int ART_L_JavaLexerImp_input_character_1410 = 439;
	public static final int ART_L_JavaLexerImp_input_character_1414 = 440;
	public static final int ART_L_JavaLexerImp_input_character_1418 = 441;
	public static final int ART_L_JavaLexerImp_input_character_1422 = 442;
	public static final int ART_L_JavaLexerImp_input_character_1426 = 443;
	public static final int ART_L_JavaLexerImp_input_character_1430 = 444;
	public static final int ART_L_JavaLexerImp_input_character_1434 = 445;
	public static final int ART_L_JavaLexerImp_input_character_1438 = 446;
	public static final int ART_L_JavaLexerImp_input_character_1442 = 447;
	public static final int ART_L_JavaLexerImp_input_character_1446 = 448;
	public static final int ART_L_JavaLexerImp_input_character_1450 = 449;
	public static final int ART_L_JavaLexerImp_input_character_1454 = 450;
	public static final int ART_L_JavaLexerImp_new_line_character = 451;
	public static final int ART_L_JavaLexerImp_new_line_character_1459 = 452;
	public static final int ART_L_JavaLexerImp_new_line_character_1463 = 453;
	public static final int ART_L_JavaLexerImp_not_asterisk = 454;
	public static final int ART_L_JavaLexerImp_not_asterisk_1468 = 455;
	public static final int ART_L_JavaLexerImp_not_asterisk_1472 = 456;
	public static final int ART_L_JavaLexerImp_not_asterisk_1476 = 457;
	public static final int ART_L_JavaLexerImp_not_asterisk_1480 = 458;
	public static final int ART_L_JavaLexerImp_not_asterisk_1484 = 459;
	public static final int ART_L_JavaLexerImp_not_asterisk_1488 = 460;
	public static final int ART_L_JavaLexerImp_not_asterisk_1492 = 461;
	public static final int ART_L_JavaLexerImp_not_asterisk_1496 = 462;
	public static final int ART_L_JavaLexerImp_not_asterisk_1500 = 463;
	public static final int ART_L_JavaLexerImp_not_asterisk_1504 = 464;
	public static final int ART_L_JavaLexerImp_not_asterisk_1508 = 465;
	public static final int ART_L_JavaLexerImp_not_asterisk_1512 = 466;
	public static final int ART_L_JavaLexerImp_not_asterisk_1516 = 467;
	public static final int ART_L_JavaLexerImp_not_asterisk_1520 = 468;
	public static final int ART_L_JavaLexerImp_not_asterisk_1524 = 469;
	public static final int ART_L_JavaLexerImp_not_asterisk_1528 = 470;
	public static final int ART_L_JavaLexerImp_not_asterisk_1532 = 471;
	public static final int ART_L_JavaLexerImp_not_asterisk_1536 = 472;
	public static final int ART_L_JavaLexerImp_not_asterisk_1540 = 473;
	public static final int ART_L_JavaLexerImp_not_asterisk_1544 = 474;
	public static final int ART_L_JavaLexerImp_not_asterisk_1548 = 475;
	public static final int ART_L_JavaLexerImp_not_asterisk_1552 = 476;
	public static final int ART_L_JavaLexerImp_not_asterisk_1556 = 477;
	public static final int ART_L_JavaLexerImp_not_asterisk_1560 = 478;
	public static final int ART_L_JavaLexerImp_not_asterisk_1564 = 479;
	public static final int ART_L_JavaLexerImp_not_asterisk_1568 = 480;
	public static final int ART_L_JavaLexerImp_not_asterisk_1572 = 481;
	public static final int ART_L_JavaLexerImp_not_asterisk_1576 = 482;
	public static final int ART_L_JavaLexerImp_not_asterisk_1580 = 483;
	public static final int ART_L_JavaLexerImp_not_asterisk_1584 = 484;
	public static final int ART_L_JavaLexerImp_not_asterisk_1588 = 485;
	public static final int ART_L_JavaLexerImp_not_asterisk_1592 = 486;
	public static final int ART_L_JavaLexerImp_not_asterisk_1596 = 487;
	public static final int ART_L_JavaLexerImp_not_asterisk_1600 = 488;
	public static final int ART_L_JavaLexerImp_not_asterisk_1604 = 489;
	public static final int ART_L_JavaLexerImp_not_asterisk_1608 = 490;
	public static final int ART_L_JavaLexerImp_not_asterisk_1612 = 491;
	public static final int ART_L_JavaLexerImp_not_asterisk_1616 = 492;
	public static final int ART_L_JavaLexerImp_not_asterisk_1620 = 493;
	public static final int ART_L_JavaLexerImp_not_asterisk_1624 = 494;
	public static final int ART_L_JavaLexerImp_not_asterisk_1628 = 495;
	public static final int ART_L_JavaLexerImp_not_asterisk_1632 = 496;
	public static final int ART_L_JavaLexerImp_not_asterisk_1636 = 497;
	public static final int ART_L_JavaLexerImp_not_asterisk_1640 = 498;
	public static final int ART_L_JavaLexerImp_not_asterisk_1644 = 499;
	public static final int ART_L_JavaLexerImp_not_asterisk_1648 = 500;
	public static final int ART_L_JavaLexerImp_not_asterisk_1652 = 501;
	public static final int ART_L_JavaLexerImp_not_asterisk_1656 = 502;
	public static final int ART_L_JavaLexerImp_not_asterisk_1660 = 503;
	public static final int ART_L_JavaLexerImp_not_asterisk_1664 = 504;
	public static final int ART_L_JavaLexerImp_not_asterisk_1668 = 505;
	public static final int ART_L_JavaLexerImp_not_asterisk_1672 = 506;
	public static final int ART_L_JavaLexerImp_not_asterisk_1676 = 507;
	public static final int ART_L_JavaLexerImp_not_asterisk_1680 = 508;
	public static final int ART_L_JavaLexerImp_not_asterisk_1684 = 509;
	public static final int ART_L_JavaLexerImp_not_asterisk_1688 = 510;
	public static final int ART_L_JavaLexerImp_not_asterisk_1692 = 511;
	public static final int ART_L_JavaLexerImp_not_asterisk_1696 = 512;
	public static final int ART_L_JavaLexerImp_not_asterisk_1700 = 513;
	public static final int ART_L_JavaLexerImp_not_asterisk_1704 = 514;
	public static final int ART_L_JavaLexerImp_not_asterisk_1708 = 515;
	public static final int ART_L_JavaLexerImp_not_asterisk_1712 = 516;
	public static final int ART_L_JavaLexerImp_not_asterisk_1716 = 517;
	public static final int ART_L_JavaLexerImp_not_asterisk_1720 = 518;
	public static final int ART_L_JavaLexerImp_not_asterisk_1724 = 519;
	public static final int ART_L_JavaLexerImp_not_asterisk_1728 = 520;
	public static final int ART_L_JavaLexerImp_not_asterisk_1732 = 521;
	public static final int ART_L_JavaLexerImp_not_asterisk_1736 = 522;
	public static final int ART_L_JavaLexerImp_not_asterisk_1740 = 523;
	public static final int ART_L_JavaLexerImp_not_asterisk_1744 = 524;
	public static final int ART_L_JavaLexerImp_not_asterisk_1748 = 525;
	public static final int ART_L_JavaLexerImp_not_asterisk_1752 = 526;
	public static final int ART_L_JavaLexerImp_not_asterisk_1756 = 527;
	public static final int ART_L_JavaLexerImp_not_asterisk_1760 = 528;
	public static final int ART_L_JavaLexerImp_not_asterisk_1764 = 529;
	public static final int ART_L_JavaLexerImp_not_asterisk_1768 = 530;
	public static final int ART_L_JavaLexerImp_not_asterisk_1772 = 531;
	public static final int ART_L_JavaLexerImp_not_asterisk_1776 = 532;
	public static final int ART_L_JavaLexerImp_not_asterisk_1780 = 533;
	public static final int ART_L_JavaLexerImp_not_asterisk_1784 = 534;
	public static final int ART_L_JavaLexerImp_not_asterisk_1788 = 535;
	public static final int ART_L_JavaLexerImp_not_asterisk_1792 = 536;
	public static final int ART_L_JavaLexerImp_not_asterisk_1796 = 537;
	public static final int ART_L_JavaLexerImp_not_asterisk_1800 = 538;
	public static final int ART_L_JavaLexerImp_not_asterisk_1804 = 539;
	public static final int ART_L_JavaLexerImp_not_asterisk_1808 = 540;
	public static final int ART_L_JavaLexerImp_not_asterisk_1812 = 541;
	public static final int ART_L_JavaLexerImp_not_asterisk_1816 = 542;
	public static final int ART_L_JavaLexerImp_not_asterisk_1820 = 543;
	public static final int ART_L_JavaLexerImp_not_asterisk_1824 = 544;
	public static final int ART_L_JavaLexerImp_not_asterisk_1828 = 545;
	public static final int ART_L_JavaLexerImp_not_asterisk_1832 = 546;
	public static final int ART_L_JavaLexerImp_not_asterisk_1836 = 547;
	public static final int ART_L_JavaLexerImp_not_asterisk_1840 = 548;
	public static final int ART_L_JavaLexerImp_not_asterisk_1844 = 549;
	public static final int ART_L_JavaLexerImp_not_asterisk_1848 = 550;
	public static final int ART_L_JavaLexerImp_not_asterisk_1852 = 551;
	public static final int ART_L_JavaLexerImp_not_asterisk_1856 = 552;
	public static final int ART_L_JavaLexerImp_not_asterisk_1860 = 553;
	public static final int ART_L_JavaLexerImp_not_asterisk_1864 = 554;
	public static final int ART_L_JavaLexerImp_not_asterisk_1868 = 555;
	public static final int ART_L_JavaLexerImp_not_asterisk_1872 = 556;
	public static final int ART_L_JavaLexerImp_not_slash = 557;
	public static final int ART_L_JavaLexerImp_not_slash_1877 = 558;
	public static final int ART_L_JavaLexerImp_not_slash_1881 = 559;
	public static final int ART_L_JavaLexerImp_not_slash_1885 = 560;
	public static final int ART_L_JavaLexerImp_not_slash_1889 = 561;
	public static final int ART_L_JavaLexerImp_not_slash_1893 = 562;
	public static final int ART_L_JavaLexerImp_not_slash_1897 = 563;
	public static final int ART_L_JavaLexerImp_not_slash_1901 = 564;
	public static final int ART_L_JavaLexerImp_not_slash_1905 = 565;
	public static final int ART_L_JavaLexerImp_not_slash_1909 = 566;
	public static final int ART_L_JavaLexerImp_not_slash_1913 = 567;
	public static final int ART_L_JavaLexerImp_not_slash_1917 = 568;
	public static final int ART_L_JavaLexerImp_not_slash_1921 = 569;
	public static final int ART_L_JavaLexerImp_not_slash_1925 = 570;
	public static final int ART_L_JavaLexerImp_not_slash_1929 = 571;
	public static final int ART_L_JavaLexerImp_not_slash_1933 = 572;
	public static final int ART_L_JavaLexerImp_not_slash_1937 = 573;
	public static final int ART_L_JavaLexerImp_not_slash_1941 = 574;
	public static final int ART_L_JavaLexerImp_not_slash_1945 = 575;
	public static final int ART_L_JavaLexerImp_not_slash_1949 = 576;
	public static final int ART_L_JavaLexerImp_not_slash_1953 = 577;
	public static final int ART_L_JavaLexerImp_not_slash_1957 = 578;
	public static final int ART_L_JavaLexerImp_not_slash_1961 = 579;
	public static final int ART_L_JavaLexerImp_not_slash_1965 = 580;
	public static final int ART_L_JavaLexerImp_not_slash_1969 = 581;
	public static final int ART_L_JavaLexerImp_not_slash_1973 = 582;
	public static final int ART_L_JavaLexerImp_not_slash_1977 = 583;
	public static final int ART_L_JavaLexerImp_not_slash_1981 = 584;
	public static final int ART_L_JavaLexerImp_not_slash_1985 = 585;
	public static final int ART_L_JavaLexerImp_not_slash_1989 = 586;
	public static final int ART_L_JavaLexerImp_not_slash_1993 = 587;
	public static final int ART_L_JavaLexerImp_not_slash_1997 = 588;
	public static final int ART_L_JavaLexerImp_not_slash_2001 = 589;
	public static final int ART_L_JavaLexerImp_not_slash_2005 = 590;
	public static final int ART_L_JavaLexerImp_not_slash_2009 = 591;
	public static final int ART_L_JavaLexerImp_not_slash_2013 = 592;
	public static final int ART_L_JavaLexerImp_not_slash_2017 = 593;
	public static final int ART_L_JavaLexerImp_not_slash_2021 = 594;
	public static final int ART_L_JavaLexerImp_not_slash_2025 = 595;
	public static final int ART_L_JavaLexerImp_not_slash_2029 = 596;
	public static final int ART_L_JavaLexerImp_not_slash_2033 = 597;
	public static final int ART_L_JavaLexerImp_not_slash_2037 = 598;
	public static final int ART_L_JavaLexerImp_not_slash_2041 = 599;
	public static final int ART_L_JavaLexerImp_not_slash_2045 = 600;
	public static final int ART_L_JavaLexerImp_not_slash_2049 = 601;
	public static final int ART_L_JavaLexerImp_not_slash_2053 = 602;
	public static final int ART_L_JavaLexerImp_not_slash_2057 = 603;
	public static final int ART_L_JavaLexerImp_not_slash_2061 = 604;
	public static final int ART_L_JavaLexerImp_not_slash_2065 = 605;
	public static final int ART_L_JavaLexerImp_not_slash_2069 = 606;
	public static final int ART_L_JavaLexerImp_not_slash_2073 = 607;
	public static final int ART_L_JavaLexerImp_not_slash_2077 = 608;
	public static final int ART_L_JavaLexerImp_not_slash_2081 = 609;
	public static final int ART_L_JavaLexerImp_not_slash_2085 = 610;
	public static final int ART_L_JavaLexerImp_not_slash_2089 = 611;
	public static final int ART_L_JavaLexerImp_not_slash_2093 = 612;
	public static final int ART_L_JavaLexerImp_not_slash_2097 = 613;
	public static final int ART_L_JavaLexerImp_not_slash_2101 = 614;
	public static final int ART_L_JavaLexerImp_not_slash_2105 = 615;
	public static final int ART_L_JavaLexerImp_not_slash_2109 = 616;
	public static final int ART_L_JavaLexerImp_not_slash_2113 = 617;
	public static final int ART_L_JavaLexerImp_not_slash_2117 = 618;
	public static final int ART_L_JavaLexerImp_not_slash_2121 = 619;
	public static final int ART_L_JavaLexerImp_not_slash_2125 = 620;
	public static final int ART_L_JavaLexerImp_not_slash_2129 = 621;
	public static final int ART_L_JavaLexerImp_not_slash_2133 = 622;
	public static final int ART_L_JavaLexerImp_not_slash_2137 = 623;
	public static final int ART_L_JavaLexerImp_not_slash_2141 = 624;
	public static final int ART_L_JavaLexerImp_not_slash_2145 = 625;
	public static final int ART_L_JavaLexerImp_not_slash_2149 = 626;
	public static final int ART_L_JavaLexerImp_not_slash_2153 = 627;
	public static final int ART_L_JavaLexerImp_not_slash_2157 = 628;
	public static final int ART_L_JavaLexerImp_not_slash_2161 = 629;
	public static final int ART_L_JavaLexerImp_not_slash_2165 = 630;
	public static final int ART_L_JavaLexerImp_not_slash_2169 = 631;
	public static final int ART_L_JavaLexerImp_not_slash_2173 = 632;
	public static final int ART_L_JavaLexerImp_not_slash_2177 = 633;
	public static final int ART_L_JavaLexerImp_not_slash_2181 = 634;
	public static final int ART_L_JavaLexerImp_not_slash_2185 = 635;
	public static final int ART_L_JavaLexerImp_not_slash_2189 = 636;
	public static final int ART_L_JavaLexerImp_not_slash_2193 = 637;
	public static final int ART_L_JavaLexerImp_not_slash_2197 = 638;
	public static final int ART_L_JavaLexerImp_not_slash_2201 = 639;
	public static final int ART_L_JavaLexerImp_not_slash_2205 = 640;
	public static final int ART_L_JavaLexerImp_not_slash_2209 = 641;
	public static final int ART_L_JavaLexerImp_not_slash_2213 = 642;
	public static final int ART_L_JavaLexerImp_not_slash_2217 = 643;
	public static final int ART_L_JavaLexerImp_not_slash_2221 = 644;
	public static final int ART_L_JavaLexerImp_not_slash_2225 = 645;
	public static final int ART_L_JavaLexerImp_not_slash_2229 = 646;
	public static final int ART_L_JavaLexerImp_not_slash_2233 = 647;
	public static final int ART_L_JavaLexerImp_not_slash_2237 = 648;
	public static final int ART_L_JavaLexerImp_not_slash_2241 = 649;
	public static final int ART_L_JavaLexerImp_not_slash_2245 = 650;
	public static final int ART_L_JavaLexerImp_not_slash_2249 = 651;
	public static final int ART_L_JavaLexerImp_not_slash_2253 = 652;
	public static final int ART_L_JavaLexerImp_not_slash_2257 = 653;
	public static final int ART_L_JavaLexerImp_not_slash_2261 = 654;
	public static final int ART_L_JavaLexerImp_not_slash_2265 = 655;
	public static final int ART_L_JavaLexerImp_not_slash_2269 = 656;
	public static final int ART_L_JavaLexerImp_not_slash_2273 = 657;
	public static final int ART_L_JavaLexerImp_not_slash_2277 = 658;
	public static final int ART_L_JavaLexerImp_not_slash_2281 = 659;
	public static final int ART_L_JavaLexerImp_ID = 660;
	public static final int ART_L_JavaLexerImp_ID_2286 = 661;
	public static final int ART_L_JavaLexerImp_ID_2290 = 662;
	public static final int ART_L_JavaLexerImp_ID_2292 = 663;
	public static final int ART_L_JavaLexerImp_ID_2294 = 664;
	public static final int ART_L_JavaLexerImp_ID_2302 = 665;
	public static final int ART_L_JavaLexerImp_ID_2303 = 666;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence = 667;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2306 = 668;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2312 = 669;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2314 = 670;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2316 = 671;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2318 = 672;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2320 = 673;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2326 = 674;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2328 = 675;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2330 = 676;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2332 = 677;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2334 = 678;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2336 = 679;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2338 = 680;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2340 = 681;
	public static final int ART_L_JavaLexerImp_letter_character = 682;
	public static final int ART_L_JavaLexerImp_letter_character_2343 = 683;
	public static final int ART_L_JavaLexerImp_letter_character_2347 = 684;
	public static final int ART_L_JavaLexerImp_letter_character_2351 = 685;
	public static final int ART_L_JavaLexerImp_letter_character_2355 = 686;
	public static final int ART_L_JavaLexerImp_letter_character_2359 = 687;
	public static final int ART_L_JavaLexerImp_letter_character_2363 = 688;
	public static final int ART_L_JavaLexerImp_letter_character_2367 = 689;
	public static final int ART_L_JavaLexerImp_letter_character_2371 = 690;
	public static final int ART_L_JavaLexerImp_letter_character_2375 = 691;
	public static final int ART_L_JavaLexerImp_letter_character_2379 = 692;
	public static final int ART_L_JavaLexerImp_letter_character_2383 = 693;
	public static final int ART_L_JavaLexerImp_letter_character_2387 = 694;
	public static final int ART_L_JavaLexerImp_letter_character_2391 = 695;
	public static final int ART_L_JavaLexerImp_letter_character_2395 = 696;
	public static final int ART_L_JavaLexerImp_letter_character_2399 = 697;
	public static final int ART_L_JavaLexerImp_letter_character_2403 = 698;
	public static final int ART_L_JavaLexerImp_letter_character_2407 = 699;
	public static final int ART_L_JavaLexerImp_letter_character_2411 = 700;
	public static final int ART_L_JavaLexerImp_letter_character_2415 = 701;
	public static final int ART_L_JavaLexerImp_letter_character_2419 = 702;
	public static final int ART_L_JavaLexerImp_letter_character_2423 = 703;
	public static final int ART_L_JavaLexerImp_letter_character_2427 = 704;
	public static final int ART_L_JavaLexerImp_letter_character_2431 = 705;
	public static final int ART_L_JavaLexerImp_letter_character_2435 = 706;
	public static final int ART_L_JavaLexerImp_letter_character_2439 = 707;
	public static final int ART_L_JavaLexerImp_letter_character_2443 = 708;
	public static final int ART_L_JavaLexerImp_letter_character_2447 = 709;
	public static final int ART_L_JavaLexerImp_letter_character_2451 = 710;
	public static final int ART_L_JavaLexerImp_letter_character_2455 = 711;
	public static final int ART_L_JavaLexerImp_letter_character_2459 = 712;
	public static final int ART_L_JavaLexerImp_letter_character_2463 = 713;
	public static final int ART_L_JavaLexerImp_letter_character_2467 = 714;
	public static final int ART_L_JavaLexerImp_letter_character_2471 = 715;
	public static final int ART_L_JavaLexerImp_letter_character_2475 = 716;
	public static final int ART_L_JavaLexerImp_letter_character_2479 = 717;
	public static final int ART_L_JavaLexerImp_letter_character_2483 = 718;
	public static final int ART_L_JavaLexerImp_letter_character_2487 = 719;
	public static final int ART_L_JavaLexerImp_letter_character_2491 = 720;
	public static final int ART_L_JavaLexerImp_letter_character_2495 = 721;
	public static final int ART_L_JavaLexerImp_letter_character_2499 = 722;
	public static final int ART_L_JavaLexerImp_letter_character_2503 = 723;
	public static final int ART_L_JavaLexerImp_letter_character_2507 = 724;
	public static final int ART_L_JavaLexerImp_letter_character_2511 = 725;
	public static final int ART_L_JavaLexerImp_letter_character_2515 = 726;
	public static final int ART_L_JavaLexerImp_letter_character_2519 = 727;
	public static final int ART_L_JavaLexerImp_letter_character_2523 = 728;
	public static final int ART_L_JavaLexerImp_letter_character_2527 = 729;
	public static final int ART_L_JavaLexerImp_letter_character_2531 = 730;
	public static final int ART_L_JavaLexerImp_letter_character_2535 = 731;
	public static final int ART_L_JavaLexerImp_letter_character_2539 = 732;
	public static final int ART_L_JavaLexerImp_letter_character_2543 = 733;
	public static final int ART_L_JavaLexerImp_letter_character_2547 = 734;
	public static final int ART_L_JavaLexerImp_identifier_part_character = 735;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2552 = 736;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2556 = 737;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2560 = 738;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2564 = 739;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2568 = 740;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2572 = 741;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2576 = 742;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2580 = 743;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2584 = 744;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2588 = 745;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2592 = 746;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2596 = 747;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2600 = 748;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2604 = 749;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2608 = 750;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2612 = 751;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2616 = 752;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2620 = 753;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2624 = 754;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2628 = 755;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2632 = 756;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2636 = 757;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2640 = 758;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2644 = 759;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2648 = 760;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2652 = 761;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2656 = 762;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2660 = 763;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2664 = 764;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2668 = 765;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2672 = 766;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2676 = 767;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2680 = 768;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2684 = 769;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2688 = 770;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2692 = 771;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2696 = 772;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2700 = 773;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2704 = 774;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2708 = 775;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2712 = 776;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2716 = 777;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2720 = 778;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2724 = 779;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2728 = 780;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2732 = 781;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2736 = 782;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2740 = 783;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2744 = 784;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2748 = 785;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2752 = 786;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2756 = 787;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2760 = 788;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2764 = 789;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2768 = 790;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2772 = 791;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2776 = 792;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2780 = 793;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2784 = 794;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2788 = 795;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2792 = 796;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2796 = 797;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2800 = 798;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2804 = 799;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2806 = 800;
	public static final int ART_L_JavaLexerImp_INT = 801;
	public static final int ART_L_JavaLexerImp_INT_2809 = 802;
	public static final int ART_L_JavaLexerImp_INT_2813 = 803;
	public static final int ART_L_JavaLexerImp_INT_2817 = 804;
	public static final int ART_L_JavaLexerImp_INT_2820 = 805;
	public static final int ART_L_JavaLexerImp_INT_2824 = 806;
	public static final int ART_L_JavaLexerImp_INT_2830 = 807;
	public static final int ART_L_JavaLexerImp_INT_2834 = 808;
	public static final int ART_L_JavaLexerImp_INT_2839 = 809;
	public static final int ART_L_JavaLexerImp_INT_2841 = 810;
	public static final int ART_L_JavaLexerImp_INT_2845 = 811;
	public static final int ART_L_JavaLexerImp_INT_2847 = 812;
	public static final int ART_L_JavaLexerImp_INT_2852 = 813;
	public static final int ART_L_JavaLexerImp_INT_2853 = 814;
	public static final int ART_L_JavaLexerImp_INT_2855 = 815;
	public static final int ART_L_JavaLexerImp_INT_2857 = 816;
	public static final int ART_L_JavaLexerImp_INT_2859 = 817;
	public static final int ART_L_JavaLexerImp_INT_2861 = 818;
	public static final int ART_L_JavaLexerImp_INT_2863 = 819;
	public static final int ART_L_JavaLexerImp_INT_2867 = 820;
	public static final int ART_L_JavaLexerImp_INT_2869 = 821;
	public static final int ART_L_JavaLexerImp_INT_2873 = 822;
	public static final int ART_L_JavaLexerImp_INT_2875 = 823;
	public static final int ART_L_JavaLexerImp_INT_2877 = 824;
	public static final int ART_L_JavaLexerImp_INT_2883 = 825;
	public static final int ART_L_JavaLexerImp_INT_2887 = 826;
	public static final int ART_L_JavaLexerImp_INT_2892 = 827;
	public static final int ART_L_JavaLexerImp_INT_2897 = 828;
	public static final int ART_L_JavaLexerImp_INT_2901 = 829;
	public static final int ART_L_JavaLexerImp_INT_2904 = 830;
	public static final int ART_L_JavaLexerImp_non_zero_digit = 831;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2907 = 832;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2911 = 833;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2915 = 834;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2919 = 835;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2923 = 836;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2927 = 837;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2931 = 838;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2935 = 839;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2939 = 840;
	public static final int ART_L_JavaLexerImp_digits = 841;
	public static final int ART_L_JavaLexerImp_digits_2944 = 842;
	public static final int ART_L_JavaLexerImp_digits_2946 = 843;
	public static final int ART_L_JavaLexerImp_digits_2948 = 844;
	public static final int ART_L_JavaLexerImp_digits_2950 = 845;
	public static final int ART_L_JavaLexerImp_digits_2955 = 846;
	public static final int ART_L_JavaLexerImp_digits_2956 = 847;
	public static final int ART_L_JavaLexerImp_digits_2958 = 848;
	public static final int ART_L_JavaLexerImp_digit = 849;
	public static final int ART_L_JavaLexerImp_digit_2961 = 850;
	public static final int ART_L_JavaLexerImp_digit_2965 = 851;
	public static final int ART_L_JavaLexerImp_digit_2967 = 852;
	public static final int ART_L_JavaLexerImp_digit_and_underscores = 853;
	public static final int ART_L_JavaLexerImp_digit_and_underscores_2970 = 854;
	public static final int ART_L_JavaLexerImp_digit_and_underscores_2972 = 855;
	public static final int ART_L_JavaLexerImp_digit_and_underscores_2974 = 856;
	public static final int ART_L_JavaLexerImp_digit_and_underscores_2976 = 857;
	public static final int ART_L_JavaLexerImp_digit_and_underscores_2978 = 858;
	public static final int ART_L_JavaLexerImp_digit_or_underscore = 859;
	public static final int ART_L_JavaLexerImp_digit_or_underscore_2981 = 860;
	public static final int ART_L_JavaLexerImp_digit_or_underscore_2983 = 861;
	public static final int ART_L_JavaLexerImp_digit_or_underscore_2985 = 862;
	public static final int ART_L_JavaLexerImp_underscores = 863;
	public static final int ART_L_JavaLexerImp_underscores_2990 = 864;
	public static final int ART_L_JavaLexerImp_underscores_2994 = 865;
	public static final int ART_L_JavaLexerImp_underscores_2996 = 866;
	public static final int ART_L_JavaLexerImp_hex_digits = 867;
	public static final int ART_L_JavaLexerImp_hex_digits_3001 = 868;
	public static final int ART_L_JavaLexerImp_hex_digits_3003 = 869;
	public static final int ART_L_JavaLexerImp_hex_digits_3005 = 870;
	public static final int ART_L_JavaLexerImp_hex_digits_3007 = 871;
	public static final int ART_L_JavaLexerImp_hex_digits_3012 = 872;
	public static final int ART_L_JavaLexerImp_hex_digits_3013 = 873;
	public static final int ART_L_JavaLexerImp_hex_digits_3015 = 874;
	public static final int ART_L_JavaLexerImp_hex_digit = 875;
	public static final int ART_L_JavaLexerImp_hex_digit_3018 = 876;
	public static final int ART_L_JavaLexerImp_hex_digit_3022 = 877;
	public static final int ART_L_JavaLexerImp_hex_digit_3026 = 878;
	public static final int ART_L_JavaLexerImp_hex_digit_3030 = 879;
	public static final int ART_L_JavaLexerImp_hex_digit_3034 = 880;
	public static final int ART_L_JavaLexerImp_hex_digit_3038 = 881;
	public static final int ART_L_JavaLexerImp_hex_digit_3042 = 882;
	public static final int ART_L_JavaLexerImp_hex_digit_3046 = 883;
	public static final int ART_L_JavaLexerImp_hex_digit_3050 = 884;
	public static final int ART_L_JavaLexerImp_hex_digit_3054 = 885;
	public static final int ART_L_JavaLexerImp_hex_digit_3058 = 886;
	public static final int ART_L_JavaLexerImp_hex_digit_3062 = 887;
	public static final int ART_L_JavaLexerImp_hex_digit_3066 = 888;
	public static final int ART_L_JavaLexerImp_hex_digit_3070 = 889;
	public static final int ART_L_JavaLexerImp_hex_digit_3074 = 890;
	public static final int ART_L_JavaLexerImp_hex_digit_3078 = 891;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores = 892;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores_3083 = 893;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores_3085 = 894;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores_3087 = 895;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores_3089 = 896;
	public static final int ART_L_JavaLexerImp_hex_digits_and_underscores_3091 = 897;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore = 898;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore_3094 = 899;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore_3096 = 900;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore_3098 = 901;
	public static final int ART_L_JavaLexerImp_octal_digits = 902;
	public static final int ART_L_JavaLexerImp_octal_digits_3103 = 903;
	public static final int ART_L_JavaLexerImp_octal_digits_3105 = 904;
	public static final int ART_L_JavaLexerImp_octal_digits_3107 = 905;
	public static final int ART_L_JavaLexerImp_octal_digits_3109 = 906;
	public static final int ART_L_JavaLexerImp_octal_digits_3114 = 907;
	public static final int ART_L_JavaLexerImp_octal_digits_3115 = 908;
	public static final int ART_L_JavaLexerImp_octal_digits_3117 = 909;
	public static final int ART_L_JavaLexerImp_octal_digit = 910;
	public static final int ART_L_JavaLexerImp_octal_digit_3120 = 911;
	public static final int ART_L_JavaLexerImp_octal_digit_3124 = 912;
	public static final int ART_L_JavaLexerImp_octal_digit_3128 = 913;
	public static final int ART_L_JavaLexerImp_octal_digit_3132 = 914;
	public static final int ART_L_JavaLexerImp_octal_digit_3136 = 915;
	public static final int ART_L_JavaLexerImp_octal_digit_3140 = 916;
	public static final int ART_L_JavaLexerImp_octal_digit_3144 = 917;
	public static final int ART_L_JavaLexerImp_octal_digit_3148 = 918;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores = 919;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores_3153 = 920;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores_3155 = 921;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores_3157 = 922;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores_3159 = 923;
	public static final int ART_L_JavaLexerImp_octal_digits_and_underscores_3161 = 924;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore = 925;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore_3164 = 926;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore_3166 = 927;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore_3168 = 928;
	public static final int ART_L_JavaLexerImp_binary_digits = 929;
	public static final int ART_L_JavaLexerImp_binary_digits_3173 = 930;
	public static final int ART_L_JavaLexerImp_binary_digits_3175 = 931;
	public static final int ART_L_JavaLexerImp_binary_digits_3177 = 932;
	public static final int ART_L_JavaLexerImp_binary_digits_3179 = 933;
	public static final int ART_L_JavaLexerImp_binary_digits_3184 = 934;
	public static final int ART_L_JavaLexerImp_binary_digits_3185 = 935;
	public static final int ART_L_JavaLexerImp_binary_digits_3187 = 936;
	public static final int ART_L_JavaLexerImp_binary_digit = 937;
	public static final int ART_L_JavaLexerImp_binary_digit_3190 = 938;
	public static final int ART_L_JavaLexerImp_binary_digit_3194 = 939;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores = 940;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores_3199 = 941;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores_3201 = 942;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores_3203 = 943;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores_3205 = 944;
	public static final int ART_L_JavaLexerImp_binary_digit_and_underscores_3207 = 945;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore = 946;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore_3210 = 947;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore_3212 = 948;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore_3214 = 949;
	public static final int ART_L_JavaLexerImp_FLOAT = 950;
	public static final int ART_L_JavaLexerImp_FLOAT_3219 = 951;
	public static final int ART_L_JavaLexerImp_FLOAT_3221 = 952;
	public static final int ART_L_JavaLexerImp_FLOAT_3228 = 953;
	public static final int ART_L_JavaLexerImp_FLOAT_3229 = 954;
	public static final int ART_L_JavaLexerImp_FLOAT_3234 = 955;
	public static final int ART_L_JavaLexerImp_FLOAT_3235 = 956;
	public static final int ART_L_JavaLexerImp_FLOAT_3240 = 957;
	public static final int ART_L_JavaLexerImp_FLOAT_3241 = 958;
	public static final int ART_L_JavaLexerImp_FLOAT_3243 = 959;
	public static final int ART_L_JavaLexerImp_FLOAT_3247 = 960;
	public static final int ART_L_JavaLexerImp_FLOAT_3252 = 961;
	public static final int ART_L_JavaLexerImp_FLOAT_3253 = 962;
	public static final int ART_L_JavaLexerImp_FLOAT_3258 = 963;
	public static final int ART_L_JavaLexerImp_FLOAT_3259 = 964;
	public static final int ART_L_JavaLexerImp_FLOAT_3261 = 965;
	public static final int ART_L_JavaLexerImp_FLOAT_3263 = 966;
	public static final int ART_L_JavaLexerImp_FLOAT_3265 = 967;
	public static final int ART_L_JavaLexerImp_FLOAT_3270 = 968;
	public static final int ART_L_JavaLexerImp_FLOAT_3271 = 969;
	public static final int ART_L_JavaLexerImp_FLOAT_3273 = 970;
	public static final int ART_L_JavaLexerImp_FLOAT_3275 = 971;
	public static final int ART_L_JavaLexerImp_FLOAT_3280 = 972;
	public static final int ART_L_JavaLexerImp_FLOAT_3281 = 973;
	public static final int ART_L_JavaLexerImp_FLOAT_3283 = 974;
	public static final int ART_L_JavaLexerImp_FLOAT_3285 = 975;
	public static final int ART_L_JavaLexerImp_FLOAT_3287 = 976;
	public static final int ART_L_JavaLexerImp_FLOAT_3289 = 977;
	public static final int ART_L_JavaLexerImp_FLOAT_3294 = 978;
	public static final int ART_L_JavaLexerImp_FLOAT_3295 = 979;
	public static final int ART_L_JavaLexerImp_exponent_part = 980;
	public static final int ART_L_JavaLexerImp_exponent_part_3298 = 981;
	public static final int ART_L_JavaLexerImp_exponent_part_3302 = 982;
	public static final int ART_L_JavaLexerImp_exponent_part_3306 = 983;
	public static final int ART_L_JavaLexerImp_exponent_part_3313 = 984;
	public static final int ART_L_JavaLexerImp_exponent_part_3317 = 985;
	public static final int ART_L_JavaLexerImp_exponent_part_3320 = 986;
	public static final int ART_L_JavaLexerImp_exponent_part_3322 = 987;
	public static final int ART_L_JavaLexerImp_float_type_suffix = 988;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3325 = 989;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3329 = 990;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3333 = 991;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3337 = 992;
	public static final int ART_L_JavaLexerImp_hex_significand = 993;
	public static final int ART_L_JavaLexerImp_hex_significand_3342 = 994;
	public static final int ART_L_JavaLexerImp_hex_significand_3348 = 995;
	public static final int ART_L_JavaLexerImp_hex_significand_3352 = 996;
	public static final int ART_L_JavaLexerImp_hex_significand_3357 = 997;
	public static final int ART_L_JavaLexerImp_hex_significand_3359 = 998;
	public static final int ART_L_JavaLexerImp_hex_significand_3365 = 999;
	public static final int ART_L_JavaLexerImp_hex_significand_3369 = 1000;
	public static final int ART_L_JavaLexerImp_hex_significand_3374 = 1001;
	public static final int ART_L_JavaLexerImp_hex_significand_3378 = 1002;
	public static final int ART_L_JavaLexerImp_hex_significand_3384 = 1003;
	public static final int ART_L_JavaLexerImp_hex_significand_3388 = 1004;
	public static final int ART_L_JavaLexerImp_hex_significand_3396 = 1005;
	public static final int ART_L_JavaLexerImp_hex_significand_3397 = 1006;
	public static final int ART_L_JavaLexerImp_hex_significand_3401 = 1007;
	public static final int ART_L_JavaLexerImp_binary_exponent = 1008;
	public static final int ART_L_JavaLexerImp_binary_exponent_3404 = 1009;
	public static final int ART_L_JavaLexerImp_binary_exponent_3408 = 1010;
	public static final int ART_L_JavaLexerImp_binary_exponent_3412 = 1011;
	public static final int ART_L_JavaLexerImp_binary_exponent_3419 = 1012;
	public static final int ART_L_JavaLexerImp_binary_exponent_3423 = 1013;
	public static final int ART_L_JavaLexerImp_binary_exponent_3426 = 1014;
	public static final int ART_L_JavaLexerImp_binary_exponent_3428 = 1015;
	public static final int ART_L_JavaLexerImp_BOOL = 1016;
	public static final int ART_L_JavaLexerImp_BOOL_3431 = 1017;
	public static final int ART_L_JavaLexerImp_BOOL_3441 = 1018;
	public static final int ART_L_JavaLexerImp_CHAR = 1019;
	public static final int ART_L_JavaLexerImp_CHAR_3454 = 1020;
	public static final int ART_L_JavaLexerImp_CHAR_3458 = 1021;
	public static final int ART_L_JavaLexerImp_character = 1022;
	public static final int ART_L_JavaLexerImp_character_3463 = 1023;
	public static final int ART_L_JavaLexerImp_character_3465 = 1024;
	public static final int ART_L_JavaLexerImp_character_3467 = 1025;
	public static final int ART_L_JavaLexerImp_character_3469 = 1026;
	public static final int ART_L_JavaLexerImp_character_3471 = 1027;
	public static final int ART_L_JavaLexerImp_character_3473 = 1028;
	public static final int ART_L_JavaLexerImp_character_3475 = 1029;
	public static final int ART_L_JavaLexerImp_character_3477 = 1030;
	public static final int ART_L_JavaLexerImp_single_character = 1031;
	public static final int ART_L_JavaLexerImp_single_character_3480 = 1032;
	public static final int ART_L_JavaLexerImp_single_character_3484 = 1033;
	public static final int ART_L_JavaLexerImp_single_character_3488 = 1034;
	public static final int ART_L_JavaLexerImp_single_character_3492 = 1035;
	public static final int ART_L_JavaLexerImp_single_character_3496 = 1036;
	public static final int ART_L_JavaLexerImp_single_character_3500 = 1037;
	public static final int ART_L_JavaLexerImp_single_character_3504 = 1038;
	public static final int ART_L_JavaLexerImp_single_character_3508 = 1039;
	public static final int ART_L_JavaLexerImp_single_character_3512 = 1040;
	public static final int ART_L_JavaLexerImp_single_character_3516 = 1041;
	public static final int ART_L_JavaLexerImp_single_character_3520 = 1042;
	public static final int ART_L_JavaLexerImp_single_character_3524 = 1043;
	public static final int ART_L_JavaLexerImp_single_character_3528 = 1044;
	public static final int ART_L_JavaLexerImp_single_character_3532 = 1045;
	public static final int ART_L_JavaLexerImp_single_character_3536 = 1046;
	public static final int ART_L_JavaLexerImp_single_character_3540 = 1047;
	public static final int ART_L_JavaLexerImp_single_character_3544 = 1048;
	public static final int ART_L_JavaLexerImp_single_character_3548 = 1049;
	public static final int ART_L_JavaLexerImp_single_character_3552 = 1050;
	public static final int ART_L_JavaLexerImp_single_character_3556 = 1051;
	public static final int ART_L_JavaLexerImp_single_character_3560 = 1052;
	public static final int ART_L_JavaLexerImp_single_character_3564 = 1053;
	public static final int ART_L_JavaLexerImp_single_character_3568 = 1054;
	public static final int ART_L_JavaLexerImp_single_character_3572 = 1055;
	public static final int ART_L_JavaLexerImp_single_character_3576 = 1056;
	public static final int ART_L_JavaLexerImp_single_character_3580 = 1057;
	public static final int ART_L_JavaLexerImp_single_character_3584 = 1058;
	public static final int ART_L_JavaLexerImp_single_character_3588 = 1059;
	public static final int ART_L_JavaLexerImp_single_character_3592 = 1060;
	public static final int ART_L_JavaLexerImp_single_character_3596 = 1061;
	public static final int ART_L_JavaLexerImp_single_character_3600 = 1062;
	public static final int ART_L_JavaLexerImp_single_character_3604 = 1063;
	public static final int ART_L_JavaLexerImp_single_character_3608 = 1064;
	public static final int ART_L_JavaLexerImp_single_character_3612 = 1065;
	public static final int ART_L_JavaLexerImp_single_character_3616 = 1066;
	public static final int ART_L_JavaLexerImp_single_character_3620 = 1067;
	public static final int ART_L_JavaLexerImp_single_character_3624 = 1068;
	public static final int ART_L_JavaLexerImp_single_character_3628 = 1069;
	public static final int ART_L_JavaLexerImp_single_character_3632 = 1070;
	public static final int ART_L_JavaLexerImp_single_character_3636 = 1071;
	public static final int ART_L_JavaLexerImp_single_character_3640 = 1072;
	public static final int ART_L_JavaLexerImp_single_character_3644 = 1073;
	public static final int ART_L_JavaLexerImp_single_character_3648 = 1074;
	public static final int ART_L_JavaLexerImp_single_character_3652 = 1075;
	public static final int ART_L_JavaLexerImp_single_character_3656 = 1076;
	public static final int ART_L_JavaLexerImp_single_character_3660 = 1077;
	public static final int ART_L_JavaLexerImp_single_character_3664 = 1078;
	public static final int ART_L_JavaLexerImp_single_character_3668 = 1079;
	public static final int ART_L_JavaLexerImp_single_character_3672 = 1080;
	public static final int ART_L_JavaLexerImp_single_character_3676 = 1081;
	public static final int ART_L_JavaLexerImp_single_character_3680 = 1082;
	public static final int ART_L_JavaLexerImp_single_character_3684 = 1083;
	public static final int ART_L_JavaLexerImp_single_character_3688 = 1084;
	public static final int ART_L_JavaLexerImp_single_character_3692 = 1085;
	public static final int ART_L_JavaLexerImp_single_character_3696 = 1086;
	public static final int ART_L_JavaLexerImp_single_character_3700 = 1087;
	public static final int ART_L_JavaLexerImp_single_character_3704 = 1088;
	public static final int ART_L_JavaLexerImp_single_character_3708 = 1089;
	public static final int ART_L_JavaLexerImp_single_character_3712 = 1090;
	public static final int ART_L_JavaLexerImp_single_character_3716 = 1091;
	public static final int ART_L_JavaLexerImp_single_character_3720 = 1092;
	public static final int ART_L_JavaLexerImp_single_character_3724 = 1093;
	public static final int ART_L_JavaLexerImp_single_character_3728 = 1094;
	public static final int ART_L_JavaLexerImp_single_character_3732 = 1095;
	public static final int ART_L_JavaLexerImp_single_character_3736 = 1096;
	public static final int ART_L_JavaLexerImp_single_character_3740 = 1097;
	public static final int ART_L_JavaLexerImp_single_character_3744 = 1098;
	public static final int ART_L_JavaLexerImp_single_character_3748 = 1099;
	public static final int ART_L_JavaLexerImp_single_character_3752 = 1100;
	public static final int ART_L_JavaLexerImp_single_character_3756 = 1101;
	public static final int ART_L_JavaLexerImp_single_character_3760 = 1102;
	public static final int ART_L_JavaLexerImp_single_character_3764 = 1103;
	public static final int ART_L_JavaLexerImp_single_character_3768 = 1104;
	public static final int ART_L_JavaLexerImp_single_character_3772 = 1105;
	public static final int ART_L_JavaLexerImp_single_character_3776 = 1106;
	public static final int ART_L_JavaLexerImp_single_character_3780 = 1107;
	public static final int ART_L_JavaLexerImp_single_character_3784 = 1108;
	public static final int ART_L_JavaLexerImp_single_character_3788 = 1109;
	public static final int ART_L_JavaLexerImp_single_character_3792 = 1110;
	public static final int ART_L_JavaLexerImp_single_character_3796 = 1111;
	public static final int ART_L_JavaLexerImp_single_character_3800 = 1112;
	public static final int ART_L_JavaLexerImp_single_character_3804 = 1113;
	public static final int ART_L_JavaLexerImp_single_character_3808 = 1114;
	public static final int ART_L_JavaLexerImp_single_character_3812 = 1115;
	public static final int ART_L_JavaLexerImp_single_character_3816 = 1116;
	public static final int ART_L_JavaLexerImp_single_character_3820 = 1117;
	public static final int ART_L_JavaLexerImp_single_character_3824 = 1118;
	public static final int ART_L_JavaLexerImp_single_character_3828 = 1119;
	public static final int ART_L_JavaLexerImp_single_character_3832 = 1120;
	public static final int ART_L_JavaLexerImp_single_character_3836 = 1121;
	public static final int ART_L_JavaLexerImp_single_character_3840 = 1122;
	public static final int ART_L_JavaLexerImp_single_character_3844 = 1123;
	public static final int ART_L_JavaLexerImp_single_character_3848 = 1124;
	public static final int ART_L_JavaLexerImp_single_character_3852 = 1125;
	public static final int ART_L_JavaLexerImp_single_character_3856 = 1126;
	public static final int ART_L_JavaLexerImp_single_character_3860 = 1127;
	public static final int ART_L_JavaLexerImp_single_character_3864 = 1128;
	public static final int ART_L_JavaLexerImp_single_character_3868 = 1129;
	public static final int ART_L_JavaLexerImp_single_character_3872 = 1130;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence = 1131;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3877 = 1132;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3883 = 1133;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3889 = 1134;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3895 = 1135;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3901 = 1136;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3907 = 1137;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3913 = 1138;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3919 = 1139;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3925 = 1140;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3931 = 1141;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3937 = 1142;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence = 1143;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944 = 1144;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950 = 1145;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955 = 1146;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956 = 1147;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961 = 1148;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962 = 1149;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967 = 1150;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968 = 1151;
	public static final int ART_L_JavaLexerImp_STRING = 1152;
	public static final int ART_L_JavaLexerImp_STRING_3971 = 1153;
	public static final int ART_L_JavaLexerImp_STRING_3978 = 1154;
	public static final int ART_L_JavaLexerImp_STRING_3979 = 1155;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character = 1156;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3984 = 1157;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3986 = 1158;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3988 = 1159;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3990 = 1160;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3992 = 1161;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3994 = 1162;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3996 = 1163;
	public static final int ART_L_JavaLexerImp_regular_string_literal_character_3998 = 1164;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character = 1165;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4001 = 1166;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4005 = 1167;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4009 = 1168;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4013 = 1169;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4017 = 1170;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4021 = 1171;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4025 = 1172;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4029 = 1173;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4033 = 1174;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4037 = 1175;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4041 = 1176;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4045 = 1177;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4049 = 1178;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4053 = 1179;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4057 = 1180;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4061 = 1181;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4065 = 1182;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4069 = 1183;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4073 = 1184;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4077 = 1185;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4081 = 1186;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4085 = 1187;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4089 = 1188;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4093 = 1189;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4097 = 1190;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4101 = 1191;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4105 = 1192;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4109 = 1193;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4113 = 1194;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4117 = 1195;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4121 = 1196;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4125 = 1197;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4129 = 1198;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4133 = 1199;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4137 = 1200;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4141 = 1201;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4145 = 1202;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4149 = 1203;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4153 = 1204;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4157 = 1205;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4161 = 1206;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4165 = 1207;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4169 = 1208;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4173 = 1209;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4177 = 1210;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4181 = 1211;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4185 = 1212;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4189 = 1213;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4193 = 1214;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4197 = 1215;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4201 = 1216;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4205 = 1217;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4209 = 1218;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4213 = 1219;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4217 = 1220;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4221 = 1221;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4225 = 1222;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4229 = 1223;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4233 = 1224;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4237 = 1225;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4241 = 1226;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4245 = 1227;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4249 = 1228;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4253 = 1229;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4257 = 1230;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4261 = 1231;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4265 = 1232;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4269 = 1233;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4273 = 1234;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4277 = 1235;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4281 = 1236;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4285 = 1237;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4289 = 1238;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4293 = 1239;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4297 = 1240;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4301 = 1241;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4305 = 1242;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4309 = 1243;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4313 = 1244;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4317 = 1245;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4321 = 1246;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4325 = 1247;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4329 = 1248;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4333 = 1249;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4337 = 1250;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4341 = 1251;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4345 = 1252;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4349 = 1253;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4353 = 1254;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4357 = 1255;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4361 = 1256;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4365 = 1257;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4369 = 1258;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4373 = 1259;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4377 = 1260;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4381 = 1261;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4385 = 1262;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4389 = 1263;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4393 = 1264;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character = 1265;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398 = 1266;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402 = 1267;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406 = 1268;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410 = 1269;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414 = 1270;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418 = 1271;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422 = 1272;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426 = 1273;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430 = 1274;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434 = 1275;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438 = 1276;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442 = 1277;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446 = 1278;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450 = 1279;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454 = 1280;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458 = 1281;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462 = 1282;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466 = 1283;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470 = 1284;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474 = 1285;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478 = 1286;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482 = 1287;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486 = 1288;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490 = 1289;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494 = 1290;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498 = 1291;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502 = 1292;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506 = 1293;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510 = 1294;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514 = 1295;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518 = 1296;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522 = 1297;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526 = 1298;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530 = 1299;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534 = 1300;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538 = 1301;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542 = 1302;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546 = 1303;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550 = 1304;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554 = 1305;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558 = 1306;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562 = 1307;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566 = 1308;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570 = 1309;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574 = 1310;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578 = 1311;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582 = 1312;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586 = 1313;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590 = 1314;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594 = 1315;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598 = 1316;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602 = 1317;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606 = 1318;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610 = 1319;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614 = 1320;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618 = 1321;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622 = 1322;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626 = 1323;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630 = 1324;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634 = 1325;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638 = 1326;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642 = 1327;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646 = 1328;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650 = 1329;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654 = 1330;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658 = 1331;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662 = 1332;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666 = 1333;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670 = 1334;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674 = 1335;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678 = 1336;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682 = 1337;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686 = 1338;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690 = 1339;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694 = 1340;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698 = 1341;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702 = 1342;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706 = 1343;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710 = 1344;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714 = 1345;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718 = 1346;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722 = 1347;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726 = 1348;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730 = 1349;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734 = 1350;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738 = 1351;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742 = 1352;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746 = 1353;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750 = 1354;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754 = 1355;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758 = 1356;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762 = 1357;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766 = 1358;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770 = 1359;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774 = 1360;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778 = 1361;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782 = 1362;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786 = 1363;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790 = 1364;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794 = 1365;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798 = 1366;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802 = 1367;
	public static final int ART_L_JavaLexerImp_NULL = 1368;
	public static final int ART_L_JavaLexerImp_NULL_4807 = 1369;
	public static final int ART_L_JavaLexerImp_SEPARATORS = 1370;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4818 = 1371;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4822 = 1372;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4826 = 1373;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4830 = 1374;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4834 = 1375;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4838 = 1376;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4842 = 1377;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4846 = 1378;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4850 = 1379;
	public static final int ART_L_JavaLexerImp_OP = 1380;
	public static final int ART_L_JavaLexerImp_OP_4855 = 1381;
	public static final int ART_L_JavaLexerImp_OP_4859 = 1382;
	public static final int ART_L_JavaLexerImp_OP_4863 = 1383;
	public static final int ART_L_JavaLexerImp_OP_4867 = 1384;
	public static final int ART_L_JavaLexerImp_OP_4871 = 1385;
	public static final int ART_L_JavaLexerImp_OP_4875 = 1386;
	public static final int ART_L_JavaLexerImp_OP_4879 = 1387;
	public static final int ART_L_JavaLexerImp_OP_4883 = 1388;
	public static final int ART_L_JavaLexerImp_OP_4889 = 1389;
	public static final int ART_L_JavaLexerImp_OP_4895 = 1390;
	public static final int ART_L_JavaLexerImp_OP_4901 = 1391;
	public static final int ART_L_JavaLexerImp_OP_4907 = 1392;
	public static final int ART_L_JavaLexerImp_OP_4913 = 1393;
	public static final int ART_L_JavaLexerImp_OP_4919 = 1394;
	public static final int ART_L_JavaLexerImp_OP_4925 = 1395;
	public static final int ART_L_JavaLexerImp_OP_4933 = 1396;
	public static final int ART_L_JavaLexerImp_OP_4937 = 1397;
	public static final int ART_L_JavaLexerImp_OP_4941 = 1398;
	public static final int ART_L_JavaLexerImp_OP_4945 = 1399;
	public static final int ART_L_JavaLexerImp_OP_4949 = 1400;
	public static final int ART_L_JavaLexerImp_OP_4953 = 1401;
	public static final int ART_L_JavaLexerImp_OP_4957 = 1402;
	public static final int ART_L_JavaLexerImp_OP_4961 = 1403;
	public static final int ART_L_JavaLexerImp_OP_4965 = 1404;
	public static final int ART_L_JavaLexerImp_OP_4971 = 1405;
	public static final int ART_L_JavaLexerImp_OP_4977 = 1406;
	public static final int ART_L_JavaLexerImp_OP_4985 = 1407;
	public static final int ART_L_JavaLexerImp_OP_4991 = 1408;
	public static final int ART_L_JavaLexerImp_OP_4997 = 1409;
	public static final int ART_L_JavaLexerImp_OP_5003 = 1410;
	public static final int ART_L_JavaLexerImp_OP_5009 = 1411;
	public static final int ART_L_JavaLexerImp_OP_5015 = 1412;
	public static final int ART_L_JavaLexerImp_OP_5021 = 1413;
	public static final int ART_L_JavaLexerImp_OP_5027 = 1414;
	public static final int ART_L_JavaLexerImp_OP_5033 = 1415;
	public static final int ART_L_JavaLexerImp_OP_5041 = 1416;
	public static final int ART_L_JavaLexerImp_OP_5049 = 1417;
	public static final int ART_C_JavaLexerImp_input_6 = 1418;
	public static final int ART_L_JavaLexerImp_input_7 = 1419;
	public static final int ART_A_JavaLexerImp_input_7 = 1420;
	public static final int ART_L_JavaLexerImp_abstract_256 = 1421;
	public static final int ART_L_JavaLexerImp_abstract_257 = 1422;
	public static final int ART_L_JavaLexerImp_abstract_258 = 1423;
	public static final int ART_L_JavaLexerImp_abstract_259 = 1424;
	public static final int ART_L_JavaLexerImp_abstract_260 = 1425;
	public static final int ART_L_JavaLexerImp_abstract_261 = 1426;
	public static final int ART_L_JavaLexerImp_abstract_262 = 1427;
	public static final int ART_L_JavaLexerImp_abstract_263 = 1428;
	public static final int ART_L_JavaLexerImp_abstract_264 = 1429;
	public static final int ART_L_JavaLexerImp_abstract_265 = 1430;
	public static final int ART_L_JavaLexerImp_abstract_266 = 1431;
	public static final int ART_L_JavaLexerImp_abstract_267 = 1432;
	public static final int ART_L_JavaLexerImp_abstract_268 = 1433;
	public static final int ART_L_JavaLexerImp_abstract_269 = 1434;
	public static final int ART_L_JavaLexerImp_abstract_270 = 1435;
	public static final int ART_L_JavaLexerImp_abstract_271 = 1436;
	public static final int ART_L_JavaLexerImp_assert_275 = 1437;
	public static final int ART_L_JavaLexerImp_assert_276 = 1438;
	public static final int ART_L_JavaLexerImp_assert_277 = 1439;
	public static final int ART_L_JavaLexerImp_assert_278 = 1440;
	public static final int ART_L_JavaLexerImp_assert_279 = 1441;
	public static final int ART_L_JavaLexerImp_assert_280 = 1442;
	public static final int ART_L_JavaLexerImp_assert_281 = 1443;
	public static final int ART_L_JavaLexerImp_assert_282 = 1444;
	public static final int ART_L_JavaLexerImp_assert_283 = 1445;
	public static final int ART_L_JavaLexerImp_assert_284 = 1446;
	public static final int ART_L_JavaLexerImp_assert_285 = 1447;
	public static final int ART_L_JavaLexerImp_assert_286 = 1448;
	public static final int ART_L_JavaLexerImp_boolean_290 = 1449;
	public static final int ART_L_JavaLexerImp_boolean_291 = 1450;
	public static final int ART_L_JavaLexerImp_boolean_292 = 1451;
	public static final int ART_L_JavaLexerImp_boolean_293 = 1452;
	public static final int ART_L_JavaLexerImp_boolean_294 = 1453;
	public static final int ART_L_JavaLexerImp_boolean_295 = 1454;
	public static final int ART_L_JavaLexerImp_boolean_296 = 1455;
	public static final int ART_L_JavaLexerImp_boolean_297 = 1456;
	public static final int ART_L_JavaLexerImp_boolean_298 = 1457;
	public static final int ART_L_JavaLexerImp_boolean_299 = 1458;
	public static final int ART_L_JavaLexerImp_boolean_300 = 1459;
	public static final int ART_L_JavaLexerImp_boolean_301 = 1460;
	public static final int ART_L_JavaLexerImp_boolean_302 = 1461;
	public static final int ART_L_JavaLexerImp_boolean_303 = 1462;
	public static final int ART_L_JavaLexerImp_break_307 = 1463;
	public static final int ART_L_JavaLexerImp_break_308 = 1464;
	public static final int ART_L_JavaLexerImp_break_309 = 1465;
	public static final int ART_L_JavaLexerImp_break_310 = 1466;
	public static final int ART_L_JavaLexerImp_break_311 = 1467;
	public static final int ART_L_JavaLexerImp_break_312 = 1468;
	public static final int ART_L_JavaLexerImp_break_313 = 1469;
	public static final int ART_L_JavaLexerImp_break_314 = 1470;
	public static final int ART_L_JavaLexerImp_break_315 = 1471;
	public static final int ART_L_JavaLexerImp_break_316 = 1472;
	public static final int ART_L_JavaLexerImp_byte_320 = 1473;
	public static final int ART_L_JavaLexerImp_byte_321 = 1474;
	public static final int ART_L_JavaLexerImp_byte_322 = 1475;
	public static final int ART_L_JavaLexerImp_byte_323 = 1476;
	public static final int ART_L_JavaLexerImp_byte_324 = 1477;
	public static final int ART_L_JavaLexerImp_byte_325 = 1478;
	public static final int ART_L_JavaLexerImp_byte_326 = 1479;
	public static final int ART_L_JavaLexerImp_byte_327 = 1480;
	public static final int ART_L_JavaLexerImp_case_331 = 1481;
	public static final int ART_L_JavaLexerImp_case_332 = 1482;
	public static final int ART_L_JavaLexerImp_case_333 = 1483;
	public static final int ART_L_JavaLexerImp_case_334 = 1484;
	public static final int ART_L_JavaLexerImp_case_335 = 1485;
	public static final int ART_L_JavaLexerImp_case_336 = 1486;
	public static final int ART_L_JavaLexerImp_case_337 = 1487;
	public static final int ART_L_JavaLexerImp_case_338 = 1488;
	public static final int ART_L_JavaLexerImp_catch_342 = 1489;
	public static final int ART_L_JavaLexerImp_catch_343 = 1490;
	public static final int ART_L_JavaLexerImp_catch_344 = 1491;
	public static final int ART_L_JavaLexerImp_catch_345 = 1492;
	public static final int ART_L_JavaLexerImp_catch_346 = 1493;
	public static final int ART_L_JavaLexerImp_catch_347 = 1494;
	public static final int ART_L_JavaLexerImp_catch_348 = 1495;
	public static final int ART_L_JavaLexerImp_catch_349 = 1496;
	public static final int ART_L_JavaLexerImp_catch_350 = 1497;
	public static final int ART_L_JavaLexerImp_catch_351 = 1498;
	public static final int ART_L_JavaLexerImp_char_355 = 1499;
	public static final int ART_L_JavaLexerImp_char_356 = 1500;
	public static final int ART_L_JavaLexerImp_char_357 = 1501;
	public static final int ART_L_JavaLexerImp_char_358 = 1502;
	public static final int ART_L_JavaLexerImp_char_359 = 1503;
	public static final int ART_L_JavaLexerImp_char_360 = 1504;
	public static final int ART_L_JavaLexerImp_char_361 = 1505;
	public static final int ART_L_JavaLexerImp_char_362 = 1506;
	public static final int ART_L_JavaLexerImp_class_366 = 1507;
	public static final int ART_L_JavaLexerImp_class_367 = 1508;
	public static final int ART_L_JavaLexerImp_class_368 = 1509;
	public static final int ART_L_JavaLexerImp_class_369 = 1510;
	public static final int ART_L_JavaLexerImp_class_370 = 1511;
	public static final int ART_L_JavaLexerImp_class_371 = 1512;
	public static final int ART_L_JavaLexerImp_class_372 = 1513;
	public static final int ART_L_JavaLexerImp_class_373 = 1514;
	public static final int ART_L_JavaLexerImp_class_374 = 1515;
	public static final int ART_L_JavaLexerImp_class_375 = 1516;
	public static final int ART_L_JavaLexerImp_const_379 = 1517;
	public static final int ART_L_JavaLexerImp_const_380 = 1518;
	public static final int ART_L_JavaLexerImp_const_381 = 1519;
	public static final int ART_L_JavaLexerImp_const_382 = 1520;
	public static final int ART_L_JavaLexerImp_const_383 = 1521;
	public static final int ART_L_JavaLexerImp_const_384 = 1522;
	public static final int ART_L_JavaLexerImp_const_385 = 1523;
	public static final int ART_L_JavaLexerImp_const_386 = 1524;
	public static final int ART_L_JavaLexerImp_const_387 = 1525;
	public static final int ART_L_JavaLexerImp_const_388 = 1526;
	public static final int ART_L_JavaLexerImp_continue_392 = 1527;
	public static final int ART_L_JavaLexerImp_continue_393 = 1528;
	public static final int ART_L_JavaLexerImp_continue_394 = 1529;
	public static final int ART_L_JavaLexerImp_continue_395 = 1530;
	public static final int ART_L_JavaLexerImp_continue_396 = 1531;
	public static final int ART_L_JavaLexerImp_continue_397 = 1532;
	public static final int ART_L_JavaLexerImp_continue_398 = 1533;
	public static final int ART_L_JavaLexerImp_continue_399 = 1534;
	public static final int ART_L_JavaLexerImp_continue_400 = 1535;
	public static final int ART_L_JavaLexerImp_continue_401 = 1536;
	public static final int ART_L_JavaLexerImp_continue_402 = 1537;
	public static final int ART_L_JavaLexerImp_continue_403 = 1538;
	public static final int ART_L_JavaLexerImp_continue_404 = 1539;
	public static final int ART_L_JavaLexerImp_continue_405 = 1540;
	public static final int ART_L_JavaLexerImp_continue_406 = 1541;
	public static final int ART_L_JavaLexerImp_continue_407 = 1542;
	public static final int ART_L_JavaLexerImp_default_411 = 1543;
	public static final int ART_L_JavaLexerImp_default_412 = 1544;
	public static final int ART_L_JavaLexerImp_default_413 = 1545;
	public static final int ART_L_JavaLexerImp_default_414 = 1546;
	public static final int ART_L_JavaLexerImp_default_415 = 1547;
	public static final int ART_L_JavaLexerImp_default_416 = 1548;
	public static final int ART_L_JavaLexerImp_default_417 = 1549;
	public static final int ART_L_JavaLexerImp_default_418 = 1550;
	public static final int ART_L_JavaLexerImp_default_419 = 1551;
	public static final int ART_L_JavaLexerImp_default_420 = 1552;
	public static final int ART_L_JavaLexerImp_default_421 = 1553;
	public static final int ART_L_JavaLexerImp_default_422 = 1554;
	public static final int ART_L_JavaLexerImp_default_423 = 1555;
	public static final int ART_L_JavaLexerImp_default_424 = 1556;
	public static final int ART_L_JavaLexerImp_do_428 = 1557;
	public static final int ART_L_JavaLexerImp_do_429 = 1558;
	public static final int ART_L_JavaLexerImp_do_430 = 1559;
	public static final int ART_L_JavaLexerImp_do_431 = 1560;
	public static final int ART_L_JavaLexerImp_double_435 = 1561;
	public static final int ART_L_JavaLexerImp_double_436 = 1562;
	public static final int ART_L_JavaLexerImp_double_437 = 1563;
	public static final int ART_L_JavaLexerImp_double_438 = 1564;
	public static final int ART_L_JavaLexerImp_double_439 = 1565;
	public static final int ART_L_JavaLexerImp_double_440 = 1566;
	public static final int ART_L_JavaLexerImp_double_441 = 1567;
	public static final int ART_L_JavaLexerImp_double_442 = 1568;
	public static final int ART_L_JavaLexerImp_double_443 = 1569;
	public static final int ART_L_JavaLexerImp_double_444 = 1570;
	public static final int ART_L_JavaLexerImp_double_445 = 1571;
	public static final int ART_L_JavaLexerImp_double_446 = 1572;
	public static final int ART_L_JavaLexerImp_else_450 = 1573;
	public static final int ART_L_JavaLexerImp_else_451 = 1574;
	public static final int ART_L_JavaLexerImp_else_452 = 1575;
	public static final int ART_L_JavaLexerImp_else_453 = 1576;
	public static final int ART_L_JavaLexerImp_else_454 = 1577;
	public static final int ART_L_JavaLexerImp_else_455 = 1578;
	public static final int ART_L_JavaLexerImp_else_456 = 1579;
	public static final int ART_L_JavaLexerImp_else_457 = 1580;
	public static final int ART_L_JavaLexerImp_enum_461 = 1581;
	public static final int ART_L_JavaLexerImp_enum_462 = 1582;
	public static final int ART_L_JavaLexerImp_enum_463 = 1583;
	public static final int ART_L_JavaLexerImp_enum_464 = 1584;
	public static final int ART_L_JavaLexerImp_enum_465 = 1585;
	public static final int ART_L_JavaLexerImp_enum_466 = 1586;
	public static final int ART_L_JavaLexerImp_enum_467 = 1587;
	public static final int ART_L_JavaLexerImp_enum_468 = 1588;
	public static final int ART_L_JavaLexerImp_extends_472 = 1589;
	public static final int ART_L_JavaLexerImp_extends_473 = 1590;
	public static final int ART_L_JavaLexerImp_extends_474 = 1591;
	public static final int ART_L_JavaLexerImp_extends_475 = 1592;
	public static final int ART_L_JavaLexerImp_extends_476 = 1593;
	public static final int ART_L_JavaLexerImp_extends_477 = 1594;
	public static final int ART_L_JavaLexerImp_extends_478 = 1595;
	public static final int ART_L_JavaLexerImp_extends_479 = 1596;
	public static final int ART_L_JavaLexerImp_extends_480 = 1597;
	public static final int ART_L_JavaLexerImp_extends_481 = 1598;
	public static final int ART_L_JavaLexerImp_extends_482 = 1599;
	public static final int ART_L_JavaLexerImp_extends_483 = 1600;
	public static final int ART_L_JavaLexerImp_extends_484 = 1601;
	public static final int ART_L_JavaLexerImp_extends_485 = 1602;
	public static final int ART_L_JavaLexerImp_final_489 = 1603;
	public static final int ART_L_JavaLexerImp_final_490 = 1604;
	public static final int ART_L_JavaLexerImp_final_491 = 1605;
	public static final int ART_L_JavaLexerImp_final_492 = 1606;
	public static final int ART_L_JavaLexerImp_final_493 = 1607;
	public static final int ART_L_JavaLexerImp_final_494 = 1608;
	public static final int ART_L_JavaLexerImp_final_495 = 1609;
	public static final int ART_L_JavaLexerImp_final_496 = 1610;
	public static final int ART_L_JavaLexerImp_final_497 = 1611;
	public static final int ART_L_JavaLexerImp_final_498 = 1612;
	public static final int ART_L_JavaLexerImp_finally_502 = 1613;
	public static final int ART_L_JavaLexerImp_finally_503 = 1614;
	public static final int ART_L_JavaLexerImp_finally_504 = 1615;
	public static final int ART_L_JavaLexerImp_finally_505 = 1616;
	public static final int ART_L_JavaLexerImp_finally_506 = 1617;
	public static final int ART_L_JavaLexerImp_finally_507 = 1618;
	public static final int ART_L_JavaLexerImp_finally_508 = 1619;
	public static final int ART_L_JavaLexerImp_finally_509 = 1620;
	public static final int ART_L_JavaLexerImp_finally_510 = 1621;
	public static final int ART_L_JavaLexerImp_finally_511 = 1622;
	public static final int ART_L_JavaLexerImp_finally_512 = 1623;
	public static final int ART_L_JavaLexerImp_finally_513 = 1624;
	public static final int ART_L_JavaLexerImp_finally_514 = 1625;
	public static final int ART_L_JavaLexerImp_finally_515 = 1626;
	public static final int ART_L_JavaLexerImp_float_519 = 1627;
	public static final int ART_L_JavaLexerImp_float_520 = 1628;
	public static final int ART_L_JavaLexerImp_float_521 = 1629;
	public static final int ART_L_JavaLexerImp_float_522 = 1630;
	public static final int ART_L_JavaLexerImp_float_523 = 1631;
	public static final int ART_L_JavaLexerImp_float_524 = 1632;
	public static final int ART_L_JavaLexerImp_float_525 = 1633;
	public static final int ART_L_JavaLexerImp_float_526 = 1634;
	public static final int ART_L_JavaLexerImp_float_527 = 1635;
	public static final int ART_L_JavaLexerImp_float_528 = 1636;
	public static final int ART_L_JavaLexerImp_for_532 = 1637;
	public static final int ART_L_JavaLexerImp_for_533 = 1638;
	public static final int ART_L_JavaLexerImp_for_534 = 1639;
	public static final int ART_L_JavaLexerImp_for_535 = 1640;
	public static final int ART_L_JavaLexerImp_for_536 = 1641;
	public static final int ART_L_JavaLexerImp_for_537 = 1642;
	public static final int ART_L_JavaLexerImp_if_541 = 1643;
	public static final int ART_L_JavaLexerImp_if_542 = 1644;
	public static final int ART_L_JavaLexerImp_if_543 = 1645;
	public static final int ART_L_JavaLexerImp_if_544 = 1646;
	public static final int ART_L_JavaLexerImp_goto_548 = 1647;
	public static final int ART_L_JavaLexerImp_goto_549 = 1648;
	public static final int ART_L_JavaLexerImp_goto_550 = 1649;
	public static final int ART_L_JavaLexerImp_goto_551 = 1650;
	public static final int ART_L_JavaLexerImp_goto_552 = 1651;
	public static final int ART_L_JavaLexerImp_goto_553 = 1652;
	public static final int ART_L_JavaLexerImp_goto_554 = 1653;
	public static final int ART_L_JavaLexerImp_goto_555 = 1654;
	public static final int ART_L_JavaLexerImp_implements_559 = 1655;
	public static final int ART_L_JavaLexerImp_implements_560 = 1656;
	public static final int ART_L_JavaLexerImp_implements_561 = 1657;
	public static final int ART_L_JavaLexerImp_implements_562 = 1658;
	public static final int ART_L_JavaLexerImp_implements_563 = 1659;
	public static final int ART_L_JavaLexerImp_implements_564 = 1660;
	public static final int ART_L_JavaLexerImp_implements_565 = 1661;
	public static final int ART_L_JavaLexerImp_implements_566 = 1662;
	public static final int ART_L_JavaLexerImp_implements_567 = 1663;
	public static final int ART_L_JavaLexerImp_implements_568 = 1664;
	public static final int ART_L_JavaLexerImp_implements_569 = 1665;
	public static final int ART_L_JavaLexerImp_implements_570 = 1666;
	public static final int ART_L_JavaLexerImp_implements_571 = 1667;
	public static final int ART_L_JavaLexerImp_implements_572 = 1668;
	public static final int ART_L_JavaLexerImp_implements_573 = 1669;
	public static final int ART_L_JavaLexerImp_implements_574 = 1670;
	public static final int ART_L_JavaLexerImp_implements_575 = 1671;
	public static final int ART_L_JavaLexerImp_implements_576 = 1672;
	public static final int ART_L_JavaLexerImp_implements_577 = 1673;
	public static final int ART_L_JavaLexerImp_implements_578 = 1674;
	public static final int ART_L_JavaLexerImp_import_582 = 1675;
	public static final int ART_L_JavaLexerImp_import_583 = 1676;
	public static final int ART_L_JavaLexerImp_import_584 = 1677;
	public static final int ART_L_JavaLexerImp_import_585 = 1678;
	public static final int ART_L_JavaLexerImp_import_586 = 1679;
	public static final int ART_L_JavaLexerImp_import_587 = 1680;
	public static final int ART_L_JavaLexerImp_import_588 = 1681;
	public static final int ART_L_JavaLexerImp_import_589 = 1682;
	public static final int ART_L_JavaLexerImp_import_590 = 1683;
	public static final int ART_L_JavaLexerImp_import_591 = 1684;
	public static final int ART_L_JavaLexerImp_import_592 = 1685;
	public static final int ART_L_JavaLexerImp_import_593 = 1686;
	public static final int ART_L_JavaLexerImp_instanceof_597 = 1687;
	public static final int ART_L_JavaLexerImp_instanceof_598 = 1688;
	public static final int ART_L_JavaLexerImp_instanceof_599 = 1689;
	public static final int ART_L_JavaLexerImp_instanceof_600 = 1690;
	public static final int ART_L_JavaLexerImp_instanceof_601 = 1691;
	public static final int ART_L_JavaLexerImp_instanceof_602 = 1692;
	public static final int ART_L_JavaLexerImp_instanceof_603 = 1693;
	public static final int ART_L_JavaLexerImp_instanceof_604 = 1694;
	public static final int ART_L_JavaLexerImp_instanceof_605 = 1695;
	public static final int ART_L_JavaLexerImp_instanceof_606 = 1696;
	public static final int ART_L_JavaLexerImp_instanceof_607 = 1697;
	public static final int ART_L_JavaLexerImp_instanceof_608 = 1698;
	public static final int ART_L_JavaLexerImp_instanceof_609 = 1699;
	public static final int ART_L_JavaLexerImp_instanceof_610 = 1700;
	public static final int ART_L_JavaLexerImp_instanceof_611 = 1701;
	public static final int ART_L_JavaLexerImp_instanceof_612 = 1702;
	public static final int ART_L_JavaLexerImp_instanceof_613 = 1703;
	public static final int ART_L_JavaLexerImp_instanceof_614 = 1704;
	public static final int ART_L_JavaLexerImp_instanceof_615 = 1705;
	public static final int ART_L_JavaLexerImp_instanceof_616 = 1706;
	public static final int ART_L_JavaLexerImp_int_620 = 1707;
	public static final int ART_L_JavaLexerImp_int_621 = 1708;
	public static final int ART_L_JavaLexerImp_int_622 = 1709;
	public static final int ART_L_JavaLexerImp_int_623 = 1710;
	public static final int ART_L_JavaLexerImp_int_624 = 1711;
	public static final int ART_L_JavaLexerImp_int_625 = 1712;
	public static final int ART_L_JavaLexerImp_interface_629 = 1713;
	public static final int ART_L_JavaLexerImp_interface_630 = 1714;
	public static final int ART_L_JavaLexerImp_interface_631 = 1715;
	public static final int ART_L_JavaLexerImp_interface_632 = 1716;
	public static final int ART_L_JavaLexerImp_interface_633 = 1717;
	public static final int ART_L_JavaLexerImp_interface_634 = 1718;
	public static final int ART_L_JavaLexerImp_interface_635 = 1719;
	public static final int ART_L_JavaLexerImp_interface_636 = 1720;
	public static final int ART_L_JavaLexerImp_interface_637 = 1721;
	public static final int ART_L_JavaLexerImp_interface_638 = 1722;
	public static final int ART_L_JavaLexerImp_interface_639 = 1723;
	public static final int ART_L_JavaLexerImp_interface_640 = 1724;
	public static final int ART_L_JavaLexerImp_interface_641 = 1725;
	public static final int ART_L_JavaLexerImp_interface_642 = 1726;
	public static final int ART_L_JavaLexerImp_interface_643 = 1727;
	public static final int ART_L_JavaLexerImp_interface_644 = 1728;
	public static final int ART_L_JavaLexerImp_interface_645 = 1729;
	public static final int ART_L_JavaLexerImp_interface_646 = 1730;
	public static final int ART_L_JavaLexerImp_long_650 = 1731;
	public static final int ART_L_JavaLexerImp_long_651 = 1732;
	public static final int ART_L_JavaLexerImp_long_652 = 1733;
	public static final int ART_L_JavaLexerImp_long_653 = 1734;
	public static final int ART_L_JavaLexerImp_long_654 = 1735;
	public static final int ART_L_JavaLexerImp_long_655 = 1736;
	public static final int ART_L_JavaLexerImp_long_656 = 1737;
	public static final int ART_L_JavaLexerImp_long_657 = 1738;
	public static final int ART_L_JavaLexerImp_native_661 = 1739;
	public static final int ART_L_JavaLexerImp_native_662 = 1740;
	public static final int ART_L_JavaLexerImp_native_663 = 1741;
	public static final int ART_L_JavaLexerImp_native_664 = 1742;
	public static final int ART_L_JavaLexerImp_native_665 = 1743;
	public static final int ART_L_JavaLexerImp_native_666 = 1744;
	public static final int ART_L_JavaLexerImp_native_667 = 1745;
	public static final int ART_L_JavaLexerImp_native_668 = 1746;
	public static final int ART_L_JavaLexerImp_native_669 = 1747;
	public static final int ART_L_JavaLexerImp_native_670 = 1748;
	public static final int ART_L_JavaLexerImp_native_671 = 1749;
	public static final int ART_L_JavaLexerImp_native_672 = 1750;
	public static final int ART_L_JavaLexerImp_new_676 = 1751;
	public static final int ART_L_JavaLexerImp_new_677 = 1752;
	public static final int ART_L_JavaLexerImp_new_678 = 1753;
	public static final int ART_L_JavaLexerImp_new_679 = 1754;
	public static final int ART_L_JavaLexerImp_new_680 = 1755;
	public static final int ART_L_JavaLexerImp_new_681 = 1756;
	public static final int ART_L_JavaLexerImp_package_685 = 1757;
	public static final int ART_L_JavaLexerImp_package_686 = 1758;
	public static final int ART_L_JavaLexerImp_package_687 = 1759;
	public static final int ART_L_JavaLexerImp_package_688 = 1760;
	public static final int ART_L_JavaLexerImp_package_689 = 1761;
	public static final int ART_L_JavaLexerImp_package_690 = 1762;
	public static final int ART_L_JavaLexerImp_package_691 = 1763;
	public static final int ART_L_JavaLexerImp_package_692 = 1764;
	public static final int ART_L_JavaLexerImp_package_693 = 1765;
	public static final int ART_L_JavaLexerImp_package_694 = 1766;
	public static final int ART_L_JavaLexerImp_package_695 = 1767;
	public static final int ART_L_JavaLexerImp_package_696 = 1768;
	public static final int ART_L_JavaLexerImp_package_697 = 1769;
	public static final int ART_L_JavaLexerImp_package_698 = 1770;
	public static final int ART_L_JavaLexerImp_private_702 = 1771;
	public static final int ART_L_JavaLexerImp_private_703 = 1772;
	public static final int ART_L_JavaLexerImp_private_704 = 1773;
	public static final int ART_L_JavaLexerImp_private_705 = 1774;
	public static final int ART_L_JavaLexerImp_private_706 = 1775;
	public static final int ART_L_JavaLexerImp_private_707 = 1776;
	public static final int ART_L_JavaLexerImp_private_708 = 1777;
	public static final int ART_L_JavaLexerImp_private_709 = 1778;
	public static final int ART_L_JavaLexerImp_private_710 = 1779;
	public static final int ART_L_JavaLexerImp_private_711 = 1780;
	public static final int ART_L_JavaLexerImp_private_712 = 1781;
	public static final int ART_L_JavaLexerImp_private_713 = 1782;
	public static final int ART_L_JavaLexerImp_private_714 = 1783;
	public static final int ART_L_JavaLexerImp_private_715 = 1784;
	public static final int ART_L_JavaLexerImp_protected_719 = 1785;
	public static final int ART_L_JavaLexerImp_protected_720 = 1786;
	public static final int ART_L_JavaLexerImp_protected_721 = 1787;
	public static final int ART_L_JavaLexerImp_protected_722 = 1788;
	public static final int ART_L_JavaLexerImp_protected_723 = 1789;
	public static final int ART_L_JavaLexerImp_protected_724 = 1790;
	public static final int ART_L_JavaLexerImp_protected_725 = 1791;
	public static final int ART_L_JavaLexerImp_protected_726 = 1792;
	public static final int ART_L_JavaLexerImp_protected_727 = 1793;
	public static final int ART_L_JavaLexerImp_protected_728 = 1794;
	public static final int ART_L_JavaLexerImp_protected_729 = 1795;
	public static final int ART_L_JavaLexerImp_protected_730 = 1796;
	public static final int ART_L_JavaLexerImp_protected_731 = 1797;
	public static final int ART_L_JavaLexerImp_protected_732 = 1798;
	public static final int ART_L_JavaLexerImp_protected_733 = 1799;
	public static final int ART_L_JavaLexerImp_protected_734 = 1800;
	public static final int ART_L_JavaLexerImp_protected_735 = 1801;
	public static final int ART_L_JavaLexerImp_protected_736 = 1802;
	public static final int ART_L_JavaLexerImp_public_740 = 1803;
	public static final int ART_L_JavaLexerImp_public_741 = 1804;
	public static final int ART_L_JavaLexerImp_public_742 = 1805;
	public static final int ART_L_JavaLexerImp_public_743 = 1806;
	public static final int ART_L_JavaLexerImp_public_744 = 1807;
	public static final int ART_L_JavaLexerImp_public_745 = 1808;
	public static final int ART_L_JavaLexerImp_public_746 = 1809;
	public static final int ART_L_JavaLexerImp_public_747 = 1810;
	public static final int ART_L_JavaLexerImp_public_748 = 1811;
	public static final int ART_L_JavaLexerImp_public_749 = 1812;
	public static final int ART_L_JavaLexerImp_public_750 = 1813;
	public static final int ART_L_JavaLexerImp_public_751 = 1814;
	public static final int ART_L_JavaLexerImp_return_755 = 1815;
	public static final int ART_L_JavaLexerImp_return_756 = 1816;
	public static final int ART_L_JavaLexerImp_return_757 = 1817;
	public static final int ART_L_JavaLexerImp_return_758 = 1818;
	public static final int ART_L_JavaLexerImp_return_759 = 1819;
	public static final int ART_L_JavaLexerImp_return_760 = 1820;
	public static final int ART_L_JavaLexerImp_return_761 = 1821;
	public static final int ART_L_JavaLexerImp_return_762 = 1822;
	public static final int ART_L_JavaLexerImp_return_763 = 1823;
	public static final int ART_L_JavaLexerImp_return_764 = 1824;
	public static final int ART_L_JavaLexerImp_return_765 = 1825;
	public static final int ART_L_JavaLexerImp_return_766 = 1826;
	public static final int ART_L_JavaLexerImp_short_770 = 1827;
	public static final int ART_L_JavaLexerImp_short_771 = 1828;
	public static final int ART_L_JavaLexerImp_short_772 = 1829;
	public static final int ART_L_JavaLexerImp_short_773 = 1830;
	public static final int ART_L_JavaLexerImp_short_774 = 1831;
	public static final int ART_L_JavaLexerImp_short_775 = 1832;
	public static final int ART_L_JavaLexerImp_short_776 = 1833;
	public static final int ART_L_JavaLexerImp_short_777 = 1834;
	public static final int ART_L_JavaLexerImp_short_778 = 1835;
	public static final int ART_L_JavaLexerImp_short_779 = 1836;
	public static final int ART_L_JavaLexerImp_static_783 = 1837;
	public static final int ART_L_JavaLexerImp_static_784 = 1838;
	public static final int ART_L_JavaLexerImp_static_785 = 1839;
	public static final int ART_L_JavaLexerImp_static_786 = 1840;
	public static final int ART_L_JavaLexerImp_static_787 = 1841;
	public static final int ART_L_JavaLexerImp_static_788 = 1842;
	public static final int ART_L_JavaLexerImp_static_789 = 1843;
	public static final int ART_L_JavaLexerImp_static_790 = 1844;
	public static final int ART_L_JavaLexerImp_static_791 = 1845;
	public static final int ART_L_JavaLexerImp_static_792 = 1846;
	public static final int ART_L_JavaLexerImp_static_793 = 1847;
	public static final int ART_L_JavaLexerImp_static_794 = 1848;
	public static final int ART_L_JavaLexerImp_strictfp_798 = 1849;
	public static final int ART_L_JavaLexerImp_strictfp_799 = 1850;
	public static final int ART_L_JavaLexerImp_strictfp_800 = 1851;
	public static final int ART_L_JavaLexerImp_strictfp_801 = 1852;
	public static final int ART_L_JavaLexerImp_strictfp_802 = 1853;
	public static final int ART_L_JavaLexerImp_strictfp_803 = 1854;
	public static final int ART_L_JavaLexerImp_strictfp_804 = 1855;
	public static final int ART_L_JavaLexerImp_strictfp_805 = 1856;
	public static final int ART_L_JavaLexerImp_strictfp_806 = 1857;
	public static final int ART_L_JavaLexerImp_strictfp_807 = 1858;
	public static final int ART_L_JavaLexerImp_strictfp_808 = 1859;
	public static final int ART_L_JavaLexerImp_strictfp_809 = 1860;
	public static final int ART_L_JavaLexerImp_strictfp_810 = 1861;
	public static final int ART_L_JavaLexerImp_strictfp_811 = 1862;
	public static final int ART_L_JavaLexerImp_strictfp_812 = 1863;
	public static final int ART_L_JavaLexerImp_strictfp_813 = 1864;
	public static final int ART_L_JavaLexerImp_super_817 = 1865;
	public static final int ART_L_JavaLexerImp_super_818 = 1866;
	public static final int ART_L_JavaLexerImp_super_819 = 1867;
	public static final int ART_L_JavaLexerImp_super_820 = 1868;
	public static final int ART_L_JavaLexerImp_super_821 = 1869;
	public static final int ART_L_JavaLexerImp_super_822 = 1870;
	public static final int ART_L_JavaLexerImp_super_823 = 1871;
	public static final int ART_L_JavaLexerImp_super_824 = 1872;
	public static final int ART_L_JavaLexerImp_super_825 = 1873;
	public static final int ART_L_JavaLexerImp_super_826 = 1874;
	public static final int ART_L_JavaLexerImp_switch_830 = 1875;
	public static final int ART_L_JavaLexerImp_switch_831 = 1876;
	public static final int ART_L_JavaLexerImp_switch_832 = 1877;
	public static final int ART_L_JavaLexerImp_switch_833 = 1878;
	public static final int ART_L_JavaLexerImp_switch_834 = 1879;
	public static final int ART_L_JavaLexerImp_switch_835 = 1880;
	public static final int ART_L_JavaLexerImp_switch_836 = 1881;
	public static final int ART_L_JavaLexerImp_switch_837 = 1882;
	public static final int ART_L_JavaLexerImp_switch_838 = 1883;
	public static final int ART_L_JavaLexerImp_switch_839 = 1884;
	public static final int ART_L_JavaLexerImp_switch_840 = 1885;
	public static final int ART_L_JavaLexerImp_switch_841 = 1886;
	public static final int ART_L_JavaLexerImp_synchronized_845 = 1887;
	public static final int ART_L_JavaLexerImp_synchronized_846 = 1888;
	public static final int ART_L_JavaLexerImp_synchronized_847 = 1889;
	public static final int ART_L_JavaLexerImp_synchronized_848 = 1890;
	public static final int ART_L_JavaLexerImp_synchronized_849 = 1891;
	public static final int ART_L_JavaLexerImp_synchronized_850 = 1892;
	public static final int ART_L_JavaLexerImp_synchronized_851 = 1893;
	public static final int ART_L_JavaLexerImp_synchronized_852 = 1894;
	public static final int ART_L_JavaLexerImp_synchronized_853 = 1895;
	public static final int ART_L_JavaLexerImp_synchronized_854 = 1896;
	public static final int ART_L_JavaLexerImp_synchronized_855 = 1897;
	public static final int ART_L_JavaLexerImp_synchronized_856 = 1898;
	public static final int ART_L_JavaLexerImp_synchronized_857 = 1899;
	public static final int ART_L_JavaLexerImp_synchronized_858 = 1900;
	public static final int ART_L_JavaLexerImp_synchronized_859 = 1901;
	public static final int ART_L_JavaLexerImp_synchronized_860 = 1902;
	public static final int ART_L_JavaLexerImp_synchronized_861 = 1903;
	public static final int ART_L_JavaLexerImp_synchronized_862 = 1904;
	public static final int ART_L_JavaLexerImp_synchronized_863 = 1905;
	public static final int ART_L_JavaLexerImp_synchronized_864 = 1906;
	public static final int ART_L_JavaLexerImp_synchronized_865 = 1907;
	public static final int ART_L_JavaLexerImp_synchronized_866 = 1908;
	public static final int ART_L_JavaLexerImp_synchronized_867 = 1909;
	public static final int ART_L_JavaLexerImp_synchronized_868 = 1910;
	public static final int ART_L_JavaLexerImp_this_872 = 1911;
	public static final int ART_L_JavaLexerImp_this_873 = 1912;
	public static final int ART_L_JavaLexerImp_this_874 = 1913;
	public static final int ART_L_JavaLexerImp_this_875 = 1914;
	public static final int ART_L_JavaLexerImp_this_876 = 1915;
	public static final int ART_L_JavaLexerImp_this_877 = 1916;
	public static final int ART_L_JavaLexerImp_this_878 = 1917;
	public static final int ART_L_JavaLexerImp_this_879 = 1918;
	public static final int ART_L_JavaLexerImp_throw_883 = 1919;
	public static final int ART_L_JavaLexerImp_throw_884 = 1920;
	public static final int ART_L_JavaLexerImp_throw_885 = 1921;
	public static final int ART_L_JavaLexerImp_throw_886 = 1922;
	public static final int ART_L_JavaLexerImp_throw_887 = 1923;
	public static final int ART_L_JavaLexerImp_throw_888 = 1924;
	public static final int ART_L_JavaLexerImp_throw_889 = 1925;
	public static final int ART_L_JavaLexerImp_throw_890 = 1926;
	public static final int ART_L_JavaLexerImp_throw_891 = 1927;
	public static final int ART_L_JavaLexerImp_throw_892 = 1928;
	public static final int ART_L_JavaLexerImp_throws_896 = 1929;
	public static final int ART_L_JavaLexerImp_throws_897 = 1930;
	public static final int ART_L_JavaLexerImp_throws_898 = 1931;
	public static final int ART_L_JavaLexerImp_throws_899 = 1932;
	public static final int ART_L_JavaLexerImp_throws_900 = 1933;
	public static final int ART_L_JavaLexerImp_throws_901 = 1934;
	public static final int ART_L_JavaLexerImp_throws_902 = 1935;
	public static final int ART_L_JavaLexerImp_throws_903 = 1936;
	public static final int ART_L_JavaLexerImp_throws_904 = 1937;
	public static final int ART_L_JavaLexerImp_throws_905 = 1938;
	public static final int ART_L_JavaLexerImp_throws_906 = 1939;
	public static final int ART_L_JavaLexerImp_throws_907 = 1940;
	public static final int ART_L_JavaLexerImp_transient_911 = 1941;
	public static final int ART_L_JavaLexerImp_transient_912 = 1942;
	public static final int ART_L_JavaLexerImp_transient_913 = 1943;
	public static final int ART_L_JavaLexerImp_transient_914 = 1944;
	public static final int ART_L_JavaLexerImp_transient_915 = 1945;
	public static final int ART_L_JavaLexerImp_transient_916 = 1946;
	public static final int ART_L_JavaLexerImp_transient_917 = 1947;
	public static final int ART_L_JavaLexerImp_transient_918 = 1948;
	public static final int ART_L_JavaLexerImp_transient_919 = 1949;
	public static final int ART_L_JavaLexerImp_transient_920 = 1950;
	public static final int ART_L_JavaLexerImp_transient_921 = 1951;
	public static final int ART_L_JavaLexerImp_transient_922 = 1952;
	public static final int ART_L_JavaLexerImp_transient_923 = 1953;
	public static final int ART_L_JavaLexerImp_transient_924 = 1954;
	public static final int ART_L_JavaLexerImp_transient_925 = 1955;
	public static final int ART_L_JavaLexerImp_transient_926 = 1956;
	public static final int ART_L_JavaLexerImp_transient_927 = 1957;
	public static final int ART_L_JavaLexerImp_transient_928 = 1958;
	public static final int ART_L_JavaLexerImp_try_932 = 1959;
	public static final int ART_L_JavaLexerImp_try_933 = 1960;
	public static final int ART_L_JavaLexerImp_try_934 = 1961;
	public static final int ART_L_JavaLexerImp_try_935 = 1962;
	public static final int ART_L_JavaLexerImp_try_936 = 1963;
	public static final int ART_L_JavaLexerImp_try_937 = 1964;
	public static final int ART_L_JavaLexerImp_void_941 = 1965;
	public static final int ART_L_JavaLexerImp_void_942 = 1966;
	public static final int ART_L_JavaLexerImp_void_943 = 1967;
	public static final int ART_L_JavaLexerImp_void_944 = 1968;
	public static final int ART_L_JavaLexerImp_void_945 = 1969;
	public static final int ART_L_JavaLexerImp_void_946 = 1970;
	public static final int ART_L_JavaLexerImp_void_947 = 1971;
	public static final int ART_L_JavaLexerImp_void_948 = 1972;
	public static final int ART_L_JavaLexerImp_volatile_952 = 1973;
	public static final int ART_L_JavaLexerImp_volatile_953 = 1974;
	public static final int ART_L_JavaLexerImp_volatile_954 = 1975;
	public static final int ART_L_JavaLexerImp_volatile_955 = 1976;
	public static final int ART_L_JavaLexerImp_volatile_956 = 1977;
	public static final int ART_L_JavaLexerImp_volatile_957 = 1978;
	public static final int ART_L_JavaLexerImp_volatile_958 = 1979;
	public static final int ART_L_JavaLexerImp_volatile_959 = 1980;
	public static final int ART_L_JavaLexerImp_volatile_960 = 1981;
	public static final int ART_L_JavaLexerImp_volatile_961 = 1982;
	public static final int ART_L_JavaLexerImp_volatile_962 = 1983;
	public static final int ART_L_JavaLexerImp_volatile_963 = 1984;
	public static final int ART_L_JavaLexerImp_volatile_964 = 1985;
	public static final int ART_L_JavaLexerImp_volatile_965 = 1986;
	public static final int ART_L_JavaLexerImp_volatile_966 = 1987;
	public static final int ART_L_JavaLexerImp_volatile_967 = 1988;
	public static final int ART_L_JavaLexerImp_while_971 = 1989;
	public static final int ART_L_JavaLexerImp_while_972 = 1990;
	public static final int ART_L_JavaLexerImp_while_973 = 1991;
	public static final int ART_L_JavaLexerImp_while_974 = 1992;
	public static final int ART_L_JavaLexerImp_while_975 = 1993;
	public static final int ART_L_JavaLexerImp_while_976 = 1994;
	public static final int ART_L_JavaLexerImp_while_977 = 1995;
	public static final int ART_L_JavaLexerImp_while_978 = 1996;
	public static final int ART_L_JavaLexerImp_while_979 = 1997;
	public static final int ART_L_JavaLexerImp_while_980 = 1998;
	public static final int ART_L_JavaLexerImp_WS_984 = 1999;
	public static final int ART_L_JavaLexerImp_WS_985 = 2000;
	public static final int ART_L_JavaLexerImp_WS_988 = 2001;
	public static final int ART_L_JavaLexerImp_WS_989 = 2002;
	public static final int ART_L_JavaLexerImp_WS_992 = 2003;
	public static final int ART_L_JavaLexerImp_WS_993 = 2004;
	public static final int ART_L_JavaLexerImp_WS_994 = 2005;
	public static final int ART_L_JavaLexerImp_WS_995 = 2006;
	public static final int ART_L_JavaLexerImp_WS_998 = 2007;
	public static final int ART_L_JavaLexerImp_WS_999 = 2008;
	public static final int ART_L_JavaLexerImp_WS_1002 = 2009;
	public static final int ART_L_JavaLexerImp_WS_1003 = 2010;
	public static final int ART_L_JavaLexerImp_WS_1006 = 2011;
	public static final int ART_L_JavaLexerImp_WS_1007 = 2012;
	public static final int ART_L_JavaLexerImp_COMMENT_1011 = 2013;
	public static final int ART_L_JavaLexerImp_COMMENT_1012 = 2014;
	public static final int ART_L_JavaLexerImp_COMMENT_1013 = 2015;
	public static final int ART_L_JavaLexerImp_COMMENT_1014 = 2016;
	public static final int ART_C_JavaLexerImp_COMMENT_1015 = 2017;
	public static final int ART_L_JavaLexerImp_COMMENT_1023 = 2018;
	public static final int ART_L_JavaLexerImp_COMMENT_1024 = 2019;
	public static final int ART_L_JavaLexerImp_COMMENT_1025 = 2020;
	public static final int ART_L_JavaLexerImp_COMMENT_1026 = 2021;
	public static final int ART_C_JavaLexerImp_COMMENT_1027 = 2022;
	public static final int ART_L_JavaLexerImp_COMMENT_1028 = 2023;
	public static final int ART_A_JavaLexerImp_COMMENT_1028 = 2024;
	public static final int ART_C_JavaLexerImp_COMMENT_1035 = 2025;
	public static final int ART_L_JavaLexerImp_COMMENT_1038 = 2026;
	public static final int ART_L_JavaLexerImp_COMMENT_1039 = 2027;
	public static final int ART_C_JavaLexerImp_COMMENT_1044 = 2028;
	public static final int ART_L_JavaLexerImp_COMMENT_1047 = 2029;
	public static final int ART_L_JavaLexerImp_COMMENT_1048 = 2030;
	public static final int ART_L_JavaLexerImp_COMMENT_1050 = 2031;
	public static final int ART_L_JavaLexerImp_COMMENT_1051 = 2032;
	public static final int ART_L_JavaLexerImp_input_character_1055 = 2033;
	public static final int ART_L_JavaLexerImp_input_character_1056 = 2034;
	public static final int ART_L_JavaLexerImp_input_character_1059 = 2035;
	public static final int ART_L_JavaLexerImp_input_character_1060 = 2036;
	public static final int ART_L_JavaLexerImp_input_character_1063 = 2037;
	public static final int ART_L_JavaLexerImp_input_character_1064 = 2038;
	public static final int ART_L_JavaLexerImp_input_character_1067 = 2039;
	public static final int ART_L_JavaLexerImp_input_character_1068 = 2040;
	public static final int ART_L_JavaLexerImp_input_character_1071 = 2041;
	public static final int ART_L_JavaLexerImp_input_character_1072 = 2042;
	public static final int ART_L_JavaLexerImp_input_character_1075 = 2043;
	public static final int ART_L_JavaLexerImp_input_character_1076 = 2044;
	public static final int ART_L_JavaLexerImp_input_character_1079 = 2045;
	public static final int ART_L_JavaLexerImp_input_character_1080 = 2046;
	public static final int ART_L_JavaLexerImp_input_character_1083 = 2047;
	public static final int ART_L_JavaLexerImp_input_character_1084 = 2048;
	public static final int ART_L_JavaLexerImp_input_character_1087 = 2049;
	public static final int ART_L_JavaLexerImp_input_character_1088 = 2050;
	public static final int ART_L_JavaLexerImp_input_character_1091 = 2051;
	public static final int ART_L_JavaLexerImp_input_character_1092 = 2052;
	public static final int ART_L_JavaLexerImp_input_character_1095 = 2053;
	public static final int ART_L_JavaLexerImp_input_character_1096 = 2054;
	public static final int ART_L_JavaLexerImp_input_character_1099 = 2055;
	public static final int ART_L_JavaLexerImp_input_character_1100 = 2056;
	public static final int ART_L_JavaLexerImp_input_character_1103 = 2057;
	public static final int ART_L_JavaLexerImp_input_character_1104 = 2058;
	public static final int ART_L_JavaLexerImp_input_character_1107 = 2059;
	public static final int ART_L_JavaLexerImp_input_character_1108 = 2060;
	public static final int ART_L_JavaLexerImp_input_character_1111 = 2061;
	public static final int ART_L_JavaLexerImp_input_character_1112 = 2062;
	public static final int ART_L_JavaLexerImp_input_character_1115 = 2063;
	public static final int ART_L_JavaLexerImp_input_character_1116 = 2064;
	public static final int ART_L_JavaLexerImp_input_character_1119 = 2065;
	public static final int ART_L_JavaLexerImp_input_character_1120 = 2066;
	public static final int ART_L_JavaLexerImp_input_character_1123 = 2067;
	public static final int ART_L_JavaLexerImp_input_character_1124 = 2068;
	public static final int ART_L_JavaLexerImp_input_character_1127 = 2069;
	public static final int ART_L_JavaLexerImp_input_character_1128 = 2070;
	public static final int ART_L_JavaLexerImp_input_character_1131 = 2071;
	public static final int ART_L_JavaLexerImp_input_character_1132 = 2072;
	public static final int ART_L_JavaLexerImp_input_character_1135 = 2073;
	public static final int ART_L_JavaLexerImp_input_character_1136 = 2074;
	public static final int ART_L_JavaLexerImp_input_character_1139 = 2075;
	public static final int ART_L_JavaLexerImp_input_character_1140 = 2076;
	public static final int ART_L_JavaLexerImp_input_character_1143 = 2077;
	public static final int ART_L_JavaLexerImp_input_character_1144 = 2078;
	public static final int ART_L_JavaLexerImp_input_character_1147 = 2079;
	public static final int ART_L_JavaLexerImp_input_character_1148 = 2080;
	public static final int ART_L_JavaLexerImp_input_character_1151 = 2081;
	public static final int ART_L_JavaLexerImp_input_character_1152 = 2082;
	public static final int ART_L_JavaLexerImp_input_character_1155 = 2083;
	public static final int ART_L_JavaLexerImp_input_character_1156 = 2084;
	public static final int ART_L_JavaLexerImp_input_character_1159 = 2085;
	public static final int ART_L_JavaLexerImp_input_character_1160 = 2086;
	public static final int ART_L_JavaLexerImp_input_character_1163 = 2087;
	public static final int ART_L_JavaLexerImp_input_character_1164 = 2088;
	public static final int ART_L_JavaLexerImp_input_character_1167 = 2089;
	public static final int ART_L_JavaLexerImp_input_character_1168 = 2090;
	public static final int ART_L_JavaLexerImp_input_character_1171 = 2091;
	public static final int ART_L_JavaLexerImp_input_character_1172 = 2092;
	public static final int ART_L_JavaLexerImp_input_character_1175 = 2093;
	public static final int ART_L_JavaLexerImp_input_character_1176 = 2094;
	public static final int ART_L_JavaLexerImp_input_character_1179 = 2095;
	public static final int ART_L_JavaLexerImp_input_character_1180 = 2096;
	public static final int ART_L_JavaLexerImp_input_character_1183 = 2097;
	public static final int ART_L_JavaLexerImp_input_character_1184 = 2098;
	public static final int ART_L_JavaLexerImp_input_character_1187 = 2099;
	public static final int ART_L_JavaLexerImp_input_character_1188 = 2100;
	public static final int ART_L_JavaLexerImp_input_character_1191 = 2101;
	public static final int ART_L_JavaLexerImp_input_character_1192 = 2102;
	public static final int ART_L_JavaLexerImp_input_character_1195 = 2103;
	public static final int ART_L_JavaLexerImp_input_character_1196 = 2104;
	public static final int ART_L_JavaLexerImp_input_character_1199 = 2105;
	public static final int ART_L_JavaLexerImp_input_character_1200 = 2106;
	public static final int ART_L_JavaLexerImp_input_character_1203 = 2107;
	public static final int ART_L_JavaLexerImp_input_character_1204 = 2108;
	public static final int ART_L_JavaLexerImp_input_character_1207 = 2109;
	public static final int ART_L_JavaLexerImp_input_character_1208 = 2110;
	public static final int ART_L_JavaLexerImp_input_character_1211 = 2111;
	public static final int ART_L_JavaLexerImp_input_character_1212 = 2112;
	public static final int ART_L_JavaLexerImp_input_character_1215 = 2113;
	public static final int ART_L_JavaLexerImp_input_character_1216 = 2114;
	public static final int ART_L_JavaLexerImp_input_character_1219 = 2115;
	public static final int ART_L_JavaLexerImp_input_character_1220 = 2116;
	public static final int ART_L_JavaLexerImp_input_character_1223 = 2117;
	public static final int ART_L_JavaLexerImp_input_character_1224 = 2118;
	public static final int ART_L_JavaLexerImp_input_character_1227 = 2119;
	public static final int ART_L_JavaLexerImp_input_character_1228 = 2120;
	public static final int ART_L_JavaLexerImp_input_character_1231 = 2121;
	public static final int ART_L_JavaLexerImp_input_character_1232 = 2122;
	public static final int ART_L_JavaLexerImp_input_character_1235 = 2123;
	public static final int ART_L_JavaLexerImp_input_character_1236 = 2124;
	public static final int ART_L_JavaLexerImp_input_character_1239 = 2125;
	public static final int ART_L_JavaLexerImp_input_character_1240 = 2126;
	public static final int ART_L_JavaLexerImp_input_character_1243 = 2127;
	public static final int ART_L_JavaLexerImp_input_character_1244 = 2128;
	public static final int ART_L_JavaLexerImp_input_character_1247 = 2129;
	public static final int ART_L_JavaLexerImp_input_character_1248 = 2130;
	public static final int ART_L_JavaLexerImp_input_character_1251 = 2131;
	public static final int ART_L_JavaLexerImp_input_character_1252 = 2132;
	public static final int ART_L_JavaLexerImp_input_character_1255 = 2133;
	public static final int ART_L_JavaLexerImp_input_character_1256 = 2134;
	public static final int ART_L_JavaLexerImp_input_character_1259 = 2135;
	public static final int ART_L_JavaLexerImp_input_character_1260 = 2136;
	public static final int ART_L_JavaLexerImp_input_character_1263 = 2137;
	public static final int ART_L_JavaLexerImp_input_character_1264 = 2138;
	public static final int ART_L_JavaLexerImp_input_character_1267 = 2139;
	public static final int ART_L_JavaLexerImp_input_character_1268 = 2140;
	public static final int ART_L_JavaLexerImp_input_character_1271 = 2141;
	public static final int ART_L_JavaLexerImp_input_character_1272 = 2142;
	public static final int ART_L_JavaLexerImp_input_character_1275 = 2143;
	public static final int ART_L_JavaLexerImp_input_character_1276 = 2144;
	public static final int ART_L_JavaLexerImp_input_character_1279 = 2145;
	public static final int ART_L_JavaLexerImp_input_character_1280 = 2146;
	public static final int ART_L_JavaLexerImp_input_character_1283 = 2147;
	public static final int ART_L_JavaLexerImp_input_character_1284 = 2148;
	public static final int ART_L_JavaLexerImp_input_character_1287 = 2149;
	public static final int ART_L_JavaLexerImp_input_character_1288 = 2150;
	public static final int ART_L_JavaLexerImp_input_character_1291 = 2151;
	public static final int ART_L_JavaLexerImp_input_character_1292 = 2152;
	public static final int ART_L_JavaLexerImp_input_character_1295 = 2153;
	public static final int ART_L_JavaLexerImp_input_character_1296 = 2154;
	public static final int ART_L_JavaLexerImp_input_character_1299 = 2155;
	public static final int ART_L_JavaLexerImp_input_character_1300 = 2156;
	public static final int ART_L_JavaLexerImp_input_character_1303 = 2157;
	public static final int ART_L_JavaLexerImp_input_character_1304 = 2158;
	public static final int ART_L_JavaLexerImp_input_character_1307 = 2159;
	public static final int ART_L_JavaLexerImp_input_character_1308 = 2160;
	public static final int ART_L_JavaLexerImp_input_character_1311 = 2161;
	public static final int ART_L_JavaLexerImp_input_character_1312 = 2162;
	public static final int ART_L_JavaLexerImp_input_character_1315 = 2163;
	public static final int ART_L_JavaLexerImp_input_character_1316 = 2164;
	public static final int ART_L_JavaLexerImp_input_character_1319 = 2165;
	public static final int ART_L_JavaLexerImp_input_character_1320 = 2166;
	public static final int ART_L_JavaLexerImp_input_character_1323 = 2167;
	public static final int ART_L_JavaLexerImp_input_character_1324 = 2168;
	public static final int ART_L_JavaLexerImp_input_character_1327 = 2169;
	public static final int ART_L_JavaLexerImp_input_character_1328 = 2170;
	public static final int ART_L_JavaLexerImp_input_character_1331 = 2171;
	public static final int ART_L_JavaLexerImp_input_character_1332 = 2172;
	public static final int ART_L_JavaLexerImp_input_character_1335 = 2173;
	public static final int ART_L_JavaLexerImp_input_character_1336 = 2174;
	public static final int ART_L_JavaLexerImp_input_character_1339 = 2175;
	public static final int ART_L_JavaLexerImp_input_character_1340 = 2176;
	public static final int ART_L_JavaLexerImp_input_character_1343 = 2177;
	public static final int ART_L_JavaLexerImp_input_character_1344 = 2178;
	public static final int ART_L_JavaLexerImp_input_character_1347 = 2179;
	public static final int ART_L_JavaLexerImp_input_character_1348 = 2180;
	public static final int ART_L_JavaLexerImp_input_character_1351 = 2181;
	public static final int ART_L_JavaLexerImp_input_character_1352 = 2182;
	public static final int ART_L_JavaLexerImp_input_character_1355 = 2183;
	public static final int ART_L_JavaLexerImp_input_character_1356 = 2184;
	public static final int ART_L_JavaLexerImp_input_character_1359 = 2185;
	public static final int ART_L_JavaLexerImp_input_character_1360 = 2186;
	public static final int ART_L_JavaLexerImp_input_character_1363 = 2187;
	public static final int ART_L_JavaLexerImp_input_character_1364 = 2188;
	public static final int ART_L_JavaLexerImp_input_character_1367 = 2189;
	public static final int ART_L_JavaLexerImp_input_character_1368 = 2190;
	public static final int ART_L_JavaLexerImp_input_character_1371 = 2191;
	public static final int ART_L_JavaLexerImp_input_character_1372 = 2192;
	public static final int ART_L_JavaLexerImp_input_character_1375 = 2193;
	public static final int ART_L_JavaLexerImp_input_character_1376 = 2194;
	public static final int ART_L_JavaLexerImp_input_character_1379 = 2195;
	public static final int ART_L_JavaLexerImp_input_character_1380 = 2196;
	public static final int ART_L_JavaLexerImp_input_character_1383 = 2197;
	public static final int ART_L_JavaLexerImp_input_character_1384 = 2198;
	public static final int ART_L_JavaLexerImp_input_character_1387 = 2199;
	public static final int ART_L_JavaLexerImp_input_character_1388 = 2200;
	public static final int ART_L_JavaLexerImp_input_character_1391 = 2201;
	public static final int ART_L_JavaLexerImp_input_character_1392 = 2202;
	public static final int ART_L_JavaLexerImp_input_character_1395 = 2203;
	public static final int ART_L_JavaLexerImp_input_character_1396 = 2204;
	public static final int ART_L_JavaLexerImp_input_character_1399 = 2205;
	public static final int ART_L_JavaLexerImp_input_character_1400 = 2206;
	public static final int ART_L_JavaLexerImp_input_character_1403 = 2207;
	public static final int ART_L_JavaLexerImp_input_character_1404 = 2208;
	public static final int ART_L_JavaLexerImp_input_character_1407 = 2209;
	public static final int ART_L_JavaLexerImp_input_character_1408 = 2210;
	public static final int ART_L_JavaLexerImp_input_character_1411 = 2211;
	public static final int ART_L_JavaLexerImp_input_character_1412 = 2212;
	public static final int ART_L_JavaLexerImp_input_character_1415 = 2213;
	public static final int ART_L_JavaLexerImp_input_character_1416 = 2214;
	public static final int ART_L_JavaLexerImp_input_character_1419 = 2215;
	public static final int ART_L_JavaLexerImp_input_character_1420 = 2216;
	public static final int ART_L_JavaLexerImp_input_character_1423 = 2217;
	public static final int ART_L_JavaLexerImp_input_character_1424 = 2218;
	public static final int ART_L_JavaLexerImp_input_character_1427 = 2219;
	public static final int ART_L_JavaLexerImp_input_character_1428 = 2220;
	public static final int ART_L_JavaLexerImp_input_character_1431 = 2221;
	public static final int ART_L_JavaLexerImp_input_character_1432 = 2222;
	public static final int ART_L_JavaLexerImp_input_character_1435 = 2223;
	public static final int ART_L_JavaLexerImp_input_character_1436 = 2224;
	public static final int ART_L_JavaLexerImp_input_character_1439 = 2225;
	public static final int ART_L_JavaLexerImp_input_character_1440 = 2226;
	public static final int ART_L_JavaLexerImp_input_character_1443 = 2227;
	public static final int ART_L_JavaLexerImp_input_character_1444 = 2228;
	public static final int ART_L_JavaLexerImp_input_character_1447 = 2229;
	public static final int ART_L_JavaLexerImp_input_character_1448 = 2230;
	public static final int ART_L_JavaLexerImp_input_character_1451 = 2231;
	public static final int ART_L_JavaLexerImp_input_character_1452 = 2232;
	public static final int ART_L_JavaLexerImp_input_character_1455 = 2233;
	public static final int ART_L_JavaLexerImp_input_character_1456 = 2234;
	public static final int ART_L_JavaLexerImp_new_line_character_1460 = 2235;
	public static final int ART_L_JavaLexerImp_new_line_character_1461 = 2236;
	public static final int ART_L_JavaLexerImp_new_line_character_1464 = 2237;
	public static final int ART_L_JavaLexerImp_new_line_character_1465 = 2238;
	public static final int ART_L_JavaLexerImp_not_asterisk_1469 = 2239;
	public static final int ART_L_JavaLexerImp_not_asterisk_1470 = 2240;
	public static final int ART_L_JavaLexerImp_not_asterisk_1473 = 2241;
	public static final int ART_L_JavaLexerImp_not_asterisk_1474 = 2242;
	public static final int ART_L_JavaLexerImp_not_asterisk_1477 = 2243;
	public static final int ART_L_JavaLexerImp_not_asterisk_1478 = 2244;
	public static final int ART_L_JavaLexerImp_not_asterisk_1481 = 2245;
	public static final int ART_L_JavaLexerImp_not_asterisk_1482 = 2246;
	public static final int ART_L_JavaLexerImp_not_asterisk_1485 = 2247;
	public static final int ART_L_JavaLexerImp_not_asterisk_1486 = 2248;
	public static final int ART_L_JavaLexerImp_not_asterisk_1489 = 2249;
	public static final int ART_L_JavaLexerImp_not_asterisk_1490 = 2250;
	public static final int ART_L_JavaLexerImp_not_asterisk_1493 = 2251;
	public static final int ART_L_JavaLexerImp_not_asterisk_1494 = 2252;
	public static final int ART_L_JavaLexerImp_not_asterisk_1497 = 2253;
	public static final int ART_L_JavaLexerImp_not_asterisk_1498 = 2254;
	public static final int ART_L_JavaLexerImp_not_asterisk_1501 = 2255;
	public static final int ART_L_JavaLexerImp_not_asterisk_1502 = 2256;
	public static final int ART_L_JavaLexerImp_not_asterisk_1505 = 2257;
	public static final int ART_L_JavaLexerImp_not_asterisk_1506 = 2258;
	public static final int ART_L_JavaLexerImp_not_asterisk_1509 = 2259;
	public static final int ART_L_JavaLexerImp_not_asterisk_1510 = 2260;
	public static final int ART_L_JavaLexerImp_not_asterisk_1513 = 2261;
	public static final int ART_L_JavaLexerImp_not_asterisk_1514 = 2262;
	public static final int ART_L_JavaLexerImp_not_asterisk_1517 = 2263;
	public static final int ART_L_JavaLexerImp_not_asterisk_1518 = 2264;
	public static final int ART_L_JavaLexerImp_not_asterisk_1521 = 2265;
	public static final int ART_L_JavaLexerImp_not_asterisk_1522 = 2266;
	public static final int ART_L_JavaLexerImp_not_asterisk_1525 = 2267;
	public static final int ART_L_JavaLexerImp_not_asterisk_1526 = 2268;
	public static final int ART_L_JavaLexerImp_not_asterisk_1529 = 2269;
	public static final int ART_L_JavaLexerImp_not_asterisk_1530 = 2270;
	public static final int ART_L_JavaLexerImp_not_asterisk_1533 = 2271;
	public static final int ART_L_JavaLexerImp_not_asterisk_1534 = 2272;
	public static final int ART_L_JavaLexerImp_not_asterisk_1537 = 2273;
	public static final int ART_L_JavaLexerImp_not_asterisk_1538 = 2274;
	public static final int ART_L_JavaLexerImp_not_asterisk_1541 = 2275;
	public static final int ART_L_JavaLexerImp_not_asterisk_1542 = 2276;
	public static final int ART_L_JavaLexerImp_not_asterisk_1545 = 2277;
	public static final int ART_L_JavaLexerImp_not_asterisk_1546 = 2278;
	public static final int ART_L_JavaLexerImp_not_asterisk_1549 = 2279;
	public static final int ART_L_JavaLexerImp_not_asterisk_1550 = 2280;
	public static final int ART_L_JavaLexerImp_not_asterisk_1553 = 2281;
	public static final int ART_L_JavaLexerImp_not_asterisk_1554 = 2282;
	public static final int ART_L_JavaLexerImp_not_asterisk_1557 = 2283;
	public static final int ART_L_JavaLexerImp_not_asterisk_1558 = 2284;
	public static final int ART_L_JavaLexerImp_not_asterisk_1561 = 2285;
	public static final int ART_L_JavaLexerImp_not_asterisk_1562 = 2286;
	public static final int ART_L_JavaLexerImp_not_asterisk_1565 = 2287;
	public static final int ART_L_JavaLexerImp_not_asterisk_1566 = 2288;
	public static final int ART_L_JavaLexerImp_not_asterisk_1569 = 2289;
	public static final int ART_L_JavaLexerImp_not_asterisk_1570 = 2290;
	public static final int ART_L_JavaLexerImp_not_asterisk_1573 = 2291;
	public static final int ART_L_JavaLexerImp_not_asterisk_1574 = 2292;
	public static final int ART_L_JavaLexerImp_not_asterisk_1577 = 2293;
	public static final int ART_L_JavaLexerImp_not_asterisk_1578 = 2294;
	public static final int ART_L_JavaLexerImp_not_asterisk_1581 = 2295;
	public static final int ART_L_JavaLexerImp_not_asterisk_1582 = 2296;
	public static final int ART_L_JavaLexerImp_not_asterisk_1585 = 2297;
	public static final int ART_L_JavaLexerImp_not_asterisk_1586 = 2298;
	public static final int ART_L_JavaLexerImp_not_asterisk_1589 = 2299;
	public static final int ART_L_JavaLexerImp_not_asterisk_1590 = 2300;
	public static final int ART_L_JavaLexerImp_not_asterisk_1593 = 2301;
	public static final int ART_L_JavaLexerImp_not_asterisk_1594 = 2302;
	public static final int ART_L_JavaLexerImp_not_asterisk_1597 = 2303;
	public static final int ART_L_JavaLexerImp_not_asterisk_1598 = 2304;
	public static final int ART_L_JavaLexerImp_not_asterisk_1601 = 2305;
	public static final int ART_L_JavaLexerImp_not_asterisk_1602 = 2306;
	public static final int ART_L_JavaLexerImp_not_asterisk_1605 = 2307;
	public static final int ART_L_JavaLexerImp_not_asterisk_1606 = 2308;
	public static final int ART_L_JavaLexerImp_not_asterisk_1609 = 2309;
	public static final int ART_L_JavaLexerImp_not_asterisk_1610 = 2310;
	public static final int ART_L_JavaLexerImp_not_asterisk_1613 = 2311;
	public static final int ART_L_JavaLexerImp_not_asterisk_1614 = 2312;
	public static final int ART_L_JavaLexerImp_not_asterisk_1617 = 2313;
	public static final int ART_L_JavaLexerImp_not_asterisk_1618 = 2314;
	public static final int ART_L_JavaLexerImp_not_asterisk_1621 = 2315;
	public static final int ART_L_JavaLexerImp_not_asterisk_1622 = 2316;
	public static final int ART_L_JavaLexerImp_not_asterisk_1625 = 2317;
	public static final int ART_L_JavaLexerImp_not_asterisk_1626 = 2318;
	public static final int ART_L_JavaLexerImp_not_asterisk_1629 = 2319;
	public static final int ART_L_JavaLexerImp_not_asterisk_1630 = 2320;
	public static final int ART_L_JavaLexerImp_not_asterisk_1633 = 2321;
	public static final int ART_L_JavaLexerImp_not_asterisk_1634 = 2322;
	public static final int ART_L_JavaLexerImp_not_asterisk_1637 = 2323;
	public static final int ART_L_JavaLexerImp_not_asterisk_1638 = 2324;
	public static final int ART_L_JavaLexerImp_not_asterisk_1641 = 2325;
	public static final int ART_L_JavaLexerImp_not_asterisk_1642 = 2326;
	public static final int ART_L_JavaLexerImp_not_asterisk_1645 = 2327;
	public static final int ART_L_JavaLexerImp_not_asterisk_1646 = 2328;
	public static final int ART_L_JavaLexerImp_not_asterisk_1649 = 2329;
	public static final int ART_L_JavaLexerImp_not_asterisk_1650 = 2330;
	public static final int ART_L_JavaLexerImp_not_asterisk_1653 = 2331;
	public static final int ART_L_JavaLexerImp_not_asterisk_1654 = 2332;
	public static final int ART_L_JavaLexerImp_not_asterisk_1657 = 2333;
	public static final int ART_L_JavaLexerImp_not_asterisk_1658 = 2334;
	public static final int ART_L_JavaLexerImp_not_asterisk_1661 = 2335;
	public static final int ART_L_JavaLexerImp_not_asterisk_1662 = 2336;
	public static final int ART_L_JavaLexerImp_not_asterisk_1665 = 2337;
	public static final int ART_L_JavaLexerImp_not_asterisk_1666 = 2338;
	public static final int ART_L_JavaLexerImp_not_asterisk_1669 = 2339;
	public static final int ART_L_JavaLexerImp_not_asterisk_1670 = 2340;
	public static final int ART_L_JavaLexerImp_not_asterisk_1673 = 2341;
	public static final int ART_L_JavaLexerImp_not_asterisk_1674 = 2342;
	public static final int ART_L_JavaLexerImp_not_asterisk_1677 = 2343;
	public static final int ART_L_JavaLexerImp_not_asterisk_1678 = 2344;
	public static final int ART_L_JavaLexerImp_not_asterisk_1681 = 2345;
	public static final int ART_L_JavaLexerImp_not_asterisk_1682 = 2346;
	public static final int ART_L_JavaLexerImp_not_asterisk_1685 = 2347;
	public static final int ART_L_JavaLexerImp_not_asterisk_1686 = 2348;
	public static final int ART_L_JavaLexerImp_not_asterisk_1689 = 2349;
	public static final int ART_L_JavaLexerImp_not_asterisk_1690 = 2350;
	public static final int ART_L_JavaLexerImp_not_asterisk_1693 = 2351;
	public static final int ART_L_JavaLexerImp_not_asterisk_1694 = 2352;
	public static final int ART_L_JavaLexerImp_not_asterisk_1697 = 2353;
	public static final int ART_L_JavaLexerImp_not_asterisk_1698 = 2354;
	public static final int ART_L_JavaLexerImp_not_asterisk_1701 = 2355;
	public static final int ART_L_JavaLexerImp_not_asterisk_1702 = 2356;
	public static final int ART_L_JavaLexerImp_not_asterisk_1705 = 2357;
	public static final int ART_L_JavaLexerImp_not_asterisk_1706 = 2358;
	public static final int ART_L_JavaLexerImp_not_asterisk_1709 = 2359;
	public static final int ART_L_JavaLexerImp_not_asterisk_1710 = 2360;
	public static final int ART_L_JavaLexerImp_not_asterisk_1713 = 2361;
	public static final int ART_L_JavaLexerImp_not_asterisk_1714 = 2362;
	public static final int ART_L_JavaLexerImp_not_asterisk_1717 = 2363;
	public static final int ART_L_JavaLexerImp_not_asterisk_1718 = 2364;
	public static final int ART_L_JavaLexerImp_not_asterisk_1721 = 2365;
	public static final int ART_L_JavaLexerImp_not_asterisk_1722 = 2366;
	public static final int ART_L_JavaLexerImp_not_asterisk_1725 = 2367;
	public static final int ART_L_JavaLexerImp_not_asterisk_1726 = 2368;
	public static final int ART_L_JavaLexerImp_not_asterisk_1729 = 2369;
	public static final int ART_L_JavaLexerImp_not_asterisk_1730 = 2370;
	public static final int ART_L_JavaLexerImp_not_asterisk_1733 = 2371;
	public static final int ART_L_JavaLexerImp_not_asterisk_1734 = 2372;
	public static final int ART_L_JavaLexerImp_not_asterisk_1737 = 2373;
	public static final int ART_L_JavaLexerImp_not_asterisk_1738 = 2374;
	public static final int ART_L_JavaLexerImp_not_asterisk_1741 = 2375;
	public static final int ART_L_JavaLexerImp_not_asterisk_1742 = 2376;
	public static final int ART_L_JavaLexerImp_not_asterisk_1745 = 2377;
	public static final int ART_L_JavaLexerImp_not_asterisk_1746 = 2378;
	public static final int ART_L_JavaLexerImp_not_asterisk_1749 = 2379;
	public static final int ART_L_JavaLexerImp_not_asterisk_1750 = 2380;
	public static final int ART_L_JavaLexerImp_not_asterisk_1753 = 2381;
	public static final int ART_L_JavaLexerImp_not_asterisk_1754 = 2382;
	public static final int ART_L_JavaLexerImp_not_asterisk_1757 = 2383;
	public static final int ART_L_JavaLexerImp_not_asterisk_1758 = 2384;
	public static final int ART_L_JavaLexerImp_not_asterisk_1761 = 2385;
	public static final int ART_L_JavaLexerImp_not_asterisk_1762 = 2386;
	public static final int ART_L_JavaLexerImp_not_asterisk_1765 = 2387;
	public static final int ART_L_JavaLexerImp_not_asterisk_1766 = 2388;
	public static final int ART_L_JavaLexerImp_not_asterisk_1769 = 2389;
	public static final int ART_L_JavaLexerImp_not_asterisk_1770 = 2390;
	public static final int ART_L_JavaLexerImp_not_asterisk_1773 = 2391;
	public static final int ART_L_JavaLexerImp_not_asterisk_1774 = 2392;
	public static final int ART_L_JavaLexerImp_not_asterisk_1777 = 2393;
	public static final int ART_L_JavaLexerImp_not_asterisk_1778 = 2394;
	public static final int ART_L_JavaLexerImp_not_asterisk_1781 = 2395;
	public static final int ART_L_JavaLexerImp_not_asterisk_1782 = 2396;
	public static final int ART_L_JavaLexerImp_not_asterisk_1785 = 2397;
	public static final int ART_L_JavaLexerImp_not_asterisk_1786 = 2398;
	public static final int ART_L_JavaLexerImp_not_asterisk_1789 = 2399;
	public static final int ART_L_JavaLexerImp_not_asterisk_1790 = 2400;
	public static final int ART_L_JavaLexerImp_not_asterisk_1793 = 2401;
	public static final int ART_L_JavaLexerImp_not_asterisk_1794 = 2402;
	public static final int ART_L_JavaLexerImp_not_asterisk_1797 = 2403;
	public static final int ART_L_JavaLexerImp_not_asterisk_1798 = 2404;
	public static final int ART_L_JavaLexerImp_not_asterisk_1801 = 2405;
	public static final int ART_L_JavaLexerImp_not_asterisk_1802 = 2406;
	public static final int ART_L_JavaLexerImp_not_asterisk_1805 = 2407;
	public static final int ART_L_JavaLexerImp_not_asterisk_1806 = 2408;
	public static final int ART_L_JavaLexerImp_not_asterisk_1809 = 2409;
	public static final int ART_L_JavaLexerImp_not_asterisk_1810 = 2410;
	public static final int ART_L_JavaLexerImp_not_asterisk_1813 = 2411;
	public static final int ART_L_JavaLexerImp_not_asterisk_1814 = 2412;
	public static final int ART_L_JavaLexerImp_not_asterisk_1817 = 2413;
	public static final int ART_L_JavaLexerImp_not_asterisk_1818 = 2414;
	public static final int ART_L_JavaLexerImp_not_asterisk_1821 = 2415;
	public static final int ART_L_JavaLexerImp_not_asterisk_1822 = 2416;
	public static final int ART_L_JavaLexerImp_not_asterisk_1825 = 2417;
	public static final int ART_L_JavaLexerImp_not_asterisk_1826 = 2418;
	public static final int ART_L_JavaLexerImp_not_asterisk_1829 = 2419;
	public static final int ART_L_JavaLexerImp_not_asterisk_1830 = 2420;
	public static final int ART_L_JavaLexerImp_not_asterisk_1833 = 2421;
	public static final int ART_L_JavaLexerImp_not_asterisk_1834 = 2422;
	public static final int ART_L_JavaLexerImp_not_asterisk_1837 = 2423;
	public static final int ART_L_JavaLexerImp_not_asterisk_1838 = 2424;
	public static final int ART_L_JavaLexerImp_not_asterisk_1841 = 2425;
	public static final int ART_L_JavaLexerImp_not_asterisk_1842 = 2426;
	public static final int ART_L_JavaLexerImp_not_asterisk_1845 = 2427;
	public static final int ART_L_JavaLexerImp_not_asterisk_1846 = 2428;
	public static final int ART_L_JavaLexerImp_not_asterisk_1849 = 2429;
	public static final int ART_L_JavaLexerImp_not_asterisk_1850 = 2430;
	public static final int ART_L_JavaLexerImp_not_asterisk_1853 = 2431;
	public static final int ART_L_JavaLexerImp_not_asterisk_1854 = 2432;
	public static final int ART_L_JavaLexerImp_not_asterisk_1857 = 2433;
	public static final int ART_L_JavaLexerImp_not_asterisk_1858 = 2434;
	public static final int ART_L_JavaLexerImp_not_asterisk_1861 = 2435;
	public static final int ART_L_JavaLexerImp_not_asterisk_1862 = 2436;
	public static final int ART_L_JavaLexerImp_not_asterisk_1865 = 2437;
	public static final int ART_L_JavaLexerImp_not_asterisk_1866 = 2438;
	public static final int ART_L_JavaLexerImp_not_asterisk_1869 = 2439;
	public static final int ART_L_JavaLexerImp_not_asterisk_1870 = 2440;
	public static final int ART_L_JavaLexerImp_not_asterisk_1873 = 2441;
	public static final int ART_L_JavaLexerImp_not_asterisk_1874 = 2442;
	public static final int ART_L_JavaLexerImp_not_slash_1878 = 2443;
	public static final int ART_L_JavaLexerImp_not_slash_1879 = 2444;
	public static final int ART_L_JavaLexerImp_not_slash_1882 = 2445;
	public static final int ART_L_JavaLexerImp_not_slash_1883 = 2446;
	public static final int ART_L_JavaLexerImp_not_slash_1886 = 2447;
	public static final int ART_L_JavaLexerImp_not_slash_1887 = 2448;
	public static final int ART_L_JavaLexerImp_not_slash_1890 = 2449;
	public static final int ART_L_JavaLexerImp_not_slash_1891 = 2450;
	public static final int ART_L_JavaLexerImp_not_slash_1894 = 2451;
	public static final int ART_L_JavaLexerImp_not_slash_1895 = 2452;
	public static final int ART_L_JavaLexerImp_not_slash_1898 = 2453;
	public static final int ART_L_JavaLexerImp_not_slash_1899 = 2454;
	public static final int ART_L_JavaLexerImp_not_slash_1902 = 2455;
	public static final int ART_L_JavaLexerImp_not_slash_1903 = 2456;
	public static final int ART_L_JavaLexerImp_not_slash_1906 = 2457;
	public static final int ART_L_JavaLexerImp_not_slash_1907 = 2458;
	public static final int ART_L_JavaLexerImp_not_slash_1910 = 2459;
	public static final int ART_L_JavaLexerImp_not_slash_1911 = 2460;
	public static final int ART_L_JavaLexerImp_not_slash_1914 = 2461;
	public static final int ART_L_JavaLexerImp_not_slash_1915 = 2462;
	public static final int ART_L_JavaLexerImp_not_slash_1918 = 2463;
	public static final int ART_L_JavaLexerImp_not_slash_1919 = 2464;
	public static final int ART_L_JavaLexerImp_not_slash_1922 = 2465;
	public static final int ART_L_JavaLexerImp_not_slash_1923 = 2466;
	public static final int ART_L_JavaLexerImp_not_slash_1926 = 2467;
	public static final int ART_L_JavaLexerImp_not_slash_1927 = 2468;
	public static final int ART_L_JavaLexerImp_not_slash_1930 = 2469;
	public static final int ART_L_JavaLexerImp_not_slash_1931 = 2470;
	public static final int ART_L_JavaLexerImp_not_slash_1934 = 2471;
	public static final int ART_L_JavaLexerImp_not_slash_1935 = 2472;
	public static final int ART_L_JavaLexerImp_not_slash_1938 = 2473;
	public static final int ART_L_JavaLexerImp_not_slash_1939 = 2474;
	public static final int ART_L_JavaLexerImp_not_slash_1942 = 2475;
	public static final int ART_L_JavaLexerImp_not_slash_1943 = 2476;
	public static final int ART_L_JavaLexerImp_not_slash_1946 = 2477;
	public static final int ART_L_JavaLexerImp_not_slash_1947 = 2478;
	public static final int ART_L_JavaLexerImp_not_slash_1950 = 2479;
	public static final int ART_L_JavaLexerImp_not_slash_1951 = 2480;
	public static final int ART_L_JavaLexerImp_not_slash_1954 = 2481;
	public static final int ART_L_JavaLexerImp_not_slash_1955 = 2482;
	public static final int ART_L_JavaLexerImp_not_slash_1958 = 2483;
	public static final int ART_L_JavaLexerImp_not_slash_1959 = 2484;
	public static final int ART_L_JavaLexerImp_not_slash_1962 = 2485;
	public static final int ART_L_JavaLexerImp_not_slash_1963 = 2486;
	public static final int ART_L_JavaLexerImp_not_slash_1966 = 2487;
	public static final int ART_L_JavaLexerImp_not_slash_1967 = 2488;
	public static final int ART_L_JavaLexerImp_not_slash_1970 = 2489;
	public static final int ART_L_JavaLexerImp_not_slash_1971 = 2490;
	public static final int ART_L_JavaLexerImp_not_slash_1974 = 2491;
	public static final int ART_L_JavaLexerImp_not_slash_1975 = 2492;
	public static final int ART_L_JavaLexerImp_not_slash_1978 = 2493;
	public static final int ART_L_JavaLexerImp_not_slash_1979 = 2494;
	public static final int ART_L_JavaLexerImp_not_slash_1982 = 2495;
	public static final int ART_L_JavaLexerImp_not_slash_1983 = 2496;
	public static final int ART_L_JavaLexerImp_not_slash_1986 = 2497;
	public static final int ART_L_JavaLexerImp_not_slash_1987 = 2498;
	public static final int ART_L_JavaLexerImp_not_slash_1990 = 2499;
	public static final int ART_L_JavaLexerImp_not_slash_1991 = 2500;
	public static final int ART_L_JavaLexerImp_not_slash_1994 = 2501;
	public static final int ART_L_JavaLexerImp_not_slash_1995 = 2502;
	public static final int ART_L_JavaLexerImp_not_slash_1998 = 2503;
	public static final int ART_L_JavaLexerImp_not_slash_1999 = 2504;
	public static final int ART_L_JavaLexerImp_not_slash_2002 = 2505;
	public static final int ART_L_JavaLexerImp_not_slash_2003 = 2506;
	public static final int ART_L_JavaLexerImp_not_slash_2006 = 2507;
	public static final int ART_L_JavaLexerImp_not_slash_2007 = 2508;
	public static final int ART_L_JavaLexerImp_not_slash_2010 = 2509;
	public static final int ART_L_JavaLexerImp_not_slash_2011 = 2510;
	public static final int ART_L_JavaLexerImp_not_slash_2014 = 2511;
	public static final int ART_L_JavaLexerImp_not_slash_2015 = 2512;
	public static final int ART_L_JavaLexerImp_not_slash_2018 = 2513;
	public static final int ART_L_JavaLexerImp_not_slash_2019 = 2514;
	public static final int ART_L_JavaLexerImp_not_slash_2022 = 2515;
	public static final int ART_L_JavaLexerImp_not_slash_2023 = 2516;
	public static final int ART_L_JavaLexerImp_not_slash_2026 = 2517;
	public static final int ART_L_JavaLexerImp_not_slash_2027 = 2518;
	public static final int ART_L_JavaLexerImp_not_slash_2030 = 2519;
	public static final int ART_L_JavaLexerImp_not_slash_2031 = 2520;
	public static final int ART_L_JavaLexerImp_not_slash_2034 = 2521;
	public static final int ART_L_JavaLexerImp_not_slash_2035 = 2522;
	public static final int ART_L_JavaLexerImp_not_slash_2038 = 2523;
	public static final int ART_L_JavaLexerImp_not_slash_2039 = 2524;
	public static final int ART_L_JavaLexerImp_not_slash_2042 = 2525;
	public static final int ART_L_JavaLexerImp_not_slash_2043 = 2526;
	public static final int ART_L_JavaLexerImp_not_slash_2046 = 2527;
	public static final int ART_L_JavaLexerImp_not_slash_2047 = 2528;
	public static final int ART_L_JavaLexerImp_not_slash_2050 = 2529;
	public static final int ART_L_JavaLexerImp_not_slash_2051 = 2530;
	public static final int ART_L_JavaLexerImp_not_slash_2054 = 2531;
	public static final int ART_L_JavaLexerImp_not_slash_2055 = 2532;
	public static final int ART_L_JavaLexerImp_not_slash_2058 = 2533;
	public static final int ART_L_JavaLexerImp_not_slash_2059 = 2534;
	public static final int ART_L_JavaLexerImp_not_slash_2062 = 2535;
	public static final int ART_L_JavaLexerImp_not_slash_2063 = 2536;
	public static final int ART_L_JavaLexerImp_not_slash_2066 = 2537;
	public static final int ART_L_JavaLexerImp_not_slash_2067 = 2538;
	public static final int ART_L_JavaLexerImp_not_slash_2070 = 2539;
	public static final int ART_L_JavaLexerImp_not_slash_2071 = 2540;
	public static final int ART_L_JavaLexerImp_not_slash_2074 = 2541;
	public static final int ART_L_JavaLexerImp_not_slash_2075 = 2542;
	public static final int ART_L_JavaLexerImp_not_slash_2078 = 2543;
	public static final int ART_L_JavaLexerImp_not_slash_2079 = 2544;
	public static final int ART_L_JavaLexerImp_not_slash_2082 = 2545;
	public static final int ART_L_JavaLexerImp_not_slash_2083 = 2546;
	public static final int ART_L_JavaLexerImp_not_slash_2086 = 2547;
	public static final int ART_L_JavaLexerImp_not_slash_2087 = 2548;
	public static final int ART_L_JavaLexerImp_not_slash_2090 = 2549;
	public static final int ART_L_JavaLexerImp_not_slash_2091 = 2550;
	public static final int ART_L_JavaLexerImp_not_slash_2094 = 2551;
	public static final int ART_L_JavaLexerImp_not_slash_2095 = 2552;
	public static final int ART_L_JavaLexerImp_not_slash_2098 = 2553;
	public static final int ART_L_JavaLexerImp_not_slash_2099 = 2554;
	public static final int ART_L_JavaLexerImp_not_slash_2102 = 2555;
	public static final int ART_L_JavaLexerImp_not_slash_2103 = 2556;
	public static final int ART_L_JavaLexerImp_not_slash_2106 = 2557;
	public static final int ART_L_JavaLexerImp_not_slash_2107 = 2558;
	public static final int ART_L_JavaLexerImp_not_slash_2110 = 2559;
	public static final int ART_L_JavaLexerImp_not_slash_2111 = 2560;
	public static final int ART_L_JavaLexerImp_not_slash_2114 = 2561;
	public static final int ART_L_JavaLexerImp_not_slash_2115 = 2562;
	public static final int ART_L_JavaLexerImp_not_slash_2118 = 2563;
	public static final int ART_L_JavaLexerImp_not_slash_2119 = 2564;
	public static final int ART_L_JavaLexerImp_not_slash_2122 = 2565;
	public static final int ART_L_JavaLexerImp_not_slash_2123 = 2566;
	public static final int ART_L_JavaLexerImp_not_slash_2126 = 2567;
	public static final int ART_L_JavaLexerImp_not_slash_2127 = 2568;
	public static final int ART_L_JavaLexerImp_not_slash_2130 = 2569;
	public static final int ART_L_JavaLexerImp_not_slash_2131 = 2570;
	public static final int ART_L_JavaLexerImp_not_slash_2134 = 2571;
	public static final int ART_L_JavaLexerImp_not_slash_2135 = 2572;
	public static final int ART_L_JavaLexerImp_not_slash_2138 = 2573;
	public static final int ART_L_JavaLexerImp_not_slash_2139 = 2574;
	public static final int ART_L_JavaLexerImp_not_slash_2142 = 2575;
	public static final int ART_L_JavaLexerImp_not_slash_2143 = 2576;
	public static final int ART_L_JavaLexerImp_not_slash_2146 = 2577;
	public static final int ART_L_JavaLexerImp_not_slash_2147 = 2578;
	public static final int ART_L_JavaLexerImp_not_slash_2150 = 2579;
	public static final int ART_L_JavaLexerImp_not_slash_2151 = 2580;
	public static final int ART_L_JavaLexerImp_not_slash_2154 = 2581;
	public static final int ART_L_JavaLexerImp_not_slash_2155 = 2582;
	public static final int ART_L_JavaLexerImp_not_slash_2158 = 2583;
	public static final int ART_L_JavaLexerImp_not_slash_2159 = 2584;
	public static final int ART_L_JavaLexerImp_not_slash_2162 = 2585;
	public static final int ART_L_JavaLexerImp_not_slash_2163 = 2586;
	public static final int ART_L_JavaLexerImp_not_slash_2166 = 2587;
	public static final int ART_L_JavaLexerImp_not_slash_2167 = 2588;
	public static final int ART_L_JavaLexerImp_not_slash_2170 = 2589;
	public static final int ART_L_JavaLexerImp_not_slash_2171 = 2590;
	public static final int ART_L_JavaLexerImp_not_slash_2174 = 2591;
	public static final int ART_L_JavaLexerImp_not_slash_2175 = 2592;
	public static final int ART_L_JavaLexerImp_not_slash_2178 = 2593;
	public static final int ART_L_JavaLexerImp_not_slash_2179 = 2594;
	public static final int ART_L_JavaLexerImp_not_slash_2182 = 2595;
	public static final int ART_L_JavaLexerImp_not_slash_2183 = 2596;
	public static final int ART_L_JavaLexerImp_not_slash_2186 = 2597;
	public static final int ART_L_JavaLexerImp_not_slash_2187 = 2598;
	public static final int ART_L_JavaLexerImp_not_slash_2190 = 2599;
	public static final int ART_L_JavaLexerImp_not_slash_2191 = 2600;
	public static final int ART_L_JavaLexerImp_not_slash_2194 = 2601;
	public static final int ART_L_JavaLexerImp_not_slash_2195 = 2602;
	public static final int ART_L_JavaLexerImp_not_slash_2198 = 2603;
	public static final int ART_L_JavaLexerImp_not_slash_2199 = 2604;
	public static final int ART_L_JavaLexerImp_not_slash_2202 = 2605;
	public static final int ART_L_JavaLexerImp_not_slash_2203 = 2606;
	public static final int ART_L_JavaLexerImp_not_slash_2206 = 2607;
	public static final int ART_L_JavaLexerImp_not_slash_2207 = 2608;
	public static final int ART_L_JavaLexerImp_not_slash_2210 = 2609;
	public static final int ART_L_JavaLexerImp_not_slash_2211 = 2610;
	public static final int ART_L_JavaLexerImp_not_slash_2214 = 2611;
	public static final int ART_L_JavaLexerImp_not_slash_2215 = 2612;
	public static final int ART_L_JavaLexerImp_not_slash_2218 = 2613;
	public static final int ART_L_JavaLexerImp_not_slash_2219 = 2614;
	public static final int ART_L_JavaLexerImp_not_slash_2222 = 2615;
	public static final int ART_L_JavaLexerImp_not_slash_2223 = 2616;
	public static final int ART_L_JavaLexerImp_not_slash_2226 = 2617;
	public static final int ART_L_JavaLexerImp_not_slash_2227 = 2618;
	public static final int ART_L_JavaLexerImp_not_slash_2230 = 2619;
	public static final int ART_L_JavaLexerImp_not_slash_2231 = 2620;
	public static final int ART_L_JavaLexerImp_not_slash_2234 = 2621;
	public static final int ART_L_JavaLexerImp_not_slash_2235 = 2622;
	public static final int ART_L_JavaLexerImp_not_slash_2238 = 2623;
	public static final int ART_L_JavaLexerImp_not_slash_2239 = 2624;
	public static final int ART_L_JavaLexerImp_not_slash_2242 = 2625;
	public static final int ART_L_JavaLexerImp_not_slash_2243 = 2626;
	public static final int ART_L_JavaLexerImp_not_slash_2246 = 2627;
	public static final int ART_L_JavaLexerImp_not_slash_2247 = 2628;
	public static final int ART_L_JavaLexerImp_not_slash_2250 = 2629;
	public static final int ART_L_JavaLexerImp_not_slash_2251 = 2630;
	public static final int ART_L_JavaLexerImp_not_slash_2254 = 2631;
	public static final int ART_L_JavaLexerImp_not_slash_2255 = 2632;
	public static final int ART_L_JavaLexerImp_not_slash_2258 = 2633;
	public static final int ART_L_JavaLexerImp_not_slash_2259 = 2634;
	public static final int ART_L_JavaLexerImp_not_slash_2262 = 2635;
	public static final int ART_L_JavaLexerImp_not_slash_2263 = 2636;
	public static final int ART_L_JavaLexerImp_not_slash_2266 = 2637;
	public static final int ART_L_JavaLexerImp_not_slash_2267 = 2638;
	public static final int ART_L_JavaLexerImp_not_slash_2270 = 2639;
	public static final int ART_L_JavaLexerImp_not_slash_2271 = 2640;
	public static final int ART_L_JavaLexerImp_not_slash_2274 = 2641;
	public static final int ART_L_JavaLexerImp_not_slash_2275 = 2642;
	public static final int ART_L_JavaLexerImp_not_slash_2278 = 2643;
	public static final int ART_L_JavaLexerImp_not_slash_2279 = 2644;
	public static final int ART_L_JavaLexerImp_not_slash_2282 = 2645;
	public static final int ART_L_JavaLexerImp_not_slash_2283 = 2646;
	public static final int ART_L_JavaLexerImp_ID_2288 = 2647;
	public static final int ART_A_JavaLexerImp_ID_2288 = 2648;
	public static final int ART_L_JavaLexerImp_ID_2295 = 2649;
	public static final int ART_L_JavaLexerImp_ID_2296 = 2650;
	public static final int ART_L_JavaLexerImp_ID_2297 = 2651;
	public static final int ART_C_JavaLexerImp_ID_2298 = 2652;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2307 = 2653;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2308 = 2654;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2309 = 2655;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2310 = 2656;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2321 = 2657;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2322 = 2658;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2323 = 2659;
	public static final int ART_L_JavaLexerImp_unicode_character_escape_sequence_2324 = 2660;
	public static final int ART_L_JavaLexerImp_letter_character_2344 = 2661;
	public static final int ART_L_JavaLexerImp_letter_character_2345 = 2662;
	public static final int ART_L_JavaLexerImp_letter_character_2348 = 2663;
	public static final int ART_L_JavaLexerImp_letter_character_2349 = 2664;
	public static final int ART_L_JavaLexerImp_letter_character_2352 = 2665;
	public static final int ART_L_JavaLexerImp_letter_character_2353 = 2666;
	public static final int ART_L_JavaLexerImp_letter_character_2356 = 2667;
	public static final int ART_L_JavaLexerImp_letter_character_2357 = 2668;
	public static final int ART_L_JavaLexerImp_letter_character_2360 = 2669;
	public static final int ART_L_JavaLexerImp_letter_character_2361 = 2670;
	public static final int ART_L_JavaLexerImp_letter_character_2364 = 2671;
	public static final int ART_L_JavaLexerImp_letter_character_2365 = 2672;
	public static final int ART_L_JavaLexerImp_letter_character_2368 = 2673;
	public static final int ART_L_JavaLexerImp_letter_character_2369 = 2674;
	public static final int ART_L_JavaLexerImp_letter_character_2372 = 2675;
	public static final int ART_L_JavaLexerImp_letter_character_2373 = 2676;
	public static final int ART_L_JavaLexerImp_letter_character_2376 = 2677;
	public static final int ART_L_JavaLexerImp_letter_character_2377 = 2678;
	public static final int ART_L_JavaLexerImp_letter_character_2380 = 2679;
	public static final int ART_L_JavaLexerImp_letter_character_2381 = 2680;
	public static final int ART_L_JavaLexerImp_letter_character_2384 = 2681;
	public static final int ART_L_JavaLexerImp_letter_character_2385 = 2682;
	public static final int ART_L_JavaLexerImp_letter_character_2388 = 2683;
	public static final int ART_L_JavaLexerImp_letter_character_2389 = 2684;
	public static final int ART_L_JavaLexerImp_letter_character_2392 = 2685;
	public static final int ART_L_JavaLexerImp_letter_character_2393 = 2686;
	public static final int ART_L_JavaLexerImp_letter_character_2396 = 2687;
	public static final int ART_L_JavaLexerImp_letter_character_2397 = 2688;
	public static final int ART_L_JavaLexerImp_letter_character_2400 = 2689;
	public static final int ART_L_JavaLexerImp_letter_character_2401 = 2690;
	public static final int ART_L_JavaLexerImp_letter_character_2404 = 2691;
	public static final int ART_L_JavaLexerImp_letter_character_2405 = 2692;
	public static final int ART_L_JavaLexerImp_letter_character_2408 = 2693;
	public static final int ART_L_JavaLexerImp_letter_character_2409 = 2694;
	public static final int ART_L_JavaLexerImp_letter_character_2412 = 2695;
	public static final int ART_L_JavaLexerImp_letter_character_2413 = 2696;
	public static final int ART_L_JavaLexerImp_letter_character_2416 = 2697;
	public static final int ART_L_JavaLexerImp_letter_character_2417 = 2698;
	public static final int ART_L_JavaLexerImp_letter_character_2420 = 2699;
	public static final int ART_L_JavaLexerImp_letter_character_2421 = 2700;
	public static final int ART_L_JavaLexerImp_letter_character_2424 = 2701;
	public static final int ART_L_JavaLexerImp_letter_character_2425 = 2702;
	public static final int ART_L_JavaLexerImp_letter_character_2428 = 2703;
	public static final int ART_L_JavaLexerImp_letter_character_2429 = 2704;
	public static final int ART_L_JavaLexerImp_letter_character_2432 = 2705;
	public static final int ART_L_JavaLexerImp_letter_character_2433 = 2706;
	public static final int ART_L_JavaLexerImp_letter_character_2436 = 2707;
	public static final int ART_L_JavaLexerImp_letter_character_2437 = 2708;
	public static final int ART_L_JavaLexerImp_letter_character_2440 = 2709;
	public static final int ART_L_JavaLexerImp_letter_character_2441 = 2710;
	public static final int ART_L_JavaLexerImp_letter_character_2444 = 2711;
	public static final int ART_L_JavaLexerImp_letter_character_2445 = 2712;
	public static final int ART_L_JavaLexerImp_letter_character_2448 = 2713;
	public static final int ART_L_JavaLexerImp_letter_character_2449 = 2714;
	public static final int ART_L_JavaLexerImp_letter_character_2452 = 2715;
	public static final int ART_L_JavaLexerImp_letter_character_2453 = 2716;
	public static final int ART_L_JavaLexerImp_letter_character_2456 = 2717;
	public static final int ART_L_JavaLexerImp_letter_character_2457 = 2718;
	public static final int ART_L_JavaLexerImp_letter_character_2460 = 2719;
	public static final int ART_L_JavaLexerImp_letter_character_2461 = 2720;
	public static final int ART_L_JavaLexerImp_letter_character_2464 = 2721;
	public static final int ART_L_JavaLexerImp_letter_character_2465 = 2722;
	public static final int ART_L_JavaLexerImp_letter_character_2468 = 2723;
	public static final int ART_L_JavaLexerImp_letter_character_2469 = 2724;
	public static final int ART_L_JavaLexerImp_letter_character_2472 = 2725;
	public static final int ART_L_JavaLexerImp_letter_character_2473 = 2726;
	public static final int ART_L_JavaLexerImp_letter_character_2476 = 2727;
	public static final int ART_L_JavaLexerImp_letter_character_2477 = 2728;
	public static final int ART_L_JavaLexerImp_letter_character_2480 = 2729;
	public static final int ART_L_JavaLexerImp_letter_character_2481 = 2730;
	public static final int ART_L_JavaLexerImp_letter_character_2484 = 2731;
	public static final int ART_L_JavaLexerImp_letter_character_2485 = 2732;
	public static final int ART_L_JavaLexerImp_letter_character_2488 = 2733;
	public static final int ART_L_JavaLexerImp_letter_character_2489 = 2734;
	public static final int ART_L_JavaLexerImp_letter_character_2492 = 2735;
	public static final int ART_L_JavaLexerImp_letter_character_2493 = 2736;
	public static final int ART_L_JavaLexerImp_letter_character_2496 = 2737;
	public static final int ART_L_JavaLexerImp_letter_character_2497 = 2738;
	public static final int ART_L_JavaLexerImp_letter_character_2500 = 2739;
	public static final int ART_L_JavaLexerImp_letter_character_2501 = 2740;
	public static final int ART_L_JavaLexerImp_letter_character_2504 = 2741;
	public static final int ART_L_JavaLexerImp_letter_character_2505 = 2742;
	public static final int ART_L_JavaLexerImp_letter_character_2508 = 2743;
	public static final int ART_L_JavaLexerImp_letter_character_2509 = 2744;
	public static final int ART_L_JavaLexerImp_letter_character_2512 = 2745;
	public static final int ART_L_JavaLexerImp_letter_character_2513 = 2746;
	public static final int ART_L_JavaLexerImp_letter_character_2516 = 2747;
	public static final int ART_L_JavaLexerImp_letter_character_2517 = 2748;
	public static final int ART_L_JavaLexerImp_letter_character_2520 = 2749;
	public static final int ART_L_JavaLexerImp_letter_character_2521 = 2750;
	public static final int ART_L_JavaLexerImp_letter_character_2524 = 2751;
	public static final int ART_L_JavaLexerImp_letter_character_2525 = 2752;
	public static final int ART_L_JavaLexerImp_letter_character_2528 = 2753;
	public static final int ART_L_JavaLexerImp_letter_character_2529 = 2754;
	public static final int ART_L_JavaLexerImp_letter_character_2532 = 2755;
	public static final int ART_L_JavaLexerImp_letter_character_2533 = 2756;
	public static final int ART_L_JavaLexerImp_letter_character_2536 = 2757;
	public static final int ART_L_JavaLexerImp_letter_character_2537 = 2758;
	public static final int ART_L_JavaLexerImp_letter_character_2540 = 2759;
	public static final int ART_L_JavaLexerImp_letter_character_2541 = 2760;
	public static final int ART_L_JavaLexerImp_letter_character_2544 = 2761;
	public static final int ART_L_JavaLexerImp_letter_character_2545 = 2762;
	public static final int ART_L_JavaLexerImp_letter_character_2548 = 2763;
	public static final int ART_L_JavaLexerImp_letter_character_2549 = 2764;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2553 = 2765;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2554 = 2766;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2557 = 2767;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2558 = 2768;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2561 = 2769;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2562 = 2770;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2565 = 2771;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2566 = 2772;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2569 = 2773;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2570 = 2774;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2573 = 2775;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2574 = 2776;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2577 = 2777;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2578 = 2778;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2581 = 2779;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2582 = 2780;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2585 = 2781;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2586 = 2782;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2589 = 2783;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2590 = 2784;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2593 = 2785;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2594 = 2786;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2597 = 2787;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2598 = 2788;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2601 = 2789;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2602 = 2790;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2605 = 2791;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2606 = 2792;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2609 = 2793;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2610 = 2794;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2613 = 2795;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2614 = 2796;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2617 = 2797;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2618 = 2798;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2621 = 2799;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2622 = 2800;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2625 = 2801;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2626 = 2802;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2629 = 2803;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2630 = 2804;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2633 = 2805;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2634 = 2806;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2637 = 2807;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2638 = 2808;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2641 = 2809;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2642 = 2810;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2645 = 2811;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2646 = 2812;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2649 = 2813;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2650 = 2814;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2653 = 2815;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2654 = 2816;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2657 = 2817;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2658 = 2818;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2661 = 2819;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2662 = 2820;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2665 = 2821;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2666 = 2822;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2669 = 2823;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2670 = 2824;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2673 = 2825;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2674 = 2826;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2677 = 2827;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2678 = 2828;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2681 = 2829;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2682 = 2830;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2685 = 2831;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2686 = 2832;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2689 = 2833;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2690 = 2834;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2693 = 2835;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2694 = 2836;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2697 = 2837;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2698 = 2838;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2701 = 2839;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2702 = 2840;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2705 = 2841;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2706 = 2842;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2709 = 2843;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2710 = 2844;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2713 = 2845;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2714 = 2846;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2717 = 2847;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2718 = 2848;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2721 = 2849;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2722 = 2850;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2725 = 2851;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2726 = 2852;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2729 = 2853;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2730 = 2854;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2733 = 2855;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2734 = 2856;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2737 = 2857;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2738 = 2858;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2741 = 2859;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2742 = 2860;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2745 = 2861;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2746 = 2862;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2749 = 2863;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2750 = 2864;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2753 = 2865;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2754 = 2866;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2757 = 2867;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2758 = 2868;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2761 = 2869;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2762 = 2870;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2765 = 2871;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2766 = 2872;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2769 = 2873;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2770 = 2874;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2773 = 2875;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2774 = 2876;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2777 = 2877;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2778 = 2878;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2781 = 2879;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2782 = 2880;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2785 = 2881;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2786 = 2882;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2789 = 2883;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2790 = 2884;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2793 = 2885;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2794 = 2886;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2797 = 2887;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2798 = 2888;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2801 = 2889;
	public static final int ART_L_JavaLexerImp_identifier_part_character_2802 = 2890;
	public static final int ART_L_JavaLexerImp_INT_2811 = 2891;
	public static final int ART_A_JavaLexerImp_INT_2811 = 2892;
	public static final int ART_L_JavaLexerImp_INT_2814 = 2893;
	public static final int ART_L_JavaLexerImp_INT_2815 = 2894;
	public static final int ART_L_JavaLexerImp_INT_2818 = 2895;
	public static final int ART_L_JavaLexerImp_INT_2819 = 2896;
	public static final int ART_L_JavaLexerImp_INT_2822 = 2897;
	public static final int ART_A_JavaLexerImp_INT_2822 = 2898;
	public static final int ART_L_JavaLexerImp_INT_2825 = 2899;
	public static final int ART_L_JavaLexerImp_INT_2826 = 2900;
	public static final int ART_L_JavaLexerImp_INT_2828 = 2901;
	public static final int ART_A_JavaLexerImp_INT_2828 = 2902;
	public static final int ART_L_JavaLexerImp_INT_2831 = 2903;
	public static final int ART_L_JavaLexerImp_INT_2832 = 2904;
	public static final int ART_L_JavaLexerImp_INT_2835 = 2905;
	public static final int ART_L_JavaLexerImp_INT_2836 = 2906;
	public static final int ART_L_JavaLexerImp_INT_2837 = 2907;
	public static final int ART_L_JavaLexerImp_INT_2842 = 2908;
	public static final int ART_L_JavaLexerImp_INT_2843 = 2909;
	public static final int ART_L_JavaLexerImp_INT_2864 = 2910;
	public static final int ART_L_JavaLexerImp_INT_2865 = 2911;
	public static final int ART_L_JavaLexerImp_INT_2870 = 2912;
	public static final int ART_L_JavaLexerImp_INT_2871 = 2913;
	public static final int ART_L_JavaLexerImp_INT_2878 = 2914;
	public static final int ART_L_JavaLexerImp_INT_2879 = 2915;
	public static final int ART_L_JavaLexerImp_INT_2881 = 2916;
	public static final int ART_A_JavaLexerImp_INT_2881 = 2917;
	public static final int ART_L_JavaLexerImp_INT_2884 = 2918;
	public static final int ART_L_JavaLexerImp_INT_2885 = 2919;
	public static final int ART_L_JavaLexerImp_INT_2888 = 2920;
	public static final int ART_L_JavaLexerImp_INT_2889 = 2921;
	public static final int ART_L_JavaLexerImp_INT_2890 = 2922;
	public static final int ART_L_JavaLexerImp_INT_2893 = 2923;
	public static final int ART_L_JavaLexerImp_INT_2895 = 2924;
	public static final int ART_A_JavaLexerImp_INT_2895 = 2925;
	public static final int ART_L_JavaLexerImp_INT_2898 = 2926;
	public static final int ART_L_JavaLexerImp_INT_2899 = 2927;
	public static final int ART_L_JavaLexerImp_INT_2902 = 2928;
	public static final int ART_L_JavaLexerImp_INT_2903 = 2929;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2908 = 2930;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2909 = 2931;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2912 = 2932;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2913 = 2933;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2916 = 2934;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2917 = 2935;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2920 = 2936;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2921 = 2937;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2924 = 2938;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2925 = 2939;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2928 = 2940;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2929 = 2941;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2932 = 2942;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2933 = 2943;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2936 = 2944;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2937 = 2945;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2940 = 2946;
	public static final int ART_L_JavaLexerImp_non_zero_digit_2941 = 2947;
	public static final int ART_L_JavaLexerImp_digit_2962 = 2948;
	public static final int ART_L_JavaLexerImp_digit_2963 = 2949;
	public static final int ART_L_JavaLexerImp_digit_or_underscore_2986 = 2950;
	public static final int ART_L_JavaLexerImp_digit_or_underscore_2987 = 2951;
	public static final int ART_L_JavaLexerImp_underscores_2991 = 2952;
	public static final int ART_L_JavaLexerImp_underscores_2992 = 2953;
	public static final int ART_L_JavaLexerImp_underscores_2997 = 2954;
	public static final int ART_L_JavaLexerImp_underscores_2998 = 2955;
	public static final int ART_L_JavaLexerImp_hex_digit_3019 = 2956;
	public static final int ART_L_JavaLexerImp_hex_digit_3020 = 2957;
	public static final int ART_L_JavaLexerImp_hex_digit_3023 = 2958;
	public static final int ART_L_JavaLexerImp_hex_digit_3024 = 2959;
	public static final int ART_L_JavaLexerImp_hex_digit_3027 = 2960;
	public static final int ART_L_JavaLexerImp_hex_digit_3028 = 2961;
	public static final int ART_L_JavaLexerImp_hex_digit_3031 = 2962;
	public static final int ART_L_JavaLexerImp_hex_digit_3032 = 2963;
	public static final int ART_L_JavaLexerImp_hex_digit_3035 = 2964;
	public static final int ART_L_JavaLexerImp_hex_digit_3036 = 2965;
	public static final int ART_L_JavaLexerImp_hex_digit_3039 = 2966;
	public static final int ART_L_JavaLexerImp_hex_digit_3040 = 2967;
	public static final int ART_L_JavaLexerImp_hex_digit_3043 = 2968;
	public static final int ART_L_JavaLexerImp_hex_digit_3044 = 2969;
	public static final int ART_L_JavaLexerImp_hex_digit_3047 = 2970;
	public static final int ART_L_JavaLexerImp_hex_digit_3048 = 2971;
	public static final int ART_L_JavaLexerImp_hex_digit_3051 = 2972;
	public static final int ART_L_JavaLexerImp_hex_digit_3052 = 2973;
	public static final int ART_L_JavaLexerImp_hex_digit_3055 = 2974;
	public static final int ART_L_JavaLexerImp_hex_digit_3056 = 2975;
	public static final int ART_L_JavaLexerImp_hex_digit_3059 = 2976;
	public static final int ART_L_JavaLexerImp_hex_digit_3060 = 2977;
	public static final int ART_L_JavaLexerImp_hex_digit_3063 = 2978;
	public static final int ART_L_JavaLexerImp_hex_digit_3064 = 2979;
	public static final int ART_L_JavaLexerImp_hex_digit_3067 = 2980;
	public static final int ART_L_JavaLexerImp_hex_digit_3068 = 2981;
	public static final int ART_L_JavaLexerImp_hex_digit_3071 = 2982;
	public static final int ART_L_JavaLexerImp_hex_digit_3072 = 2983;
	public static final int ART_L_JavaLexerImp_hex_digit_3075 = 2984;
	public static final int ART_L_JavaLexerImp_hex_digit_3076 = 2985;
	public static final int ART_L_JavaLexerImp_hex_digit_3079 = 2986;
	public static final int ART_L_JavaLexerImp_hex_digit_3080 = 2987;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore_3099 = 2988;
	public static final int ART_L_JavaLexerImp_hex_digits_or_underscore_3100 = 2989;
	public static final int ART_L_JavaLexerImp_octal_digit_3121 = 2990;
	public static final int ART_L_JavaLexerImp_octal_digit_3122 = 2991;
	public static final int ART_L_JavaLexerImp_octal_digit_3125 = 2992;
	public static final int ART_L_JavaLexerImp_octal_digit_3126 = 2993;
	public static final int ART_L_JavaLexerImp_octal_digit_3129 = 2994;
	public static final int ART_L_JavaLexerImp_octal_digit_3130 = 2995;
	public static final int ART_L_JavaLexerImp_octal_digit_3133 = 2996;
	public static final int ART_L_JavaLexerImp_octal_digit_3134 = 2997;
	public static final int ART_L_JavaLexerImp_octal_digit_3137 = 2998;
	public static final int ART_L_JavaLexerImp_octal_digit_3138 = 2999;
	public static final int ART_L_JavaLexerImp_octal_digit_3141 = 3000;
	public static final int ART_L_JavaLexerImp_octal_digit_3142 = 3001;
	public static final int ART_L_JavaLexerImp_octal_digit_3145 = 3002;
	public static final int ART_L_JavaLexerImp_octal_digit_3146 = 3003;
	public static final int ART_L_JavaLexerImp_octal_digit_3149 = 3004;
	public static final int ART_L_JavaLexerImp_octal_digit_3150 = 3005;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore_3169 = 3006;
	public static final int ART_L_JavaLexerImp_octal_digit_or_underscore_3170 = 3007;
	public static final int ART_L_JavaLexerImp_binary_digit_3191 = 3008;
	public static final int ART_L_JavaLexerImp_binary_digit_3192 = 3009;
	public static final int ART_L_JavaLexerImp_binary_digit_3195 = 3010;
	public static final int ART_L_JavaLexerImp_binary_digit_3196 = 3011;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore_3215 = 3012;
	public static final int ART_L_JavaLexerImp_binary_digit_or_underscore_3216 = 3013;
	public static final int ART_L_JavaLexerImp_FLOAT_3222 = 3014;
	public static final int ART_L_JavaLexerImp_FLOAT_3223 = 3015;
	public static final int ART_L_JavaLexerImp_FLOAT_3244 = 3016;
	public static final int ART_L_JavaLexerImp_FLOAT_3245 = 3017;
	public static final int ART_L_JavaLexerImp_exponent_part_3300 = 3018;
	public static final int ART_A_JavaLexerImp_exponent_part_3300 = 3019;
	public static final int ART_L_JavaLexerImp_exponent_part_3303 = 3020;
	public static final int ART_L_JavaLexerImp_exponent_part_3304 = 3021;
	public static final int ART_L_JavaLexerImp_exponent_part_3307 = 3022;
	public static final int ART_L_JavaLexerImp_exponent_part_3308 = 3023;
	public static final int ART_L_JavaLexerImp_exponent_part_3309 = 3024;
	public static final int ART_L_JavaLexerImp_exponent_part_3311 = 3025;
	public static final int ART_A_JavaLexerImp_exponent_part_3311 = 3026;
	public static final int ART_L_JavaLexerImp_exponent_part_3314 = 3027;
	public static final int ART_L_JavaLexerImp_exponent_part_3315 = 3028;
	public static final int ART_L_JavaLexerImp_exponent_part_3318 = 3029;
	public static final int ART_L_JavaLexerImp_exponent_part_3319 = 3030;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3326 = 3031;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3327 = 3032;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3330 = 3033;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3331 = 3034;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3334 = 3035;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3335 = 3036;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3338 = 3037;
	public static final int ART_L_JavaLexerImp_float_type_suffix_3339 = 3038;
	public static final int ART_L_JavaLexerImp_hex_significand_3343 = 3039;
	public static final int ART_L_JavaLexerImp_hex_significand_3344 = 3040;
	public static final int ART_L_JavaLexerImp_hex_significand_3346 = 3041;
	public static final int ART_A_JavaLexerImp_hex_significand_3346 = 3042;
	public static final int ART_L_JavaLexerImp_hex_significand_3349 = 3043;
	public static final int ART_L_JavaLexerImp_hex_significand_3350 = 3044;
	public static final int ART_L_JavaLexerImp_hex_significand_3353 = 3045;
	public static final int ART_L_JavaLexerImp_hex_significand_3354 = 3046;
	public static final int ART_L_JavaLexerImp_hex_significand_3355 = 3047;
	public static final int ART_L_JavaLexerImp_hex_significand_3360 = 3048;
	public static final int ART_L_JavaLexerImp_hex_significand_3361 = 3049;
	public static final int ART_L_JavaLexerImp_hex_significand_3363 = 3050;
	public static final int ART_A_JavaLexerImp_hex_significand_3363 = 3051;
	public static final int ART_L_JavaLexerImp_hex_significand_3366 = 3052;
	public static final int ART_L_JavaLexerImp_hex_significand_3367 = 3053;
	public static final int ART_L_JavaLexerImp_hex_significand_3370 = 3054;
	public static final int ART_L_JavaLexerImp_hex_significand_3371 = 3055;
	public static final int ART_L_JavaLexerImp_hex_significand_3372 = 3056;
	public static final int ART_L_JavaLexerImp_hex_significand_3375 = 3057;
	public static final int ART_L_JavaLexerImp_hex_significand_3376 = 3058;
	public static final int ART_L_JavaLexerImp_hex_significand_3379 = 3059;
	public static final int ART_L_JavaLexerImp_hex_significand_3380 = 3060;
	public static final int ART_L_JavaLexerImp_hex_significand_3382 = 3061;
	public static final int ART_A_JavaLexerImp_hex_significand_3382 = 3062;
	public static final int ART_L_JavaLexerImp_hex_significand_3385 = 3063;
	public static final int ART_L_JavaLexerImp_hex_significand_3386 = 3064;
	public static final int ART_L_JavaLexerImp_hex_significand_3389 = 3065;
	public static final int ART_L_JavaLexerImp_hex_significand_3390 = 3066;
	public static final int ART_L_JavaLexerImp_hex_significand_3391 = 3067;
	public static final int ART_L_JavaLexerImp_hex_significand_3398 = 3068;
	public static final int ART_L_JavaLexerImp_hex_significand_3399 = 3069;
	public static final int ART_L_JavaLexerImp_binary_exponent_3406 = 3070;
	public static final int ART_A_JavaLexerImp_binary_exponent_3406 = 3071;
	public static final int ART_L_JavaLexerImp_binary_exponent_3409 = 3072;
	public static final int ART_L_JavaLexerImp_binary_exponent_3410 = 3073;
	public static final int ART_L_JavaLexerImp_binary_exponent_3413 = 3074;
	public static final int ART_L_JavaLexerImp_binary_exponent_3414 = 3075;
	public static final int ART_L_JavaLexerImp_binary_exponent_3415 = 3076;
	public static final int ART_L_JavaLexerImp_binary_exponent_3417 = 3077;
	public static final int ART_A_JavaLexerImp_binary_exponent_3417 = 3078;
	public static final int ART_L_JavaLexerImp_binary_exponent_3420 = 3079;
	public static final int ART_L_JavaLexerImp_binary_exponent_3421 = 3080;
	public static final int ART_L_JavaLexerImp_binary_exponent_3424 = 3081;
	public static final int ART_L_JavaLexerImp_binary_exponent_3425 = 3082;
	public static final int ART_L_JavaLexerImp_BOOL_3432 = 3083;
	public static final int ART_L_JavaLexerImp_BOOL_3433 = 3084;
	public static final int ART_L_JavaLexerImp_BOOL_3434 = 3085;
	public static final int ART_L_JavaLexerImp_BOOL_3435 = 3086;
	public static final int ART_L_JavaLexerImp_BOOL_3436 = 3087;
	public static final int ART_L_JavaLexerImp_BOOL_3437 = 3088;
	public static final int ART_L_JavaLexerImp_BOOL_3438 = 3089;
	public static final int ART_L_JavaLexerImp_BOOL_3439 = 3090;
	public static final int ART_L_JavaLexerImp_BOOL_3442 = 3091;
	public static final int ART_L_JavaLexerImp_BOOL_3443 = 3092;
	public static final int ART_L_JavaLexerImp_BOOL_3444 = 3093;
	public static final int ART_L_JavaLexerImp_BOOL_3445 = 3094;
	public static final int ART_L_JavaLexerImp_BOOL_3446 = 3095;
	public static final int ART_L_JavaLexerImp_BOOL_3447 = 3096;
	public static final int ART_L_JavaLexerImp_BOOL_3448 = 3097;
	public static final int ART_L_JavaLexerImp_BOOL_3449 = 3098;
	public static final int ART_L_JavaLexerImp_BOOL_3450 = 3099;
	public static final int ART_L_JavaLexerImp_BOOL_3451 = 3100;
	public static final int ART_L_JavaLexerImp_CHAR_3455 = 3101;
	public static final int ART_L_JavaLexerImp_CHAR_3456 = 3102;
	public static final int ART_L_JavaLexerImp_CHAR_3459 = 3103;
	public static final int ART_L_JavaLexerImp_CHAR_3460 = 3104;
	public static final int ART_L_JavaLexerImp_single_character_3481 = 3105;
	public static final int ART_L_JavaLexerImp_single_character_3482 = 3106;
	public static final int ART_L_JavaLexerImp_single_character_3485 = 3107;
	public static final int ART_L_JavaLexerImp_single_character_3486 = 3108;
	public static final int ART_L_JavaLexerImp_single_character_3489 = 3109;
	public static final int ART_L_JavaLexerImp_single_character_3490 = 3110;
	public static final int ART_L_JavaLexerImp_single_character_3493 = 3111;
	public static final int ART_L_JavaLexerImp_single_character_3494 = 3112;
	public static final int ART_L_JavaLexerImp_single_character_3497 = 3113;
	public static final int ART_L_JavaLexerImp_single_character_3498 = 3114;
	public static final int ART_L_JavaLexerImp_single_character_3501 = 3115;
	public static final int ART_L_JavaLexerImp_single_character_3502 = 3116;
	public static final int ART_L_JavaLexerImp_single_character_3505 = 3117;
	public static final int ART_L_JavaLexerImp_single_character_3506 = 3118;
	public static final int ART_L_JavaLexerImp_single_character_3509 = 3119;
	public static final int ART_L_JavaLexerImp_single_character_3510 = 3120;
	public static final int ART_L_JavaLexerImp_single_character_3513 = 3121;
	public static final int ART_L_JavaLexerImp_single_character_3514 = 3122;
	public static final int ART_L_JavaLexerImp_single_character_3517 = 3123;
	public static final int ART_L_JavaLexerImp_single_character_3518 = 3124;
	public static final int ART_L_JavaLexerImp_single_character_3521 = 3125;
	public static final int ART_L_JavaLexerImp_single_character_3522 = 3126;
	public static final int ART_L_JavaLexerImp_single_character_3525 = 3127;
	public static final int ART_L_JavaLexerImp_single_character_3526 = 3128;
	public static final int ART_L_JavaLexerImp_single_character_3529 = 3129;
	public static final int ART_L_JavaLexerImp_single_character_3530 = 3130;
	public static final int ART_L_JavaLexerImp_single_character_3533 = 3131;
	public static final int ART_L_JavaLexerImp_single_character_3534 = 3132;
	public static final int ART_L_JavaLexerImp_single_character_3537 = 3133;
	public static final int ART_L_JavaLexerImp_single_character_3538 = 3134;
	public static final int ART_L_JavaLexerImp_single_character_3541 = 3135;
	public static final int ART_L_JavaLexerImp_single_character_3542 = 3136;
	public static final int ART_L_JavaLexerImp_single_character_3545 = 3137;
	public static final int ART_L_JavaLexerImp_single_character_3546 = 3138;
	public static final int ART_L_JavaLexerImp_single_character_3549 = 3139;
	public static final int ART_L_JavaLexerImp_single_character_3550 = 3140;
	public static final int ART_L_JavaLexerImp_single_character_3553 = 3141;
	public static final int ART_L_JavaLexerImp_single_character_3554 = 3142;
	public static final int ART_L_JavaLexerImp_single_character_3557 = 3143;
	public static final int ART_L_JavaLexerImp_single_character_3558 = 3144;
	public static final int ART_L_JavaLexerImp_single_character_3561 = 3145;
	public static final int ART_L_JavaLexerImp_single_character_3562 = 3146;
	public static final int ART_L_JavaLexerImp_single_character_3565 = 3147;
	public static final int ART_L_JavaLexerImp_single_character_3566 = 3148;
	public static final int ART_L_JavaLexerImp_single_character_3569 = 3149;
	public static final int ART_L_JavaLexerImp_single_character_3570 = 3150;
	public static final int ART_L_JavaLexerImp_single_character_3573 = 3151;
	public static final int ART_L_JavaLexerImp_single_character_3574 = 3152;
	public static final int ART_L_JavaLexerImp_single_character_3577 = 3153;
	public static final int ART_L_JavaLexerImp_single_character_3578 = 3154;
	public static final int ART_L_JavaLexerImp_single_character_3581 = 3155;
	public static final int ART_L_JavaLexerImp_single_character_3582 = 3156;
	public static final int ART_L_JavaLexerImp_single_character_3585 = 3157;
	public static final int ART_L_JavaLexerImp_single_character_3586 = 3158;
	public static final int ART_L_JavaLexerImp_single_character_3589 = 3159;
	public static final int ART_L_JavaLexerImp_single_character_3590 = 3160;
	public static final int ART_L_JavaLexerImp_single_character_3593 = 3161;
	public static final int ART_L_JavaLexerImp_single_character_3594 = 3162;
	public static final int ART_L_JavaLexerImp_single_character_3597 = 3163;
	public static final int ART_L_JavaLexerImp_single_character_3598 = 3164;
	public static final int ART_L_JavaLexerImp_single_character_3601 = 3165;
	public static final int ART_L_JavaLexerImp_single_character_3602 = 3166;
	public static final int ART_L_JavaLexerImp_single_character_3605 = 3167;
	public static final int ART_L_JavaLexerImp_single_character_3606 = 3168;
	public static final int ART_L_JavaLexerImp_single_character_3609 = 3169;
	public static final int ART_L_JavaLexerImp_single_character_3610 = 3170;
	public static final int ART_L_JavaLexerImp_single_character_3613 = 3171;
	public static final int ART_L_JavaLexerImp_single_character_3614 = 3172;
	public static final int ART_L_JavaLexerImp_single_character_3617 = 3173;
	public static final int ART_L_JavaLexerImp_single_character_3618 = 3174;
	public static final int ART_L_JavaLexerImp_single_character_3621 = 3175;
	public static final int ART_L_JavaLexerImp_single_character_3622 = 3176;
	public static final int ART_L_JavaLexerImp_single_character_3625 = 3177;
	public static final int ART_L_JavaLexerImp_single_character_3626 = 3178;
	public static final int ART_L_JavaLexerImp_single_character_3629 = 3179;
	public static final int ART_L_JavaLexerImp_single_character_3630 = 3180;
	public static final int ART_L_JavaLexerImp_single_character_3633 = 3181;
	public static final int ART_L_JavaLexerImp_single_character_3634 = 3182;
	public static final int ART_L_JavaLexerImp_single_character_3637 = 3183;
	public static final int ART_L_JavaLexerImp_single_character_3638 = 3184;
	public static final int ART_L_JavaLexerImp_single_character_3641 = 3185;
	public static final int ART_L_JavaLexerImp_single_character_3642 = 3186;
	public static final int ART_L_JavaLexerImp_single_character_3645 = 3187;
	public static final int ART_L_JavaLexerImp_single_character_3646 = 3188;
	public static final int ART_L_JavaLexerImp_single_character_3649 = 3189;
	public static final int ART_L_JavaLexerImp_single_character_3650 = 3190;
	public static final int ART_L_JavaLexerImp_single_character_3653 = 3191;
	public static final int ART_L_JavaLexerImp_single_character_3654 = 3192;
	public static final int ART_L_JavaLexerImp_single_character_3657 = 3193;
	public static final int ART_L_JavaLexerImp_single_character_3658 = 3194;
	public static final int ART_L_JavaLexerImp_single_character_3661 = 3195;
	public static final int ART_L_JavaLexerImp_single_character_3662 = 3196;
	public static final int ART_L_JavaLexerImp_single_character_3665 = 3197;
	public static final int ART_L_JavaLexerImp_single_character_3666 = 3198;
	public static final int ART_L_JavaLexerImp_single_character_3669 = 3199;
	public static final int ART_L_JavaLexerImp_single_character_3670 = 3200;
	public static final int ART_L_JavaLexerImp_single_character_3673 = 3201;
	public static final int ART_L_JavaLexerImp_single_character_3674 = 3202;
	public static final int ART_L_JavaLexerImp_single_character_3677 = 3203;
	public static final int ART_L_JavaLexerImp_single_character_3678 = 3204;
	public static final int ART_L_JavaLexerImp_single_character_3681 = 3205;
	public static final int ART_L_JavaLexerImp_single_character_3682 = 3206;
	public static final int ART_L_JavaLexerImp_single_character_3685 = 3207;
	public static final int ART_L_JavaLexerImp_single_character_3686 = 3208;
	public static final int ART_L_JavaLexerImp_single_character_3689 = 3209;
	public static final int ART_L_JavaLexerImp_single_character_3690 = 3210;
	public static final int ART_L_JavaLexerImp_single_character_3693 = 3211;
	public static final int ART_L_JavaLexerImp_single_character_3694 = 3212;
	public static final int ART_L_JavaLexerImp_single_character_3697 = 3213;
	public static final int ART_L_JavaLexerImp_single_character_3698 = 3214;
	public static final int ART_L_JavaLexerImp_single_character_3701 = 3215;
	public static final int ART_L_JavaLexerImp_single_character_3702 = 3216;
	public static final int ART_L_JavaLexerImp_single_character_3705 = 3217;
	public static final int ART_L_JavaLexerImp_single_character_3706 = 3218;
	public static final int ART_L_JavaLexerImp_single_character_3709 = 3219;
	public static final int ART_L_JavaLexerImp_single_character_3710 = 3220;
	public static final int ART_L_JavaLexerImp_single_character_3713 = 3221;
	public static final int ART_L_JavaLexerImp_single_character_3714 = 3222;
	public static final int ART_L_JavaLexerImp_single_character_3717 = 3223;
	public static final int ART_L_JavaLexerImp_single_character_3718 = 3224;
	public static final int ART_L_JavaLexerImp_single_character_3721 = 3225;
	public static final int ART_L_JavaLexerImp_single_character_3722 = 3226;
	public static final int ART_L_JavaLexerImp_single_character_3725 = 3227;
	public static final int ART_L_JavaLexerImp_single_character_3726 = 3228;
	public static final int ART_L_JavaLexerImp_single_character_3729 = 3229;
	public static final int ART_L_JavaLexerImp_single_character_3730 = 3230;
	public static final int ART_L_JavaLexerImp_single_character_3733 = 3231;
	public static final int ART_L_JavaLexerImp_single_character_3734 = 3232;
	public static final int ART_L_JavaLexerImp_single_character_3737 = 3233;
	public static final int ART_L_JavaLexerImp_single_character_3738 = 3234;
	public static final int ART_L_JavaLexerImp_single_character_3741 = 3235;
	public static final int ART_L_JavaLexerImp_single_character_3742 = 3236;
	public static final int ART_L_JavaLexerImp_single_character_3745 = 3237;
	public static final int ART_L_JavaLexerImp_single_character_3746 = 3238;
	public static final int ART_L_JavaLexerImp_single_character_3749 = 3239;
	public static final int ART_L_JavaLexerImp_single_character_3750 = 3240;
	public static final int ART_L_JavaLexerImp_single_character_3753 = 3241;
	public static final int ART_L_JavaLexerImp_single_character_3754 = 3242;
	public static final int ART_L_JavaLexerImp_single_character_3757 = 3243;
	public static final int ART_L_JavaLexerImp_single_character_3758 = 3244;
	public static final int ART_L_JavaLexerImp_single_character_3761 = 3245;
	public static final int ART_L_JavaLexerImp_single_character_3762 = 3246;
	public static final int ART_L_JavaLexerImp_single_character_3765 = 3247;
	public static final int ART_L_JavaLexerImp_single_character_3766 = 3248;
	public static final int ART_L_JavaLexerImp_single_character_3769 = 3249;
	public static final int ART_L_JavaLexerImp_single_character_3770 = 3250;
	public static final int ART_L_JavaLexerImp_single_character_3773 = 3251;
	public static final int ART_L_JavaLexerImp_single_character_3774 = 3252;
	public static final int ART_L_JavaLexerImp_single_character_3777 = 3253;
	public static final int ART_L_JavaLexerImp_single_character_3778 = 3254;
	public static final int ART_L_JavaLexerImp_single_character_3781 = 3255;
	public static final int ART_L_JavaLexerImp_single_character_3782 = 3256;
	public static final int ART_L_JavaLexerImp_single_character_3785 = 3257;
	public static final int ART_L_JavaLexerImp_single_character_3786 = 3258;
	public static final int ART_L_JavaLexerImp_single_character_3789 = 3259;
	public static final int ART_L_JavaLexerImp_single_character_3790 = 3260;
	public static final int ART_L_JavaLexerImp_single_character_3793 = 3261;
	public static final int ART_L_JavaLexerImp_single_character_3794 = 3262;
	public static final int ART_L_JavaLexerImp_single_character_3797 = 3263;
	public static final int ART_L_JavaLexerImp_single_character_3798 = 3264;
	public static final int ART_L_JavaLexerImp_single_character_3801 = 3265;
	public static final int ART_L_JavaLexerImp_single_character_3802 = 3266;
	public static final int ART_L_JavaLexerImp_single_character_3805 = 3267;
	public static final int ART_L_JavaLexerImp_single_character_3806 = 3268;
	public static final int ART_L_JavaLexerImp_single_character_3809 = 3269;
	public static final int ART_L_JavaLexerImp_single_character_3810 = 3270;
	public static final int ART_L_JavaLexerImp_single_character_3813 = 3271;
	public static final int ART_L_JavaLexerImp_single_character_3814 = 3272;
	public static final int ART_L_JavaLexerImp_single_character_3817 = 3273;
	public static final int ART_L_JavaLexerImp_single_character_3818 = 3274;
	public static final int ART_L_JavaLexerImp_single_character_3821 = 3275;
	public static final int ART_L_JavaLexerImp_single_character_3822 = 3276;
	public static final int ART_L_JavaLexerImp_single_character_3825 = 3277;
	public static final int ART_L_JavaLexerImp_single_character_3826 = 3278;
	public static final int ART_L_JavaLexerImp_single_character_3829 = 3279;
	public static final int ART_L_JavaLexerImp_single_character_3830 = 3280;
	public static final int ART_L_JavaLexerImp_single_character_3833 = 3281;
	public static final int ART_L_JavaLexerImp_single_character_3834 = 3282;
	public static final int ART_L_JavaLexerImp_single_character_3837 = 3283;
	public static final int ART_L_JavaLexerImp_single_character_3838 = 3284;
	public static final int ART_L_JavaLexerImp_single_character_3841 = 3285;
	public static final int ART_L_JavaLexerImp_single_character_3842 = 3286;
	public static final int ART_L_JavaLexerImp_single_character_3845 = 3287;
	public static final int ART_L_JavaLexerImp_single_character_3846 = 3288;
	public static final int ART_L_JavaLexerImp_single_character_3849 = 3289;
	public static final int ART_L_JavaLexerImp_single_character_3850 = 3290;
	public static final int ART_L_JavaLexerImp_single_character_3853 = 3291;
	public static final int ART_L_JavaLexerImp_single_character_3854 = 3292;
	public static final int ART_L_JavaLexerImp_single_character_3857 = 3293;
	public static final int ART_L_JavaLexerImp_single_character_3858 = 3294;
	public static final int ART_L_JavaLexerImp_single_character_3861 = 3295;
	public static final int ART_L_JavaLexerImp_single_character_3862 = 3296;
	public static final int ART_L_JavaLexerImp_single_character_3865 = 3297;
	public static final int ART_L_JavaLexerImp_single_character_3866 = 3298;
	public static final int ART_L_JavaLexerImp_single_character_3869 = 3299;
	public static final int ART_L_JavaLexerImp_single_character_3870 = 3300;
	public static final int ART_L_JavaLexerImp_single_character_3873 = 3301;
	public static final int ART_L_JavaLexerImp_single_character_3874 = 3302;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3878 = 3303;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3879 = 3304;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3880 = 3305;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3881 = 3306;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3884 = 3307;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3885 = 3308;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3886 = 3309;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3887 = 3310;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3890 = 3311;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3891 = 3312;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3892 = 3313;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3893 = 3314;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3896 = 3315;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3897 = 3316;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3898 = 3317;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3899 = 3318;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3902 = 3319;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3903 = 3320;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3904 = 3321;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3905 = 3322;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3908 = 3323;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3909 = 3324;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3910 = 3325;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3911 = 3326;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3914 = 3327;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3915 = 3328;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3916 = 3329;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3917 = 3330;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3920 = 3331;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3921 = 3332;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3922 = 3333;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3923 = 3334;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3926 = 3335;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3927 = 3336;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3928 = 3337;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3929 = 3338;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3932 = 3339;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3933 = 3340;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3934 = 3341;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3935 = 3342;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3938 = 3343;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3939 = 3344;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3940 = 3345;
	public static final int ART_L_JavaLexerImp_simple_escape_sequence_3941 = 3346;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3945 = 3347;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946 = 3348;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3947 = 3349;
	public static final int ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948 = 3350;
	public static final int ART_L_JavaLexerImp_STRING_3972 = 3351;
	public static final int ART_L_JavaLexerImp_STRING_3973 = 3352;
	public static final int ART_C_JavaLexerImp_STRING_3974 = 3353;
	public static final int ART_L_JavaLexerImp_STRING_3980 = 3354;
	public static final int ART_L_JavaLexerImp_STRING_3981 = 3355;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4002 = 3356;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4003 = 3357;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4006 = 3358;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4007 = 3359;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4010 = 3360;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4011 = 3361;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4014 = 3362;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4015 = 3363;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4018 = 3364;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4019 = 3365;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4022 = 3366;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4023 = 3367;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4026 = 3368;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4027 = 3369;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4030 = 3370;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4031 = 3371;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4034 = 3372;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4035 = 3373;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4038 = 3374;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4039 = 3375;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4042 = 3376;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4043 = 3377;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4046 = 3378;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4047 = 3379;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4050 = 3380;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4051 = 3381;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4054 = 3382;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4055 = 3383;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4058 = 3384;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4059 = 3385;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4062 = 3386;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4063 = 3387;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4066 = 3388;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4067 = 3389;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4070 = 3390;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4071 = 3391;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4074 = 3392;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4075 = 3393;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4078 = 3394;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4079 = 3395;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4082 = 3396;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4083 = 3397;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4086 = 3398;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4087 = 3399;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4090 = 3400;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4091 = 3401;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4094 = 3402;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4095 = 3403;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4098 = 3404;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4099 = 3405;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4102 = 3406;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4103 = 3407;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4106 = 3408;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4107 = 3409;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4110 = 3410;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4111 = 3411;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4114 = 3412;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4115 = 3413;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4118 = 3414;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4119 = 3415;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4122 = 3416;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4123 = 3417;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4126 = 3418;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4127 = 3419;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4130 = 3420;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4131 = 3421;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4134 = 3422;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4135 = 3423;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4138 = 3424;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4139 = 3425;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4142 = 3426;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4143 = 3427;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4146 = 3428;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4147 = 3429;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4150 = 3430;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4151 = 3431;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4154 = 3432;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4155 = 3433;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4158 = 3434;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4159 = 3435;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4162 = 3436;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4163 = 3437;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4166 = 3438;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4167 = 3439;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4170 = 3440;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4171 = 3441;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4174 = 3442;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4175 = 3443;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4178 = 3444;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4179 = 3445;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4182 = 3446;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4183 = 3447;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4186 = 3448;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4187 = 3449;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4190 = 3450;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4191 = 3451;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4194 = 3452;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4195 = 3453;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4198 = 3454;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4199 = 3455;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4202 = 3456;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4203 = 3457;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4206 = 3458;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4207 = 3459;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4210 = 3460;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4211 = 3461;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4214 = 3462;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4215 = 3463;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4218 = 3464;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4219 = 3465;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4222 = 3466;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4223 = 3467;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4226 = 3468;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4227 = 3469;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4230 = 3470;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4231 = 3471;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4234 = 3472;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4235 = 3473;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4238 = 3474;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4239 = 3475;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4242 = 3476;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4243 = 3477;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4246 = 3478;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4247 = 3479;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4250 = 3480;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4251 = 3481;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4254 = 3482;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4255 = 3483;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4258 = 3484;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4259 = 3485;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4262 = 3486;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4263 = 3487;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4266 = 3488;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4267 = 3489;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4270 = 3490;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4271 = 3491;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4274 = 3492;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4275 = 3493;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4278 = 3494;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4279 = 3495;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4282 = 3496;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4283 = 3497;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4286 = 3498;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4287 = 3499;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4290 = 3500;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4291 = 3501;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4294 = 3502;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4295 = 3503;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4298 = 3504;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4299 = 3505;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4302 = 3506;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4303 = 3507;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4306 = 3508;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4307 = 3509;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4310 = 3510;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4311 = 3511;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4314 = 3512;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4315 = 3513;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4318 = 3514;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4319 = 3515;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4322 = 3516;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4323 = 3517;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4326 = 3518;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4327 = 3519;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4330 = 3520;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4331 = 3521;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4334 = 3522;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4335 = 3523;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4338 = 3524;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4339 = 3525;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4342 = 3526;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4343 = 3527;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4346 = 3528;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4347 = 3529;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4350 = 3530;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4351 = 3531;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4354 = 3532;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4355 = 3533;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4358 = 3534;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4359 = 3535;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4362 = 3536;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4363 = 3537;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4366 = 3538;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4367 = 3539;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4370 = 3540;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4371 = 3541;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4374 = 3542;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4375 = 3543;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4378 = 3544;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4379 = 3545;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4382 = 3546;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4383 = 3547;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4386 = 3548;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4387 = 3549;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4390 = 3550;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4391 = 3551;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4394 = 3552;
	public static final int ART_L_JavaLexerImp_single_regular_string_literal_character_4395 = 3553;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4399 = 3554;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400 = 3555;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4403 = 3556;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404 = 3557;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4407 = 3558;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408 = 3559;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4411 = 3560;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412 = 3561;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4415 = 3562;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416 = 3563;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4419 = 3564;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420 = 3565;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4423 = 3566;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424 = 3567;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4427 = 3568;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428 = 3569;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4431 = 3570;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432 = 3571;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4435 = 3572;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436 = 3573;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4439 = 3574;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440 = 3575;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4443 = 3576;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444 = 3577;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4447 = 3578;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448 = 3579;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4451 = 3580;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452 = 3581;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4455 = 3582;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456 = 3583;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4459 = 3584;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460 = 3585;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4463 = 3586;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464 = 3587;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4467 = 3588;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468 = 3589;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4471 = 3590;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472 = 3591;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4475 = 3592;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476 = 3593;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4479 = 3594;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480 = 3595;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4483 = 3596;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484 = 3597;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4487 = 3598;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488 = 3599;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4491 = 3600;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492 = 3601;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4495 = 3602;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496 = 3603;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4499 = 3604;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500 = 3605;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4503 = 3606;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504 = 3607;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4507 = 3608;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508 = 3609;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4511 = 3610;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512 = 3611;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4515 = 3612;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516 = 3613;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4519 = 3614;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520 = 3615;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4523 = 3616;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524 = 3617;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4527 = 3618;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528 = 3619;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4531 = 3620;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532 = 3621;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4535 = 3622;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536 = 3623;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4539 = 3624;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540 = 3625;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4543 = 3626;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544 = 3627;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4547 = 3628;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548 = 3629;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4551 = 3630;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552 = 3631;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4555 = 3632;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556 = 3633;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4559 = 3634;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560 = 3635;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4563 = 3636;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564 = 3637;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4567 = 3638;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568 = 3639;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4571 = 3640;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572 = 3641;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4575 = 3642;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576 = 3643;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4579 = 3644;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580 = 3645;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4583 = 3646;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584 = 3647;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4587 = 3648;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588 = 3649;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4591 = 3650;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592 = 3651;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4595 = 3652;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596 = 3653;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4599 = 3654;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600 = 3655;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4603 = 3656;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604 = 3657;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4607 = 3658;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608 = 3659;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4611 = 3660;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612 = 3661;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4615 = 3662;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616 = 3663;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4619 = 3664;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620 = 3665;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4623 = 3666;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624 = 3667;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4627 = 3668;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628 = 3669;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4631 = 3670;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632 = 3671;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4635 = 3672;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636 = 3673;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4639 = 3674;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640 = 3675;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4643 = 3676;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644 = 3677;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4647 = 3678;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648 = 3679;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4651 = 3680;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652 = 3681;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4655 = 3682;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656 = 3683;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4659 = 3684;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660 = 3685;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4663 = 3686;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664 = 3687;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4667 = 3688;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668 = 3689;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4671 = 3690;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672 = 3691;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4675 = 3692;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676 = 3693;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4679 = 3694;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680 = 3695;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4683 = 3696;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684 = 3697;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4687 = 3698;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688 = 3699;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4691 = 3700;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692 = 3701;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4695 = 3702;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696 = 3703;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4699 = 3704;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700 = 3705;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4703 = 3706;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704 = 3707;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4707 = 3708;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708 = 3709;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4711 = 3710;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712 = 3711;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4715 = 3712;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716 = 3713;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4719 = 3714;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720 = 3715;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4723 = 3716;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724 = 3717;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4727 = 3718;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728 = 3719;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4731 = 3720;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732 = 3721;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4735 = 3722;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736 = 3723;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4739 = 3724;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740 = 3725;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4743 = 3726;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744 = 3727;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4747 = 3728;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748 = 3729;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4751 = 3730;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752 = 3731;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4755 = 3732;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756 = 3733;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4759 = 3734;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760 = 3735;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4763 = 3736;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764 = 3737;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4767 = 3738;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768 = 3739;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4771 = 3740;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772 = 3741;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4775 = 3742;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776 = 3743;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4779 = 3744;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780 = 3745;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4783 = 3746;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784 = 3747;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4787 = 3748;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788 = 3749;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4791 = 3750;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792 = 3751;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4795 = 3752;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796 = 3753;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4799 = 3754;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800 = 3755;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4803 = 3756;
	public static final int ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804 = 3757;
	public static final int ART_L_JavaLexerImp_NULL_4808 = 3758;
	public static final int ART_L_JavaLexerImp_NULL_4809 = 3759;
	public static final int ART_L_JavaLexerImp_NULL_4810 = 3760;
	public static final int ART_L_JavaLexerImp_NULL_4811 = 3761;
	public static final int ART_L_JavaLexerImp_NULL_4812 = 3762;
	public static final int ART_L_JavaLexerImp_NULL_4813 = 3763;
	public static final int ART_L_JavaLexerImp_NULL_4814 = 3764;
	public static final int ART_L_JavaLexerImp_NULL_4815 = 3765;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4819 = 3766;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4820 = 3767;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4823 = 3768;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4824 = 3769;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4827 = 3770;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4828 = 3771;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4831 = 3772;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4832 = 3773;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4835 = 3774;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4836 = 3775;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4839 = 3776;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4840 = 3777;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4843 = 3778;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4844 = 3779;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4847 = 3780;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4848 = 3781;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4851 = 3782;
	public static final int ART_L_JavaLexerImp_SEPARATORS_4852 = 3783;
	public static final int ART_L_JavaLexerImp_OP_4856 = 3784;
	public static final int ART_L_JavaLexerImp_OP_4857 = 3785;
	public static final int ART_L_JavaLexerImp_OP_4860 = 3786;
	public static final int ART_L_JavaLexerImp_OP_4861 = 3787;
	public static final int ART_L_JavaLexerImp_OP_4864 = 3788;
	public static final int ART_L_JavaLexerImp_OP_4865 = 3789;
	public static final int ART_L_JavaLexerImp_OP_4868 = 3790;
	public static final int ART_L_JavaLexerImp_OP_4869 = 3791;
	public static final int ART_L_JavaLexerImp_OP_4872 = 3792;
	public static final int ART_L_JavaLexerImp_OP_4873 = 3793;
	public static final int ART_L_JavaLexerImp_OP_4876 = 3794;
	public static final int ART_L_JavaLexerImp_OP_4877 = 3795;
	public static final int ART_L_JavaLexerImp_OP_4880 = 3796;
	public static final int ART_L_JavaLexerImp_OP_4881 = 3797;
	public static final int ART_L_JavaLexerImp_OP_4884 = 3798;
	public static final int ART_L_JavaLexerImp_OP_4885 = 3799;
	public static final int ART_L_JavaLexerImp_OP_4886 = 3800;
	public static final int ART_L_JavaLexerImp_OP_4887 = 3801;
	public static final int ART_L_JavaLexerImp_OP_4890 = 3802;
	public static final int ART_L_JavaLexerImp_OP_4891 = 3803;
	public static final int ART_L_JavaLexerImp_OP_4892 = 3804;
	public static final int ART_L_JavaLexerImp_OP_4893 = 3805;
	public static final int ART_L_JavaLexerImp_OP_4896 = 3806;
	public static final int ART_L_JavaLexerImp_OP_4897 = 3807;
	public static final int ART_L_JavaLexerImp_OP_4898 = 3808;
	public static final int ART_L_JavaLexerImp_OP_4899 = 3809;
	public static final int ART_L_JavaLexerImp_OP_4902 = 3810;
	public static final int ART_L_JavaLexerImp_OP_4903 = 3811;
	public static final int ART_L_JavaLexerImp_OP_4904 = 3812;
	public static final int ART_L_JavaLexerImp_OP_4905 = 3813;
	public static final int ART_L_JavaLexerImp_OP_4908 = 3814;
	public static final int ART_L_JavaLexerImp_OP_4909 = 3815;
	public static final int ART_L_JavaLexerImp_OP_4910 = 3816;
	public static final int ART_L_JavaLexerImp_OP_4911 = 3817;
	public static final int ART_L_JavaLexerImp_OP_4914 = 3818;
	public static final int ART_L_JavaLexerImp_OP_4915 = 3819;
	public static final int ART_L_JavaLexerImp_OP_4916 = 3820;
	public static final int ART_L_JavaLexerImp_OP_4917 = 3821;
	public static final int ART_L_JavaLexerImp_OP_4920 = 3822;
	public static final int ART_L_JavaLexerImp_OP_4921 = 3823;
	public static final int ART_L_JavaLexerImp_OP_4922 = 3824;
	public static final int ART_L_JavaLexerImp_OP_4923 = 3825;
	public static final int ART_L_JavaLexerImp_OP_4926 = 3826;
	public static final int ART_L_JavaLexerImp_OP_4927 = 3827;
	public static final int ART_L_JavaLexerImp_OP_4928 = 3828;
	public static final int ART_L_JavaLexerImp_OP_4929 = 3829;
	public static final int ART_L_JavaLexerImp_OP_4930 = 3830;
	public static final int ART_L_JavaLexerImp_OP_4931 = 3831;
	public static final int ART_L_JavaLexerImp_OP_4934 = 3832;
	public static final int ART_L_JavaLexerImp_OP_4935 = 3833;
	public static final int ART_L_JavaLexerImp_OP_4938 = 3834;
	public static final int ART_L_JavaLexerImp_OP_4939 = 3835;
	public static final int ART_L_JavaLexerImp_OP_4942 = 3836;
	public static final int ART_L_JavaLexerImp_OP_4943 = 3837;
	public static final int ART_L_JavaLexerImp_OP_4946 = 3838;
	public static final int ART_L_JavaLexerImp_OP_4947 = 3839;
	public static final int ART_L_JavaLexerImp_OP_4950 = 3840;
	public static final int ART_L_JavaLexerImp_OP_4951 = 3841;
	public static final int ART_L_JavaLexerImp_OP_4954 = 3842;
	public static final int ART_L_JavaLexerImp_OP_4955 = 3843;
	public static final int ART_L_JavaLexerImp_OP_4958 = 3844;
	public static final int ART_L_JavaLexerImp_OP_4959 = 3845;
	public static final int ART_L_JavaLexerImp_OP_4962 = 3846;
	public static final int ART_L_JavaLexerImp_OP_4963 = 3847;
	public static final int ART_L_JavaLexerImp_OP_4966 = 3848;
	public static final int ART_L_JavaLexerImp_OP_4967 = 3849;
	public static final int ART_L_JavaLexerImp_OP_4968 = 3850;
	public static final int ART_L_JavaLexerImp_OP_4969 = 3851;
	public static final int ART_L_JavaLexerImp_OP_4972 = 3852;
	public static final int ART_L_JavaLexerImp_OP_4973 = 3853;
	public static final int ART_L_JavaLexerImp_OP_4974 = 3854;
	public static final int ART_L_JavaLexerImp_OP_4975 = 3855;
	public static final int ART_L_JavaLexerImp_OP_4978 = 3856;
	public static final int ART_L_JavaLexerImp_OP_4979 = 3857;
	public static final int ART_L_JavaLexerImp_OP_4980 = 3858;
	public static final int ART_L_JavaLexerImp_OP_4981 = 3859;
	public static final int ART_L_JavaLexerImp_OP_4982 = 3860;
	public static final int ART_L_JavaLexerImp_OP_4983 = 3861;
	public static final int ART_L_JavaLexerImp_OP_4986 = 3862;
	public static final int ART_L_JavaLexerImp_OP_4987 = 3863;
	public static final int ART_L_JavaLexerImp_OP_4988 = 3864;
	public static final int ART_L_JavaLexerImp_OP_4989 = 3865;
	public static final int ART_L_JavaLexerImp_OP_4992 = 3866;
	public static final int ART_L_JavaLexerImp_OP_4993 = 3867;
	public static final int ART_L_JavaLexerImp_OP_4994 = 3868;
	public static final int ART_L_JavaLexerImp_OP_4995 = 3869;
	public static final int ART_L_JavaLexerImp_OP_4998 = 3870;
	public static final int ART_L_JavaLexerImp_OP_4999 = 3871;
	public static final int ART_L_JavaLexerImp_OP_5000 = 3872;
	public static final int ART_L_JavaLexerImp_OP_5001 = 3873;
	public static final int ART_L_JavaLexerImp_OP_5004 = 3874;
	public static final int ART_L_JavaLexerImp_OP_5005 = 3875;
	public static final int ART_L_JavaLexerImp_OP_5006 = 3876;
	public static final int ART_L_JavaLexerImp_OP_5007 = 3877;
	public static final int ART_L_JavaLexerImp_OP_5010 = 3878;
	public static final int ART_L_JavaLexerImp_OP_5011 = 3879;
	public static final int ART_L_JavaLexerImp_OP_5012 = 3880;
	public static final int ART_L_JavaLexerImp_OP_5013 = 3881;
	public static final int ART_L_JavaLexerImp_OP_5016 = 3882;
	public static final int ART_L_JavaLexerImp_OP_5017 = 3883;
	public static final int ART_L_JavaLexerImp_OP_5018 = 3884;
	public static final int ART_L_JavaLexerImp_OP_5019 = 3885;
	public static final int ART_L_JavaLexerImp_OP_5022 = 3886;
	public static final int ART_L_JavaLexerImp_OP_5023 = 3887;
	public static final int ART_L_JavaLexerImp_OP_5024 = 3888;
	public static final int ART_L_JavaLexerImp_OP_5025 = 3889;
	public static final int ART_L_JavaLexerImp_OP_5028 = 3890;
	public static final int ART_L_JavaLexerImp_OP_5029 = 3891;
	public static final int ART_L_JavaLexerImp_OP_5030 = 3892;
	public static final int ART_L_JavaLexerImp_OP_5031 = 3893;
	public static final int ART_L_JavaLexerImp_OP_5034 = 3894;
	public static final int ART_L_JavaLexerImp_OP_5035 = 3895;
	public static final int ART_L_JavaLexerImp_OP_5036 = 3896;
	public static final int ART_L_JavaLexerImp_OP_5037 = 3897;
	public static final int ART_L_JavaLexerImp_OP_5038 = 3898;
	public static final int ART_L_JavaLexerImp_OP_5039 = 3899;
	public static final int ART_L_JavaLexerImp_OP_5042 = 3900;
	public static final int ART_L_JavaLexerImp_OP_5043 = 3901;
	public static final int ART_L_JavaLexerImp_OP_5044 = 3902;
	public static final int ART_L_JavaLexerImp_OP_5045 = 3903;
	public static final int ART_L_JavaLexerImp_OP_5046 = 3904;
	public static final int ART_L_JavaLexerImp_OP_5047 = 3905;
	public static final int ART_L_JavaLexerImp_OP_5050 = 3906;
	public static final int ART_L_JavaLexerImp_OP_5051 = 3907;
	public static final int ART_L_JavaLexerImp_OP_5052 = 3908;
	public static final int ART_L_JavaLexerImp_OP_5053 = 3909;
	public static final int ART_L_JavaLexerImp_OP_5054 = 3910;
	public static final int ART_L_JavaLexerImp_OP_5055 = 3911;
	public static final int ART_L_JavaLexerImp_OP_5056 = 3912;
	public static final int ART_L_JavaLexerImp_OP_5057 = 3913;
	public static final int ART_X_DESPATCH = 3914;
	public static final int ART_X_DUMMY = 3915;
	public static final int ART_X_LABEL_EXTENT = 3916;
	/* End of artLabel enumeration */

	/* Start of artName enumeration */
	public static final int ART__NAME_NONE = 0;
	public static final int ART__NAME_EXTENT = 1;
	/* End of artName enumeration */
	public void lexBuiltinInstances() {
	}

	public void lexPreparseWhitespaceInstances() {
		characterStringInputIndex += artBuiltin_WHITESPACE(characterStringInputIndex);
	}

	public void ART_PF_input() {
		switch (currentRestartLabel) {
				/* Nonterminal input production descriptor loads*/
			case ART_L_JavaLexerImp_input: 
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_5, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal input: match production*/
			case ART_L_JavaLexerImp_input_5: 
				/* Cat/unary template start */
				/* Kleene closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_252, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet131[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFNode = findSPPFEpsilon(currentInputIndex);
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
 }
				currentSPPFNode = dummySPPFNode;
				/*L*/
			case ART_C_JavaLexerImp_input_6: 
				if (!ARTSet1[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet155[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_9, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_13, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_17, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_21, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_25, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_29, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_33, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_37, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_41, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_45, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_49, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_53, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_57, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_61, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_65, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_69, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_73, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_77, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_81, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_85, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_89, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_93, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_97, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_101, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_105, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_109, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_113, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_117, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_121, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_125, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_129, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_133, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_137, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_141, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_145, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_149, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_153, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_157, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_161, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_165, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_169, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_173, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_177, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_181, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_185, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_189, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_193, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_197, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_201, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_205, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_209, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_213, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet161[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_217, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet160[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_221, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet162[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_225, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet165[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_229, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_233, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_237, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_241, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet157[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_245, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet158[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_input_249, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_input_9: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_11, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_WS; return; }
			case ART_L_JavaLexerImp_input_11: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_13: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_15, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_COMMENT; return; }
			case ART_L_JavaLexerImp_input_15: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_17: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_19, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_abstract; return; }
			case ART_L_JavaLexerImp_input_19: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_21: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_23, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_assert; return; }
			case ART_L_JavaLexerImp_input_23: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_25: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_27, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_boolean; return; }
			case ART_L_JavaLexerImp_input_27: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_29: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_31, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_break; return; }
			case ART_L_JavaLexerImp_input_31: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_33: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_35, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_byte; return; }
			case ART_L_JavaLexerImp_input_35: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_37: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_39, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_case; return; }
			case ART_L_JavaLexerImp_input_39: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_41: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_43, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_catch; return; }
			case ART_L_JavaLexerImp_input_43: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_45: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_47, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_char; return; }
			case ART_L_JavaLexerImp_input_47: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_49: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_51, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_class; return; }
			case ART_L_JavaLexerImp_input_51: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_53: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_55, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_const; return; }
			case ART_L_JavaLexerImp_input_55: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_57: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_59, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_continue; return; }
			case ART_L_JavaLexerImp_input_59: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_61: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_63, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_default; return; }
			case ART_L_JavaLexerImp_input_63: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_65: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_67, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_do; return; }
			case ART_L_JavaLexerImp_input_67: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_69: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_71, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_double; return; }
			case ART_L_JavaLexerImp_input_71: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_73: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_75, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_else; return; }
			case ART_L_JavaLexerImp_input_75: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_77: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_79, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_enum; return; }
			case ART_L_JavaLexerImp_input_79: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_81: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_83, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_extends; return; }
			case ART_L_JavaLexerImp_input_83: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_85: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_87, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_final; return; }
			case ART_L_JavaLexerImp_input_87: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_89: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_91, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_finally; return; }
			case ART_L_JavaLexerImp_input_91: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_93: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_95, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float; return; }
			case ART_L_JavaLexerImp_input_95: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_97: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_99, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_for; return; }
			case ART_L_JavaLexerImp_input_99: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_101: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_103, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_if; return; }
			case ART_L_JavaLexerImp_input_103: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_105: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_107, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_goto; return; }
			case ART_L_JavaLexerImp_input_107: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_109: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_111, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_implements; return; }
			case ART_L_JavaLexerImp_input_111: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_113: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_115, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_import; return; }
			case ART_L_JavaLexerImp_input_115: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_117: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_119, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_instanceof; return; }
			case ART_L_JavaLexerImp_input_119: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_121: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_123, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_int; return; }
			case ART_L_JavaLexerImp_input_123: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_125: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_127, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_interface; return; }
			case ART_L_JavaLexerImp_input_127: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_129: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_131, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_long; return; }
			case ART_L_JavaLexerImp_input_131: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_133: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_135, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_native; return; }
			case ART_L_JavaLexerImp_input_135: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_137: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_139, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_new; return; }
			case ART_L_JavaLexerImp_input_139: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_141: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_143, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_package; return; }
			case ART_L_JavaLexerImp_input_143: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_145: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_147, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_private; return; }
			case ART_L_JavaLexerImp_input_147: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_149: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_151, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_protected; return; }
			case ART_L_JavaLexerImp_input_151: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_153: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_155, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_public; return; }
			case ART_L_JavaLexerImp_input_155: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_157: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_159, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_return; return; }
			case ART_L_JavaLexerImp_input_159: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_161: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_163, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_short; return; }
			case ART_L_JavaLexerImp_input_163: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_165: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_167, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_static; return; }
			case ART_L_JavaLexerImp_input_167: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_169: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_171, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_strictfp; return; }
			case ART_L_JavaLexerImp_input_171: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_173: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_175, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_super; return; }
			case ART_L_JavaLexerImp_input_175: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_177: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_179, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_switch; return; }
			case ART_L_JavaLexerImp_input_179: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_181: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_183, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_synchronized; return; }
			case ART_L_JavaLexerImp_input_183: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_185: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_187, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_this; return; }
			case ART_L_JavaLexerImp_input_187: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_189: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_191, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_throw; return; }
			case ART_L_JavaLexerImp_input_191: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_193: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_195, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_throws; return; }
			case ART_L_JavaLexerImp_input_195: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_197: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_199, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_transient; return; }
			case ART_L_JavaLexerImp_input_199: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_201: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_203, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_try; return; }
			case ART_L_JavaLexerImp_input_203: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_205: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_207, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_void; return; }
			case ART_L_JavaLexerImp_input_207: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_209: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_211, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_volatile; return; }
			case ART_L_JavaLexerImp_input_211: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_213: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_215, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_while; return; }
			case ART_L_JavaLexerImp_input_215: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_217: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_219, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_ID; return; }
			case ART_L_JavaLexerImp_input_219: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_221: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_223, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_INT; return; }
			case ART_L_JavaLexerImp_input_223: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_225: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_227, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_FLOAT; return; }
			case ART_L_JavaLexerImp_input_227: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_229: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_231, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_BOOL; return; }
			case ART_L_JavaLexerImp_input_231: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_233: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_235, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_CHAR; return; }
			case ART_L_JavaLexerImp_input_235: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_237: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_239, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_STRING; return; }
			case ART_L_JavaLexerImp_input_239: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_241: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_243, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_NULL; return; }
			case ART_L_JavaLexerImp_input_243: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_245: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_247, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_SEPARATORS; return; }
			case ART_L_JavaLexerImp_input_247: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_L_JavaLexerImp_input_249: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_input_251, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_OP; return; }
			case ART_L_JavaLexerImp_input_251: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_input_7; return; }
			case ART_A_JavaLexerImp_input_7: 
				if (testRepeat(ART_L_JavaLexerImp_input_7, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				if (ARTSet131[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_input_6; return; }
			case ART_L_JavaLexerImp_input_252: 
				/* Kleene closure, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet131[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_abstract() {
		switch (currentRestartLabel) {
				/* Nonterminal abstract production descriptor loads*/
			case ART_L_JavaLexerImp_abstract: 
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_abstract_255, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal abstract: match production*/
			case ART_L_JavaLexerImp_abstract_255: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_257, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet150[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_259, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_261, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_263, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_265, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_267, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_269, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_abstract_271, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_assert() {
		switch (currentRestartLabel) {
				/* Nonterminal assert production descriptor loads*/
			case ART_L_JavaLexerImp_assert: 
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_assert_274, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal assert: match production*/
			case ART_L_JavaLexerImp_assert_274: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_276, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_278, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_280, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_282, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_284, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_assert_286, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_boolean() {
		switch (currentRestartLabel) {
				/* Nonterminal boolean production descriptor loads*/
			case ART_L_JavaLexerImp_boolean: 
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_boolean_289, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal boolean: match production*/
			case ART_L_JavaLexerImp_boolean_289: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_291, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_293, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_295, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_297, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_299, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_301, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_boolean_303, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_break() {
		switch (currentRestartLabel) {
				/* Nonterminal break production descriptor loads*/
			case ART_L_JavaLexerImp_break: 
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_break_306, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal break: match production*/
			case ART_L_JavaLexerImp_break_306: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_break_308, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_break_310, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_break_312, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_break_314, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet74[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_break_316, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_byte() {
		switch (currentRestartLabel) {
				/* Nonterminal byte production descriptor loads*/
			case ART_L_JavaLexerImp_byte: 
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_byte_319, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal byte: match production*/
			case ART_L_JavaLexerImp_byte_319: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_byte_321, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet79[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_byte_323, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_byte_325, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_byte_327, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_case() {
		switch (currentRestartLabel) {
				/* Nonterminal case production descriptor loads*/
			case ART_L_JavaLexerImp_case: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_case_330, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal case: match production*/
			case ART_L_JavaLexerImp_case_330: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_case_332, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_case_334, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_case_336, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_case_338, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_catch() {
		switch (currentRestartLabel) {
				/* Nonterminal catch production descriptor loads*/
			case ART_L_JavaLexerImp_catch: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_catch_341, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal catch: match production*/
			case ART_L_JavaLexerImp_catch_341: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_catch_343, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_catch_345, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_catch_347, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_catch_349, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_catch_351, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_char() {
		switch (currentRestartLabel) {
				/* Nonterminal char production descriptor loads*/
			case ART_L_JavaLexerImp_char: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_char_354, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal char: match production*/
			case ART_L_JavaLexerImp_char_354: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_char_356, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_char_358, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_char_360, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_char_362, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_class() {
		switch (currentRestartLabel) {
				/* Nonterminal class production descriptor loads*/
			case ART_L_JavaLexerImp_class: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_class_365, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal class: match production*/
			case ART_L_JavaLexerImp_class_365: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_class_367, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_class_369, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_class_371, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_class_373, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_class_375, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_const() {
		switch (currentRestartLabel) {
				/* Nonterminal const production descriptor loads*/
			case ART_L_JavaLexerImp_const: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_const_378, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal const: match production*/
			case ART_L_JavaLexerImp_const_378: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_const_380, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_const_382, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_const_384, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_const_386, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_const_388, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_continue() {
		switch (currentRestartLabel) {
				/* Nonterminal continue production descriptor loads*/
			case ART_L_JavaLexerImp_continue: 
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_continue_391, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal continue: match production*/
			case ART_L_JavaLexerImp_continue_391: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_393, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_395, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_397, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_399, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_401, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_403, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_405, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_continue_407, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_default() {
		switch (currentRestartLabel) {
				/* Nonterminal default production descriptor loads*/
			case ART_L_JavaLexerImp_default: 
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_default_410, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal default: match production*/
			case ART_L_JavaLexerImp_default_410: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_412, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_414, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_416, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_418, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_420, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_422, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_default_424, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_do() {
		switch (currentRestartLabel) {
				/* Nonterminal do production descriptor loads*/
			case ART_L_JavaLexerImp_do: 
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_do_427, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal do: match production*/
			case ART_L_JavaLexerImp_do_427: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_do_429, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_do_431, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_double() {
		switch (currentRestartLabel) {
				/* Nonterminal double production descriptor loads*/
			case ART_L_JavaLexerImp_double: 
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_double_434, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal double: match production*/
			case ART_L_JavaLexerImp_double_434: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_436, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_438, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_440, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet150[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_442, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_444, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_double_446, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_else() {
		switch (currentRestartLabel) {
				/* Nonterminal else production descriptor loads*/
			case ART_L_JavaLexerImp_else: 
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_else_449, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal else: match production*/
			case ART_L_JavaLexerImp_else_449: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_else_451, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_else_453, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_else_455, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_else_457, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_enum() {
		switch (currentRestartLabel) {
				/* Nonterminal enum production descriptor loads*/
			case ART_L_JavaLexerImp_enum: 
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_enum_460, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal enum: match production*/
			case ART_L_JavaLexerImp_enum_460: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_enum_462, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_enum_464, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_enum_466, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet75[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_enum_468, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_extends() {
		switch (currentRestartLabel) {
				/* Nonterminal extends production descriptor loads*/
			case ART_L_JavaLexerImp_extends: 
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_extends_471, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal extends: match production*/
			case ART_L_JavaLexerImp_extends_471: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_473, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet78[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_475, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_477, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_479, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_481, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet147[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_483, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_extends_485, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_final() {
		switch (currentRestartLabel) {
				/* Nonterminal final production descriptor loads*/
			case ART_L_JavaLexerImp_final: 
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_final_488, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal final: match production*/
			case ART_L_JavaLexerImp_final_488: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_final_490, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_final_492, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_final_494, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_final_496, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_final_498, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_finally() {
		switch (currentRestartLabel) {
				/* Nonterminal finally production descriptor loads*/
			case ART_L_JavaLexerImp_finally: 
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_finally_501, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal finally: match production*/
			case ART_L_JavaLexerImp_finally_501: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_503, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_505, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_507, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_509, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_511, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_513, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet79[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_finally_515, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_float() {
		switch (currentRestartLabel) {
				/* Nonterminal float production descriptor loads*/
			case ART_L_JavaLexerImp_float: 
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_float_518, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal float: match production*/
			case ART_L_JavaLexerImp_float_518: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_520, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_522, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_524, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_526, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_528, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_for() {
		switch (currentRestartLabel) {
				/* Nonterminal for production descriptor loads*/
			case ART_L_JavaLexerImp_for: 
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_for_531, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal for: match production*/
			case ART_L_JavaLexerImp_for_531: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_for_533, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_for_535, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_for_537, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_if() {
		switch (currentRestartLabel) {
				/* Nonterminal if production descriptor loads*/
			case ART_L_JavaLexerImp_if: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_if_540, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal if: match production*/
			case ART_L_JavaLexerImp_if_540: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_if_542, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_if_544, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_goto() {
		switch (currentRestartLabel) {
				/* Nonterminal goto production descriptor loads*/
			case ART_L_JavaLexerImp_goto: 
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_goto_547, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal goto: match production*/
			case ART_L_JavaLexerImp_goto_547: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_goto_549, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_goto_551, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_goto_553, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_goto_555, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_implements() {
		switch (currentRestartLabel) {
				/* Nonterminal implements production descriptor loads*/
			case ART_L_JavaLexerImp_implements: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_implements_558, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal implements: match production*/
			case ART_L_JavaLexerImp_implements_558: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_560, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet75[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_562, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet119[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_564, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_566, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_568, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet75[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_570, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_572, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_574, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_576, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_implements_578, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_import() {
		switch (currentRestartLabel) {
				/* Nonterminal import production descriptor loads*/
			case ART_L_JavaLexerImp_import: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_import_581, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal import: match production*/
			case ART_L_JavaLexerImp_import_581: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_583, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet75[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_585, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet119[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_587, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_589, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_591, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_import_593, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_instanceof() {
		switch (currentRestartLabel) {
				/* Nonterminal instanceof production descriptor loads*/
			case ART_L_JavaLexerImp_instanceof: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_instanceof_596, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal instanceof: match production*/
			case ART_L_JavaLexerImp_instanceof_596: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_598, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_600, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_602, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_604, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_606, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_608, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_610, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_612, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_614, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_instanceof_616, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_int() {
		switch (currentRestartLabel) {
				/* Nonterminal int production descriptor loads*/
			case ART_L_JavaLexerImp_int: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_int_619, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal int: match production*/
			case ART_L_JavaLexerImp_int_619: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_int_621, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_int_623, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_int_625, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_interface() {
		switch (currentRestartLabel) {
				/* Nonterminal interface production descriptor loads*/
			case ART_L_JavaLexerImp_interface: 
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_interface_628, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal interface: match production*/
			case ART_L_JavaLexerImp_interface_628: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_630, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_632, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_634, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_636, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_638, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_640, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_642, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_644, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_interface_646, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_long() {
		switch (currentRestartLabel) {
				/* Nonterminal long production descriptor loads*/
			case ART_L_JavaLexerImp_long: 
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_long_649, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal long: match production*/
			case ART_L_JavaLexerImp_long_649: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_long_651, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_long_653, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_long_655, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet140[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_long_657, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_native() {
		switch (currentRestartLabel) {
				/* Nonterminal native production descriptor loads*/
			case ART_L_JavaLexerImp_native: 
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_native_660, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal native: match production*/
			case ART_L_JavaLexerImp_native_660: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_662, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_664, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_666, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_668, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet110[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_670, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_native_672, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_new() {
		switch (currentRestartLabel) {
				/* Nonterminal new production descriptor loads*/
			case ART_L_JavaLexerImp_new: 
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_new_675, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal new: match production*/
			case ART_L_JavaLexerImp_new_675: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_new_677, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_new_679, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet109[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_new_681, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_package() {
		switch (currentRestartLabel) {
				/* Nonterminal package production descriptor loads*/
			case ART_L_JavaLexerImp_package: 
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_package_684, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal package: match production*/
			case ART_L_JavaLexerImp_package_684: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_686, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_688, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_690, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet74[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_692, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_694, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet140[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_696, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_package_698, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_private() {
		switch (currentRestartLabel) {
				/* Nonterminal private production descriptor loads*/
			case ART_L_JavaLexerImp_private: 
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_private_701, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal private: match production*/
			case ART_L_JavaLexerImp_private_701: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_703, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_705, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_707, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet110[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_709, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_711, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_713, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_private_715, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_protected() {
		switch (currentRestartLabel) {
				/* Nonterminal protected production descriptor loads*/
			case ART_L_JavaLexerImp_protected: 
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_protected_718, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal protected: match production*/
			case ART_L_JavaLexerImp_protected_718: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_720, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_722, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_724, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_726, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_728, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_730, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_732, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_734, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet147[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_protected_736, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_public() {
		switch (currentRestartLabel) {
				/* Nonterminal public production descriptor loads*/
			case ART_L_JavaLexerImp_public: 
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_public_739, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal public: match production*/
			case ART_L_JavaLexerImp_public_739: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_741, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_743, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet150[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_745, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_747, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_749, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_public_751, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_return() {
		switch (currentRestartLabel) {
				/* Nonterminal return production descriptor loads*/
			case ART_L_JavaLexerImp_return: 
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_return_754, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal return: match production*/
			case ART_L_JavaLexerImp_return_754: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_756, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_758, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_760, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_762, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_764, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_return_766, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_short() {
		switch (currentRestartLabel) {
				/* Nonterminal short production descriptor loads*/
			case ART_L_JavaLexerImp_short: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_short_769, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal short: match production*/
			case ART_L_JavaLexerImp_short_769: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_short_771, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_short_773, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_short_775, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_short_777, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_short_779, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_static() {
		switch (currentRestartLabel) {
				/* Nonterminal static production descriptor loads*/
			case ART_L_JavaLexerImp_static: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_static_782, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal static: match production*/
			case ART_L_JavaLexerImp_static_782: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_784, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_786, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_788, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_790, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_792, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_static_794, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_strictfp() {
		switch (currentRestartLabel) {
				/* Nonterminal strictfp production descriptor loads*/
			case ART_L_JavaLexerImp_strictfp: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_strictfp_797, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal strictfp: match production*/
			case ART_L_JavaLexerImp_strictfp_797: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_799, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_801, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_803, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_805, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_807, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_809, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_811, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet119[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_strictfp_813, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_super() {
		switch (currentRestartLabel) {
				/* Nonterminal super production descriptor loads*/
			case ART_L_JavaLexerImp_super: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_super_816, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal super: match production*/
			case ART_L_JavaLexerImp_super_816: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_super_818, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_super_820, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet119[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_super_822, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_super_824, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_super_826, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_switch() {
		switch (currentRestartLabel) {
				/* Nonterminal switch production descriptor loads*/
			case ART_L_JavaLexerImp_switch: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_switch_829, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal switch: match production*/
			case ART_L_JavaLexerImp_switch_829: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_831, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet109[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_833, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_835, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_837, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_839, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_switch_841, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_synchronized() {
		switch (currentRestartLabel) {
				/* Nonterminal synchronized production descriptor loads*/
			case ART_L_JavaLexerImp_synchronized: 
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_synchronized_844, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal synchronized: match production*/
			case ART_L_JavaLexerImp_synchronized_844: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_846, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet79[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_848, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_850, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet149[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_852, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_854, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_856, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_858, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_860, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_862, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet80[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_864, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_866, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet147[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_synchronized_868, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_this() {
		switch (currentRestartLabel) {
				/* Nonterminal this production descriptor loads*/
			case ART_L_JavaLexerImp_this: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_this_871, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal this: match production*/
			case ART_L_JavaLexerImp_this_871: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_this_873, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_this_875, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_this_877, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_this_879, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_throw() {
		switch (currentRestartLabel) {
				/* Nonterminal throw production descriptor loads*/
			case ART_L_JavaLexerImp_throw: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_throw_882, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal throw: match production*/
			case ART_L_JavaLexerImp_throw_882: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throw_884, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throw_886, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throw_888, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throw_890, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet109[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throw_892, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_throws() {
		switch (currentRestartLabel) {
				/* Nonterminal throws production descriptor loads*/
			case ART_L_JavaLexerImp_throws: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_throws_895, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal throws: match production*/
			case ART_L_JavaLexerImp_throws_895: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_897, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_899, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_901, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_903, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet109[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_905, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_throws_907, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_transient() {
		switch (currentRestartLabel) {
				/* Nonterminal transient production descriptor loads*/
			case ART_L_JavaLexerImp_transient: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_transient_910, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal transient: match production*/
			case ART_L_JavaLexerImp_transient_910: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_912, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_914, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_916, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_918, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_920, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_922, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_924, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_926, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_transient_928, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_try() {
		switch (currentRestartLabel) {
				/* Nonterminal try production descriptor loads*/
			case ART_L_JavaLexerImp_try: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_try_931, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal try: match production*/
			case ART_L_JavaLexerImp_try_931: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_try_933, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_try_935, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet79[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_try_937, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_void() {
		switch (currentRestartLabel) {
				/* Nonterminal void production descriptor loads*/
			case ART_L_JavaLexerImp_void: 
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_void_940, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal void: match production*/
			case ART_L_JavaLexerImp_void_940: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_void_942, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_void_944, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_void_946, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet147[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_void_948, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_volatile() {
		switch (currentRestartLabel) {
				/* Nonterminal volatile production descriptor loads*/
			case ART_L_JavaLexerImp_volatile: 
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_volatile_951, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal volatile: match production*/
			case ART_L_JavaLexerImp_volatile_951: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_953, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet76[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_955, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_957, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_959, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_961, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_963, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_965, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_volatile_967, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_while() {
		switch (currentRestartLabel) {
				/* Nonterminal while production descriptor loads*/
			case ART_L_JavaLexerImp_while: 
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_while_970, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal while: match production*/
			case ART_L_JavaLexerImp_while_970: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_while_972, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet72[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_while_974, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet132[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_while_976, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_while_978, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_while_980, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_WS() {
		switch (currentRestartLabel) {
				/* Nonterminal WS production descriptor loads*/
			case ART_L_JavaLexerImp_WS: 
				if (ARTSet81[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_983, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_987, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_991, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_997, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_1001, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_WS_1005, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_983: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_985, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_987: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_989, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_991: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_993, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet81[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_995, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_997: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_999, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_1001: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_1003, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal WS: match production*/
			case ART_L_JavaLexerImp_WS_1005: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_WS_1007, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_COMMENT() {
		switch (currentRestartLabel) {
				/* Nonterminal COMMENT production descriptor loads*/
			case ART_L_JavaLexerImp_COMMENT: 
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_COMMENT_1010, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_COMMENT_1022, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal COMMENT: match production*/
			case ART_L_JavaLexerImp_COMMENT_1010: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1012, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet163[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1014, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Kleene closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1020, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFNode = findSPPFEpsilon(currentInputIndex);
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
 }
				currentSPPFNode = dummySPPFNode;
				/*L*/
			case ART_C_JavaLexerImp_COMMENT_1015: 
				if (!ARTSet129[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1019, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_input_character; return; }
			case ART_L_JavaLexerImp_COMMENT_1019: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_COMMENT_1015; return; }
			case ART_L_JavaLexerImp_COMMENT_1020: 
				/* Kleene closure, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal COMMENT: match production*/
			case ART_L_JavaLexerImp_COMMENT_1022: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1024, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet100[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1026, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet2[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Kleene closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1043, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFNode = findSPPFEpsilon(currentInputIndex);
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
 }
				currentSPPFNode = dummySPPFNode;
				/*L*/
			case ART_C_JavaLexerImp_COMMENT_1027: 
				if (!ARTSet2[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet123[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_COMMENT_1030, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_COMMENT_1034, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_COMMENT_1030: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1032, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_not_asterisk; return; }
			case ART_L_JavaLexerImp_COMMENT_1032: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_COMMENT_1028; return; }
			case ART_L_JavaLexerImp_COMMENT_1034: 
				/* Cat/unary template start */
				/* Positive closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1040, currentGSSNode, currentInputIndex, currentSPPFNode);
				currentSPPFNode = dummySPPFNode;
			case ART_C_JavaLexerImp_COMMENT_1035: 
				if (!ARTSet100[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1039, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (ARTSet122[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_COMMENT_1035; return; }
			case ART_L_JavaLexerImp_COMMENT_1040: 
				/* Positive closure, non-nullable body template end */
				if (!ARTSet122[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1042, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_not_slash; return; }
			case ART_L_JavaLexerImp_COMMENT_1042: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_COMMENT_1028; return; }
			case ART_A_JavaLexerImp_COMMENT_1028: 
				if (testRepeat(ART_L_JavaLexerImp_COMMENT_1028, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_COMMENT_1027; return; }
			case ART_L_JavaLexerImp_COMMENT_1043: 
				/* Kleene closure, non-nullable body template end */
				if (!ARTSet100[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Positive closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_COMMENT_1049, currentGSSNode, currentInputIndex, currentSPPFNode);
				currentSPPFNode = dummySPPFNode;
			case ART_C_JavaLexerImp_COMMENT_1044: 
				if (!ARTSet100[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1048, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_COMMENT_1044; return; }
			case ART_L_JavaLexerImp_COMMENT_1049: 
				/* Positive closure, non-nullable body template end */
				if (!ARTSet163[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_COMMENT_1051, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_input_character() {
		switch (currentRestartLabel) {
				/* Nonterminal input_character production descriptor loads*/
			case ART_L_JavaLexerImp_input_character: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1054, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1058, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1062, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1066, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1070, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1074, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1078, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1082, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1086, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1090, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1094, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1098, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1102, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1106, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1110, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1114, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1118, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1122, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1126, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1130, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1134, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1138, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1142, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1146, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1150, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1154, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1158, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1162, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1166, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1170, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1174, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1178, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1182, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1186, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1190, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1194, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1198, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1202, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1206, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1210, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1214, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1218, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1222, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1226, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1230, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1234, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1238, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1242, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1246, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1250, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1254, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1258, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1262, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1266, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1270, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1274, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1278, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1282, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1286, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1290, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1294, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1298, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1302, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1306, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1310, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1314, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1318, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1322, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1326, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1330, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1334, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1338, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1342, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1346, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1350, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1354, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1358, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1362, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1366, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1370, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1374, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1378, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1382, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1386, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1390, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1394, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1398, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1402, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1406, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1410, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1414, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1418, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1422, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1426, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1430, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1434, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1438, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1442, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1446, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1450, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_input_character_1454, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1054: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1056, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1058: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1060, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1062: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1064, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1066: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1068, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1070: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1072, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1074: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1076, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1078: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1080, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1082: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1084, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1086: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1088, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1090: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1092, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1094: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1096, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1098: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1100, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1102: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1104, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1106: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1108, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1110: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1112, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1114: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1116, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1118: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1120, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1122: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1124, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1126: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1128, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1130: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1132, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1134: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1136, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1138: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1140, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1142: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1144, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1146: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1148, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1150: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1152, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1154: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1156, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1158: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1160, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1162: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1164, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1166: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1168, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1170: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1172, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1174: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1176, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1178: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1180, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1182: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1184, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1186: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1188, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1190: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1192, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1194: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1196, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1198: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1200, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1202: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1204, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1206: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1208, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1210: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1212, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1214: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1216, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1218: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1220, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1222: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1224, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1226: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1228, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1230: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1232, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1234: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1236, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1238: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1240, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1242: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1244, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1246: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1248, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1250: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1252, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1254: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1256, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1258: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1260, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1262: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1264, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1266: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1268, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1270: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1272, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1274: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1276, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1278: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1280, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1282: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1284, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1286: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1288, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1290: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1292, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1294: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1296, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1298: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1300, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1302: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1304, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1306: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1308, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1310: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1312, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1314: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1316, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1318: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1320, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1322: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1324, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1326: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1328, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1330: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1332, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1334: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1336, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1338: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1340, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1342: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1344, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1346: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1348, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1350: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1352, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1354: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1356, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1358: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1360, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1362: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1364, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1366: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1368, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1370: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1372, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1374: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1376, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1378: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1380, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1382: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1384, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1386: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1388, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1390: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1392, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1394: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1396, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1398: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1400, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1402: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1404, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1406: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1408, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1410: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1412, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1414: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1416, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1418: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1420, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1422: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1424, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1426: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1428, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1430: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1432, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1434: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1436, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1438: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1440, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1442: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1444, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1446: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1448, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1450: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1452, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal input_character: match production*/
			case ART_L_JavaLexerImp_input_character_1454: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_input_character_1456, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_new_line_character() {
		switch (currentRestartLabel) {
				/* Nonterminal new_line_character production descriptor loads*/
			case ART_L_JavaLexerImp_new_line_character: 
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_new_line_character_1459, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet81[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_new_line_character_1463, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal new_line_character: match production*/
			case ART_L_JavaLexerImp_new_line_character_1459: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_new_line_character_1461, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal new_line_character: match production*/
			case ART_L_JavaLexerImp_new_line_character_1463: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_new_line_character_1465, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_not_asterisk() {
		switch (currentRestartLabel) {
				/* Nonterminal not_asterisk production descriptor loads*/
			case ART_L_JavaLexerImp_not_asterisk: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1468, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1472, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1476, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1480, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1484, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1488, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1492, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1496, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1500, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1504, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1508, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1512, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1516, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1520, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1524, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1528, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1532, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1536, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet81[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1540, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1544, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1548, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1552, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1556, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1560, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1564, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1568, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1572, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1576, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1580, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1584, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1588, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1592, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1596, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1600, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1604, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1608, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1612, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1616, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1620, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1624, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1628, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1632, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1636, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1640, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1644, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1648, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1652, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1656, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1660, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1664, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1668, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1672, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1676, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1680, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1684, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1688, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1692, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1696, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1700, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1704, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1708, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1712, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1716, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1720, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1724, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1728, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1732, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1736, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1740, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1744, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1748, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1752, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1756, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1760, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1764, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1768, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1772, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1776, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1780, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1784, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1788, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1792, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1796, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1800, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1804, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1808, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1812, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1816, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1820, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1824, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1828, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1832, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1836, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1840, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1844, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1848, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1852, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1856, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1860, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1864, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1868, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_asterisk_1872, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1468: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1470, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1472: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1474, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1476: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1478, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1480: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1482, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1484: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1486, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1488: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1490, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1492: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1494, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1496: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1498, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1500: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1502, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1504: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1506, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1508: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1510, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1512: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1514, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1516: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1518, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1520: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1522, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1524: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1526, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1528: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1530, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1532: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1534, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1536: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1538, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1540: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1542, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1544: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1546, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1548: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1550, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1552: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1554, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1556: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1558, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1560: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1562, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1564: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1566, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1568: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1570, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1572: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1574, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1576: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1578, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1580: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1582, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1584: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1586, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1588: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1590, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1592: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1594, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1596: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1598, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1600: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1602, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1604: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1606, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1608: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1610, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1612: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1614, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1616: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1618, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1620: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1622, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1624: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1626, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1628: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1630, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1632: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1634, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1636: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1638, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1640: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1642, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1644: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1646, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1648: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1650, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1652: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1654, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1656: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1658, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1660: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1662, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1664: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1666, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1668: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1670, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1672: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1674, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1676: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1678, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1680: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1682, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1684: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1686, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1688: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1690, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1692: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1694, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1696: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1698, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1700: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1702, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1704: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1706, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1708: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1710, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1712: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1714, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1716: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1718, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1720: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1722, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1724: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1726, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1728: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1730, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1732: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1734, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1736: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1738, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1740: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1742, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1744: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1746, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1748: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1750, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1752: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1754, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1756: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1758, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1760: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1762, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1764: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1766, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1768: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1770, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1772: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1774, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1776: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1778, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1780: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1782, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1784: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1786, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1788: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1790, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1792: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1794, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1796: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1798, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1800: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1802, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1804: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1806, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1808: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1810, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1812: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1814, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1816: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1818, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1820: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1822, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1824: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1826, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1828: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1830, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1832: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1834, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1836: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1838, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1840: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1842, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1844: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1846, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1848: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1850, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1852: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1854, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1856: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1858, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1860: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1862, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1864: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1866, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1868: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1870, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_asterisk: match production*/
			case ART_L_JavaLexerImp_not_asterisk_1872: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_asterisk_1874, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_not_slash() {
		switch (currentRestartLabel) {
				/* Nonterminal not_slash production descriptor loads*/
			case ART_L_JavaLexerImp_not_slash: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1877, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1881, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1885, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1889, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1893, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1897, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1901, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1905, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1909, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1913, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1917, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1921, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1925, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1929, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1933, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1937, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1941, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1945, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet81[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1949, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1953, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1957, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1961, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1965, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1969, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1973, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1977, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1981, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1985, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1989, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1993, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_1997, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2001, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2005, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2009, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2013, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2017, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2021, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2025, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2029, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2033, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2037, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2041, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2045, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2049, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2053, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2057, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2061, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2065, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2069, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2073, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2077, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2081, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2085, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2089, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2093, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2097, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2101, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2105, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2109, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2113, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2117, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2121, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2125, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2129, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2133, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2137, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2141, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2145, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2149, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2153, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2157, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2161, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2165, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2169, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2173, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2177, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2181, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2185, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2189, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2193, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2197, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2201, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2205, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2209, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2213, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2217, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2221, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2225, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2229, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2233, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2237, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2241, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2245, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2249, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2253, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2257, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2261, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2265, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2269, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2273, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2277, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_not_slash_2281, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1877: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1879, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1881: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1883, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1885: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1887, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1889: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1891, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1893: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1895, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1897: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1899, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1901: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1903, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1905: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1907, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1909: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1911, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1913: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1915, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1917: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1919, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1921: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1923, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1925: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1927, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1929: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1931, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1933: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1935, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1937: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1939, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1941: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1943, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1945: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1947, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1949: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1951, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1953: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1955, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1957: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1959, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1961: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1963, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1965: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1967, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1969: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1971, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1973: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1975, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1977: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1979, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1981: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1983, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1985: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1987, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1989: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1991, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1993: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1995, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_1997: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_1999, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2001: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2003, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2005: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2007, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2009: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2011, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2013: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2015, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2017: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2019, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2021: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2023, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2025: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2027, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2029: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2031, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2033: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2035, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2037: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2039, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2041: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2043, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2045: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2047, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2049: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2051, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2053: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2055, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2057: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2059, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2061: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2063, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2065: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2067, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2069: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2071, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2073: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2075, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2077: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2079, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2081: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2083, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2085: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2087, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2089: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2091, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2093: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2095, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2097: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2099, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2101: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2103, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2105: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2107, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2109: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2111, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2113: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2115, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2117: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2119, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2121: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2123, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2125: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2127, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2129: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2131, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2133: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2135, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2137: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2139, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2141: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2143, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2145: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2147, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2149: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2151, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2153: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2155, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2157: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2159, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2161: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2163, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2165: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2167, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2169: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2171, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2173: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2175, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2177: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2179, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2181: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2183, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2185: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2187, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2189: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2191, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2193: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2195, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2197: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2199, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2201: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2203, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2205: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2207, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2209: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2211, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2213: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2215, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2217: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2219, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2221: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2223, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2225: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2227, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2229: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2231, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2233: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2235, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2237: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2239, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2241: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2243, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2245: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2247, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2249: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2251, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2253: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2255, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2257: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2259, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2261: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2263, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2265: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2267, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2269: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2271, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2273: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2275, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2277: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2279, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal not_slash: match production*/
			case ART_L_JavaLexerImp_not_slash_2281: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_not_slash_2283, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_ID() {
		switch (currentRestartLabel) {
				/* Nonterminal ID production descriptor loads*/
			case ART_L_JavaLexerImp_ID: 
				if (ARTSet161[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_ID_2286, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal ID: match production*/
			case ART_L_JavaLexerImp_ID_2286: 
				/* Cat/unary template start */
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet128[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_ID_2290, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_ID_2294, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_ID_2290: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_ID_2292, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_letter_character; return; }
			case ART_L_JavaLexerImp_ID_2292: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_ID_2288; return; }
			case ART_L_JavaLexerImp_ID_2294: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_ID_2296, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_ID_2288; return; }
			case ART_A_JavaLexerImp_ID_2288: 
				if (testRepeat(ART_L_JavaLexerImp_ID_2288, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Kleene closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_ID_2303, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFNode = findSPPFEpsilon(currentInputIndex);
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
 }
				currentSPPFNode = dummySPPFNode;
				/*L*/
			case ART_C_JavaLexerImp_ID_2298: 
				if (!ARTSet133[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_ID_2302, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_identifier_part_character; return; }
			case ART_L_JavaLexerImp_ID_2302: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_ID_2298; return; }
			case ART_L_JavaLexerImp_ID_2303: 
				/* Kleene closure, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_unicode_character_escape_sequence() {
		switch (currentRestartLabel) {
				/* Nonterminal unicode_character_escape_sequence production descriptor loads*/
			case ART_L_JavaLexerImp_unicode_character_escape_sequence: 
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_unicode_character_escape_sequence_2306, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_unicode_character_escape_sequence_2320, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal unicode_character_escape_sequence: match production*/
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2306: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_unicode_character_escape_sequence_2308, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_unicode_character_escape_sequence_2310, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2312, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2312: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2314, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2314: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2316, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2316: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2318, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2318: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal unicode_character_escape_sequence: match production*/
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2320: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_unicode_character_escape_sequence_2322, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet65[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_unicode_character_escape_sequence_2324, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2326, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2326: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2328, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2328: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2330, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2330: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2332, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2332: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2334, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2334: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2336, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2336: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2338, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2338: 
				/* Nonterminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_unicode_character_escape_sequence_2340, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_unicode_character_escape_sequence_2340: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_letter_character() {
		switch (currentRestartLabel) {
				/* Nonterminal letter_character production descriptor loads*/
			case ART_L_JavaLexerImp_letter_character: 
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2343, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2347, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2351, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2355, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2359, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2363, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2367, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2371, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2375, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2379, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2383, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2387, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2391, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2395, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2399, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2403, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2407, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2411, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2415, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2419, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2423, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2427, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2431, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2435, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2439, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2443, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2447, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2451, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2455, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2459, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2463, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2467, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2471, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2475, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2479, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2483, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2487, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2491, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2495, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2499, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2503, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2507, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2511, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2515, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2519, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2523, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2527, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2531, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2535, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2539, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2543, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_letter_character_2547, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2343: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2345, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2347: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2349, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2351: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2353, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2355: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2357, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2359: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2361, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2363: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2365, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2367: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2369, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2371: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2373, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2375: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2377, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2379: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2381, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2383: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2385, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2387: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2389, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2391: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2393, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2395: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2397, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2399: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2401, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2403: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2405, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2407: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2409, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2411: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2413, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2415: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2417, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2419: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2421, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2423: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2425, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2427: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2429, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2431: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2433, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2435: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2437, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2439: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2441, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2443: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2445, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2447: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2449, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2451: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2453, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2455: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2457, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2459: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2461, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2463: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2465, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2467: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2469, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2471: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2473, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2475: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2477, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2479: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2481, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2483: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2485, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2487: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2489, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2491: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2493, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2495: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2497, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2499: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2501, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2503: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2505, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2507: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2509, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2511: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2513, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2515: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2517, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2519: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2521, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2523: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2525, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2527: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2529, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2531: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2533, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2535: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2537, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2539: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2541, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2543: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2545, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal letter_character: match production*/
			case ART_L_JavaLexerImp_letter_character_2547: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_letter_character_2549, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_identifier_part_character() {
		switch (currentRestartLabel) {
				/* Nonterminal identifier_part_character production descriptor loads*/
			case ART_L_JavaLexerImp_identifier_part_character: 
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2552, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2556, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2560, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2564, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2568, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2572, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2576, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2580, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2584, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2588, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2592, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2596, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2600, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2604, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2608, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2612, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2616, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2620, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2624, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2628, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2632, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2636, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2640, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2644, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2648, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2652, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2656, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2660, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2664, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2668, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2672, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2676, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2680, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2684, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2688, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2692, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2696, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2700, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2704, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2708, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2712, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2716, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2720, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2724, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2728, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2732, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2736, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2740, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2744, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2748, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2752, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2756, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2760, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2764, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2768, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2772, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2776, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2780, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2784, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2788, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2792, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2796, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2800, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_identifier_part_character_2804, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2552: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2554, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2556: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2558, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2560: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2562, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2564: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2566, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2568: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2570, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2572: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2574, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2576: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2578, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2580: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2582, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2584: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2586, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2588: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2590, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2592: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2594, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2596: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2598, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2600: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2602, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2604: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2606, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2608: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2610, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2612: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2614, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2616: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2618, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2620: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2622, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2624: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2626, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2628: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2630, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2632: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2634, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2636: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2638, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2640: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2642, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2644: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2646, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2648: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2650, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2652: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2654, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2656: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2658, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2660: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2662, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2664: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2666, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2668: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2670, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2672: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2674, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2676: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2678, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2680: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2682, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2684: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2686, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2688: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2690, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2692: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2694, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2696: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2698, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2700: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2702, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2704: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2706, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2708: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2710, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2712: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2714, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2716: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2718, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2720: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2722, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2724: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2726, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2728: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2730, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2732: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2734, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2736: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2738, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2740: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2742, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2744: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2746, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2748: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2750, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2752: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2754, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2756: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2758, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2760: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2762, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2764: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2766, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2768: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2770, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2772: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2774, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2776: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2778, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2780: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2782, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2784: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2786, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2788: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2790, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2792: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2794, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2796: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2798, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2800: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_identifier_part_character_2802, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal identifier_part_character: match production*/
			case ART_L_JavaLexerImp_identifier_part_character_2804: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_identifier_part_character_2806, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_unicode_character_escape_sequence; return; }
			case ART_L_JavaLexerImp_identifier_part_character_2806: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet134[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_INT() {
		switch (currentRestartLabel) {
				/* Nonterminal INT production descriptor loads*/
			case ART_L_JavaLexerImp_INT: 
				if (ARTSet160[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_INT_2809, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal INT: match production*/
			case ART_L_JavaLexerImp_INT_2809: 
				/* Cat/unary template start */
				/* Optional, non-nullable body template start */
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2820, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_INT_2820, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet22[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2813, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2817, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_INT_2813: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2815, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2811; return; }
			case ART_L_JavaLexerImp_INT_2817: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2819, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2811; return; }
			case ART_A_JavaLexerImp_INT_2811: 
				if (testRepeat(ART_L_JavaLexerImp_INT_2811, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
			case ART_L_JavaLexerImp_INT_2820: 
				/* Optional, non-nullable body template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2824, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2841, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet124[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2845, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet124[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2855, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2863, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2869, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2877, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_INT_2824: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2826, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet20[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2830, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2834, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_INT_2830: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2832, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2828; return; }
			case ART_L_JavaLexerImp_INT_2834: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2836, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2828; return; }
			case ART_A_JavaLexerImp_INT_2828: 
				if (testRepeat(ART_L_JavaLexerImp_INT_2828, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2839, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits; return; }
			case ART_L_JavaLexerImp_INT_2839: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2841: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2843, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2845: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2847, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_non_zero_digit; return; }
			case ART_L_JavaLexerImp_INT_2847: 
				/* Nonterminal template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2853, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_INT_2853, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2852, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_INT_2852: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_INT_2853: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2855: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2857, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_non_zero_digit; return; }
			case ART_L_JavaLexerImp_INT_2857: 
				/* Nonterminal template end */
				if (!ARTSet111[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2859, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_underscores; return; }
			case ART_L_JavaLexerImp_INT_2859: 
				/* Nonterminal template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2861, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_INT_2861: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2863: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2865, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet121[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2867, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digits; return; }
			case ART_L_JavaLexerImp_INT_2867: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2869: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2871, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet111[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2873, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_underscores; return; }
			case ART_L_JavaLexerImp_INT_2873: 
				/* Nonterminal template end */
				if (!ARTSet121[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2875, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digits; return; }
			case ART_L_JavaLexerImp_INT_2875: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_L_JavaLexerImp_INT_2877: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2879, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet7[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2883, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2887, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_INT_2883: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2885, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2881; return; }
			case ART_L_JavaLexerImp_INT_2887: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2889, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2881; return; }
			case ART_A_JavaLexerImp_INT_2881: 
				if (testRepeat(ART_L_JavaLexerImp_INT_2881, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet153[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_INT_2892, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digits; return; }
			case ART_L_JavaLexerImp_INT_2892: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2822; return; }
			case ART_A_JavaLexerImp_INT_2822: 
				if (testRepeat(ART_L_JavaLexerImp_INT_2822, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2904, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_INT_2904, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet8[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2897, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_INT_2901, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_INT_2897: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2899, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2895; return; }
			case ART_L_JavaLexerImp_INT_2901: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_INT_2903, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_INT_2895; return; }
			case ART_A_JavaLexerImp_INT_2895: 
				if (testRepeat(ART_L_JavaLexerImp_INT_2895, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
			case ART_L_JavaLexerImp_INT_2904: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_non_zero_digit() {
		switch (currentRestartLabel) {
				/* Nonterminal non_zero_digit production descriptor loads*/
			case ART_L_JavaLexerImp_non_zero_digit: 
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2907, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2911, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2915, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2919, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2923, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2927, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2931, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2935, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_non_zero_digit_2939, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2907: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2909, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2911: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2913, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2915: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2917, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2919: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2921, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2923: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2925, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2927: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2929, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2931: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2933, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2935: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2937, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal non_zero_digit: match production*/
			case ART_L_JavaLexerImp_non_zero_digit_2939: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_non_zero_digit_2941, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_digits() {
		switch (currentRestartLabel) {
				/* Nonterminal digits production descriptor loads*/
			case ART_L_JavaLexerImp_digits: 
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digits_2944, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digits_2948, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal digits: match production*/
			case ART_L_JavaLexerImp_digits_2944: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digits_2946, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit; return; }
			case ART_L_JavaLexerImp_digits_2946: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal digits: match production*/
			case ART_L_JavaLexerImp_digits_2948: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digits_2950, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit; return; }
			case ART_L_JavaLexerImp_digits_2950: 
				/* Nonterminal template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_digits_2956, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_digits_2956, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digits_2955, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit_and_underscores; return; }
			case ART_L_JavaLexerImp_digits_2955: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_digits_2956: 
				/* Optional, non-nullable body template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digits_2958, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit; return; }
			case ART_L_JavaLexerImp_digits_2958: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_digit() {
		switch (currentRestartLabel) {
				/* Nonterminal digit production descriptor loads*/
			case ART_L_JavaLexerImp_digit: 
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_2961, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet124[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_2965, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal digit: match production*/
			case ART_L_JavaLexerImp_digit_2961: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_digit_2963, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal digit: match production*/
			case ART_L_JavaLexerImp_digit_2965: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digit_2967, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_non_zero_digit; return; }
			case ART_L_JavaLexerImp_digit_2967: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_digit_and_underscores() {
		switch (currentRestartLabel) {
				/* Nonterminal digit_and_underscores production descriptor loads*/
			case ART_L_JavaLexerImp_digit_and_underscores: 
				if (ARTSet145[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_and_underscores_2970, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet145[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_and_underscores_2974, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal digit_and_underscores: match production*/
			case ART_L_JavaLexerImp_digit_and_underscores_2970: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digit_and_underscores_2972, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_digit_and_underscores_2972: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal digit_and_underscores: match production*/
			case ART_L_JavaLexerImp_digit_and_underscores_2974: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digit_and_underscores_2976, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit_and_underscores; return; }
			case ART_L_JavaLexerImp_digit_and_underscores_2976: 
				/* Nonterminal template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digit_and_underscores_2978, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_digit_and_underscores_2978: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_digit_or_underscore() {
		switch (currentRestartLabel) {
				/* Nonterminal digit_or_underscore production descriptor loads*/
			case ART_L_JavaLexerImp_digit_or_underscore: 
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_or_underscore_2981, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_digit_or_underscore_2985, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_digit_or_underscore_2981: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_digit_or_underscore_2983, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digit; return; }
			case ART_L_JavaLexerImp_digit_or_underscore_2983: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_digit_or_underscore_2985: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_digit_or_underscore_2987, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_underscores() {
		switch (currentRestartLabel) {
				/* Nonterminal underscores production descriptor loads*/
			case ART_L_JavaLexerImp_underscores: 
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_underscores_2990, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_underscores_2994, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal underscores: match production*/
			case ART_L_JavaLexerImp_underscores_2990: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_underscores_2992, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal underscores: match production*/
			case ART_L_JavaLexerImp_underscores_2994: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_underscores_2996, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_underscores; return; }
			case ART_L_JavaLexerImp_underscores_2996: 
				/* Nonterminal template end */
				if (!ARTSet111[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_underscores_2998, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet145[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hex_digits() {
		switch (currentRestartLabel) {
				/* Nonterminal hex_digits production descriptor loads*/
			case ART_L_JavaLexerImp_hex_digits: 
				if (ARTSet138[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_3001, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet138[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_3005, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hex_digits: match production*/
			case ART_L_JavaLexerImp_hex_digits_3001: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_3003, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hex_digits_3003: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digits: match production*/
			case ART_L_JavaLexerImp_hex_digits_3005: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_3007, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hex_digits_3007: 
				/* Nonterminal template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet138[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digits_3013, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_hex_digits_3013, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_3012, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits_and_underscores; return; }
			case ART_L_JavaLexerImp_hex_digits_3012: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_hex_digits_3013: 
				/* Optional, non-nullable body template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_3015, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hex_digits_3015: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hex_digit() {
		switch (currentRestartLabel) {
				/* Nonterminal hex_digit production descriptor loads*/
			case ART_L_JavaLexerImp_hex_digit: 
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3018, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3022, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3026, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3030, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3034, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3038, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3042, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3046, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3050, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3054, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3058, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3062, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3066, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3070, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3074, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digit_3078, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3018: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3020, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3022: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3024, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3026: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3028, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3030: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3032, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3034: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3036, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3038: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3040, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3042: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3044, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3046: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3048, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3050: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3052, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3054: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3056, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3058: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3060, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3062: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3064, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3066: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3068, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3070: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3072, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3074: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3076, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digit: match production*/
			case ART_L_JavaLexerImp_hex_digit_3078: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digit_3080, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hex_digits_and_underscores() {
		switch (currentRestartLabel) {
				/* Nonterminal hex_digits_and_underscores production descriptor loads*/
			case ART_L_JavaLexerImp_hex_digits_and_underscores: 
				if (ARTSet137[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_and_underscores_3083, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet137[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_and_underscores_3087, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hex_digits_and_underscores: match production*/
			case ART_L_JavaLexerImp_hex_digits_and_underscores_3083: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_and_underscores_3085, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits_or_underscore; return; }
			case ART_L_JavaLexerImp_hex_digits_and_underscores_3085: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digits_and_underscores: match production*/
			case ART_L_JavaLexerImp_hex_digits_and_underscores_3087: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_and_underscores_3089, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits_and_underscores; return; }
			case ART_L_JavaLexerImp_hex_digits_and_underscores_3089: 
				/* Nonterminal template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_and_underscores_3091, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits_or_underscore; return; }
			case ART_L_JavaLexerImp_hex_digits_and_underscores_3091: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hex_digits_or_underscore() {
		switch (currentRestartLabel) {
				/* Nonterminal hex_digits_or_underscore production descriptor loads*/
			case ART_L_JavaLexerImp_hex_digits_or_underscore: 
				if (ARTSet138[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_or_underscore_3094, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_digits_or_underscore_3098, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hex_digits_or_underscore: match production*/
			case ART_L_JavaLexerImp_hex_digits_or_underscore_3094: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_digits_or_underscore_3096, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hex_digits_or_underscore_3096: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_digits_or_underscore: match production*/
			case ART_L_JavaLexerImp_hex_digits_or_underscore_3098: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_digits_or_underscore_3100, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet137[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_octal_digits() {
		switch (currentRestartLabel) {
				/* Nonterminal octal_digits production descriptor loads*/
			case ART_L_JavaLexerImp_octal_digits: 
				if (ARTSet121[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digits_3103, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet121[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digits_3107, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal octal_digits: match production*/
			case ART_L_JavaLexerImp_octal_digits_3103: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_3105, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit; return; }
			case ART_L_JavaLexerImp_octal_digits_3105: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digits: match production*/
			case ART_L_JavaLexerImp_octal_digits_3107: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_3109, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit; return; }
			case ART_L_JavaLexerImp_octal_digits_3109: 
				/* Nonterminal template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet121[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digits_3115, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_octal_digits_3115, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_3114, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digits_and_underscores; return; }
			case ART_L_JavaLexerImp_octal_digits_3114: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_octal_digits_3115: 
				/* Optional, non-nullable body template end */
				if (!ARTSet121[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_3117, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit; return; }
			case ART_L_JavaLexerImp_octal_digits_3117: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_octal_digit() {
		switch (currentRestartLabel) {
				/* Nonterminal octal_digit production descriptor loads*/
			case ART_L_JavaLexerImp_octal_digit: 
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3120, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3124, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3128, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3132, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3136, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3140, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3144, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_3148, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3120: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3122, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3124: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3126, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3128: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3130, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3132: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3134, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3136: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3138, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3140: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3142, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3144: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3146, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit: match production*/
			case ART_L_JavaLexerImp_octal_digit_3148: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_3150, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_octal_digits_and_underscores() {
		switch (currentRestartLabel) {
				/* Nonterminal octal_digits_and_underscores production descriptor loads*/
			case ART_L_JavaLexerImp_octal_digits_and_underscores: 
				if (ARTSet120[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digits_and_underscores_3153, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet120[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digits_and_underscores_3157, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal octal_digits_and_underscores: match production*/
			case ART_L_JavaLexerImp_octal_digits_and_underscores_3153: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_and_underscores_3155, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_octal_digits_and_underscores_3155: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digits_and_underscores: match production*/
			case ART_L_JavaLexerImp_octal_digits_and_underscores_3157: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_and_underscores_3159, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digits_and_underscores; return; }
			case ART_L_JavaLexerImp_octal_digits_and_underscores_3159: 
				/* Nonterminal template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digits_and_underscores_3161, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_octal_digits_and_underscores_3161: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_octal_digit_or_underscore() {
		switch (currentRestartLabel) {
				/* Nonterminal octal_digit_or_underscore production descriptor loads*/
			case ART_L_JavaLexerImp_octal_digit_or_underscore: 
				if (ARTSet121[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_or_underscore_3164, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_octal_digit_or_underscore_3168, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal octal_digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_octal_digit_or_underscore_3164: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_octal_digit_or_underscore_3166, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_octal_digit; return; }
			case ART_L_JavaLexerImp_octal_digit_or_underscore_3166: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal octal_digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_octal_digit_or_underscore_3168: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_octal_digit_or_underscore_3170, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet120[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_binary_digits() {
		switch (currentRestartLabel) {
				/* Nonterminal binary_digits production descriptor loads*/
			case ART_L_JavaLexerImp_binary_digits: 
				if (ARTSet153[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digits_3173, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet153[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digits_3177, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal binary_digits: match production*/
			case ART_L_JavaLexerImp_binary_digits_3173: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digits_3175, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit; return; }
			case ART_L_JavaLexerImp_binary_digits_3175: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal binary_digits: match production*/
			case ART_L_JavaLexerImp_binary_digits_3177: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digits_3179, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit; return; }
			case ART_L_JavaLexerImp_binary_digits_3179: 
				/* Nonterminal template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet153[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_binary_digits_3185, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_binary_digits_3185, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digits_3184, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit_and_underscores; return; }
			case ART_L_JavaLexerImp_binary_digits_3184: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_binary_digits_3185: 
				/* Optional, non-nullable body template end */
				if (!ARTSet153[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digits_3187, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit; return; }
			case ART_L_JavaLexerImp_binary_digits_3187: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_binary_digit() {
		switch (currentRestartLabel) {
				/* Nonterminal binary_digit production descriptor loads*/
			case ART_L_JavaLexerImp_binary_digit: 
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_3190, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_3194, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal binary_digit: match production*/
			case ART_L_JavaLexerImp_binary_digit_3190: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_digit_3192, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal binary_digit: match production*/
			case ART_L_JavaLexerImp_binary_digit_3194: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_digit_3196, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_binary_digit_and_underscores() {
		switch (currentRestartLabel) {
				/* Nonterminal binary_digit_and_underscores production descriptor loads*/
			case ART_L_JavaLexerImp_binary_digit_and_underscores: 
				if (ARTSet152[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_and_underscores_3199, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet152[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_and_underscores_3203, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal binary_digit_and_underscores: match production*/
			case ART_L_JavaLexerImp_binary_digit_and_underscores_3199: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digit_and_underscores_3201, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_binary_digit_and_underscores_3201: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal binary_digit_and_underscores: match production*/
			case ART_L_JavaLexerImp_binary_digit_and_underscores_3203: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digit_and_underscores_3205, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit_and_underscores; return; }
			case ART_L_JavaLexerImp_binary_digit_and_underscores_3205: 
				/* Nonterminal template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digit_and_underscores_3207, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit_or_underscore; return; }
			case ART_L_JavaLexerImp_binary_digit_and_underscores_3207: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_binary_digit_or_underscore() {
		switch (currentRestartLabel) {
				/* Nonterminal binary_digit_or_underscore production descriptor loads*/
			case ART_L_JavaLexerImp_binary_digit_or_underscore: 
				if (ARTSet153[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_or_underscore_3210, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_digit_or_underscore_3214, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal binary_digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_binary_digit_or_underscore_3210: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_digit_or_underscore_3212, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_digit; return; }
			case ART_L_JavaLexerImp_binary_digit_or_underscore_3212: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal binary_digit_or_underscore: match production*/
			case ART_L_JavaLexerImp_binary_digit_or_underscore_3214: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_digit_or_underscore_3216, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet152[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_FLOAT() {
		switch (currentRestartLabel) {
				/* Nonterminal FLOAT production descriptor loads*/
			case ART_L_JavaLexerImp_FLOAT: 
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_FLOAT_3219, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_FLOAT_3243, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_FLOAT_3261, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_FLOAT_3273, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_FLOAT_3285, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal FLOAT: match production*/
			case ART_L_JavaLexerImp_FLOAT_3219: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3221, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_FLOAT_3221: 
				/* Nonterminal template end */
				if (!ARTSet92[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3223, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3229, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3229, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3228, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_FLOAT_3228: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3229: 
				/* Optional, non-nullable body template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3235, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3235, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet143[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3234, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_exponent_part; return; }
			case ART_L_JavaLexerImp_FLOAT_3234: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3235: 
				/* Optional, non-nullable body template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3241, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3241, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet141[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3240, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float_type_suffix; return; }
			case ART_L_JavaLexerImp_FLOAT_3240: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3241: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal FLOAT: match production*/
			case ART_L_JavaLexerImp_FLOAT_3243: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3245, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3247, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_FLOAT_3247: 
				/* Nonterminal template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3253, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3253, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet143[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3252, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_exponent_part; return; }
			case ART_L_JavaLexerImp_FLOAT_3252: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3253: 
				/* Optional, non-nullable body template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3259, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3259, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet141[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3258, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float_type_suffix; return; }
			case ART_L_JavaLexerImp_FLOAT_3258: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3259: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal FLOAT: match production*/
			case ART_L_JavaLexerImp_FLOAT_3261: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3263, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_FLOAT_3263: 
				/* Nonterminal template end */
				if (!ARTSet143[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3265, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_exponent_part; return; }
			case ART_L_JavaLexerImp_FLOAT_3265: 
				/* Nonterminal template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3271, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3271, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet141[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3270, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float_type_suffix; return; }
			case ART_L_JavaLexerImp_FLOAT_3270: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3271: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal FLOAT: match production*/
			case ART_L_JavaLexerImp_FLOAT_3273: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3275, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_FLOAT_3275: 
				/* Nonterminal template end */
				if (!ARTSet17[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet141[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3281, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3281, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet143[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3280, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_exponent_part; return; }
			case ART_L_JavaLexerImp_FLOAT_3280: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3281: 
				/* Optional, non-nullable body template end */
				if (!ARTSet141[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3283, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float_type_suffix; return; }
			case ART_L_JavaLexerImp_FLOAT_3283: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal FLOAT: match production*/
			case ART_L_JavaLexerImp_FLOAT_3285: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3287, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_significand; return; }
			case ART_L_JavaLexerImp_FLOAT_3287: 
				/* Nonterminal template end */
				if (!ARTSet151[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3289, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_binary_exponent; return; }
			case ART_L_JavaLexerImp_FLOAT_3289: 
				/* Nonterminal template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet166[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_FLOAT_3295, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_FLOAT_3295, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet141[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_FLOAT_3294, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_float_type_suffix; return; }
			case ART_L_JavaLexerImp_FLOAT_3294: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_FLOAT_3295: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_exponent_part() {
		switch (currentRestartLabel) {
				/* Nonterminal exponent_part production descriptor loads*/
			case ART_L_JavaLexerImp_exponent_part: 
				if (ARTSet143[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_exponent_part_3298, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal exponent_part: match production*/
			case ART_L_JavaLexerImp_exponent_part_3298: 
				/* Cat/unary template start */
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_exponent_part_3302, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_exponent_part_3306, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_exponent_part_3302: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_exponent_part_3304, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_exponent_part_3300; return; }
			case ART_L_JavaLexerImp_exponent_part_3306: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_exponent_part_3308, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_exponent_part_3300; return; }
			case ART_A_JavaLexerImp_exponent_part_3300: 
				if (testRepeat(ART_L_JavaLexerImp_exponent_part_3300, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet160[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_exponent_part_3320, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_exponent_part_3320, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet22[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_exponent_part_3313, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_exponent_part_3317, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_exponent_part_3313: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_exponent_part_3315, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_exponent_part_3311; return; }
			case ART_L_JavaLexerImp_exponent_part_3317: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_exponent_part_3319, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_exponent_part_3311; return; }
			case ART_A_JavaLexerImp_exponent_part_3311: 
				if (testRepeat(ART_L_JavaLexerImp_exponent_part_3311, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
			case ART_L_JavaLexerImp_exponent_part_3320: 
				/* Optional, non-nullable body template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_exponent_part_3322, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_exponent_part_3322: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_float_type_suffix() {
		switch (currentRestartLabel) {
				/* Nonterminal float_type_suffix production descriptor loads*/
			case ART_L_JavaLexerImp_float_type_suffix: 
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_float_type_suffix_3325, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_float_type_suffix_3329, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_float_type_suffix_3333, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_float_type_suffix_3337, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal float_type_suffix: match production*/
			case ART_L_JavaLexerImp_float_type_suffix_3325: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_type_suffix_3327, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal float_type_suffix: match production*/
			case ART_L_JavaLexerImp_float_type_suffix_3329: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_type_suffix_3331, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal float_type_suffix: match production*/
			case ART_L_JavaLexerImp_float_type_suffix_3333: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_type_suffix_3335, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal float_type_suffix: match production*/
			case ART_L_JavaLexerImp_float_type_suffix_3337: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_float_type_suffix_3339, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hex_significand() {
		switch (currentRestartLabel) {
				/* Nonterminal hex_significand production descriptor loads*/
			case ART_L_JavaLexerImp_hex_significand: 
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_significand_3342, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_significand_3359, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hex_significand_3378, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hex_significand: match production*/
			case ART_L_JavaLexerImp_hex_significand_3342: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3344, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet20[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3348, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3352, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_hex_significand_3348: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3350, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3346; return; }
			case ART_L_JavaLexerImp_hex_significand_3352: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3354, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3346; return; }
			case ART_A_JavaLexerImp_hex_significand_3346: 
				if (testRepeat(ART_L_JavaLexerImp_hex_significand_3346, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_significand_3357, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits; return; }
			case ART_L_JavaLexerImp_hex_significand_3357: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet151[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_significand: match production*/
			case ART_L_JavaLexerImp_hex_significand_3359: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3361, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet20[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3365, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3369, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_hex_significand_3365: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3367, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3363; return; }
			case ART_L_JavaLexerImp_hex_significand_3369: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3371, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3363; return; }
			case ART_A_JavaLexerImp_hex_significand_3363: 
				if (testRepeat(ART_L_JavaLexerImp_hex_significand_3363, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_significand_3374, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits; return; }
			case ART_L_JavaLexerImp_hex_significand_3374: 
				/* Nonterminal template end */
				if (!ARTSet92[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3376, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet151[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal hex_significand: match production*/
			case ART_L_JavaLexerImp_hex_significand_3378: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3380, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet20[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3384, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_hex_significand_3388, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_hex_significand_3384: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3386, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3382; return; }
			case ART_L_JavaLexerImp_hex_significand_3388: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3390, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_hex_significand_3382; return; }
			case ART_A_JavaLexerImp_hex_significand_3382: 
				if (testRepeat(ART_L_JavaLexerImp_hex_significand_3382, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet21[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3397, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_hex_significand_3397, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_significand_3396, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits; return; }
			case ART_L_JavaLexerImp_hex_significand_3396: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_hex_significand_3397: 
				/* Optional, non-nullable body template end */
				if (!ARTSet92[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hex_significand_3399, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hex_significand_3401, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digits; return; }
			case ART_L_JavaLexerImp_hex_significand_3401: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet151[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_binary_exponent() {
		switch (currentRestartLabel) {
				/* Nonterminal binary_exponent production descriptor loads*/
			case ART_L_JavaLexerImp_binary_exponent: 
				if (ARTSet151[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_binary_exponent_3404, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal binary_exponent: match production*/
			case ART_L_JavaLexerImp_binary_exponent_3404: 
				/* Cat/unary template start */
				/* Do-first template start */
				/* Alternate template start */
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_binary_exponent_3408, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_binary_exponent_3412, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_binary_exponent_3408: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_exponent_3410, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_binary_exponent_3406; return; }
			case ART_L_JavaLexerImp_binary_exponent_3412: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_exponent_3414, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_binary_exponent_3406; return; }
			case ART_A_JavaLexerImp_binary_exponent_3406: 
				if (testRepeat(ART_L_JavaLexerImp_binary_exponent_3406, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
				/* Do-first template end */
				if (!ARTSet160[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet146[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_binary_exponent_3426, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_binary_exponent_3426, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet22[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template start */
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_binary_exponent_3419, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 				findDescriptor(ART_L_JavaLexerImp_binary_exponent_3423, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
			case ART_L_JavaLexerImp_binary_exponent_3419: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_exponent_3421, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_binary_exponent_3417; return; }
			case ART_L_JavaLexerImp_binary_exponent_3423: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_binary_exponent_3425, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				{ currentRestartLabel = ART_A_JavaLexerImp_binary_exponent_3417; return; }
			case ART_A_JavaLexerImp_binary_exponent_3417: 
				if (testRepeat(ART_L_JavaLexerImp_binary_exponent_3417, currentGSSNode, currentInputIndex, currentSPPFNode)) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Alternate template end */
			case ART_L_JavaLexerImp_binary_exponent_3426: 
				/* Optional, non-nullable body template end */
				if (!ARTSet146[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_binary_exponent_3428, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_digits; return; }
			case ART_L_JavaLexerImp_binary_exponent_3428: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_BOOL() {
		switch (currentRestartLabel) {
				/* Nonterminal BOOL production descriptor loads*/
			case ART_L_JavaLexerImp_BOOL: 
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_BOOL_3431, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_BOOL_3441, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal BOOL: match production*/
			case ART_L_JavaLexerImp_BOOL_3431: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3433, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3435, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3437, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3439, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal BOOL: match production*/
			case ART_L_JavaLexerImp_BOOL_3441: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3443, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3445, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3447, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet116[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3449, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet144[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_BOOL_3451, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_CHAR() {
		switch (currentRestartLabel) {
				/* Nonterminal CHAR production descriptor loads*/
			case ART_L_JavaLexerImp_CHAR: 
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_CHAR_3454, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal CHAR: match production*/
			case ART_L_JavaLexerImp_CHAR_3454: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_CHAR_3456, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet148[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_CHAR_3458, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_character; return; }
			case ART_L_JavaLexerImp_CHAR_3458: 
				/* Nonterminal template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_CHAR_3460, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_character() {
		switch (currentRestartLabel) {
				/* Nonterminal character production descriptor loads*/
			case ART_L_JavaLexerImp_character: 
				if (ARTSet115[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_character_3463, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_character_3467, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_character_3471, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_character_3475, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal character: match production*/
			case ART_L_JavaLexerImp_character_3463: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_character_3465, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_single_character; return; }
			case ART_L_JavaLexerImp_character_3465: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal character: match production*/
			case ART_L_JavaLexerImp_character_3467: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_character_3469, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_simple_escape_sequence; return; }
			case ART_L_JavaLexerImp_character_3469: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal character: match production*/
			case ART_L_JavaLexerImp_character_3471: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_character_3473, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hexadecimal_escape_sequence; return; }
			case ART_L_JavaLexerImp_character_3473: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal character: match production*/
			case ART_L_JavaLexerImp_character_3475: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_character_3477, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_unicode_character_escape_sequence; return; }
			case ART_L_JavaLexerImp_character_3477: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_single_character() {
		switch (currentRestartLabel) {
				/* Nonterminal single_character production descriptor loads*/
			case ART_L_JavaLexerImp_single_character: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3480, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3484, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3488, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3492, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3496, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3500, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3504, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3508, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3512, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3516, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3520, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3524, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3528, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3532, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3536, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3540, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3544, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3548, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3552, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3556, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3560, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3564, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3568, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3572, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3576, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3580, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3584, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3588, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3592, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3596, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3600, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3604, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3608, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3612, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3616, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3620, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3624, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3628, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3632, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3636, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3640, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3644, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3648, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3652, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3656, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3660, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3664, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3668, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3672, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3676, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3680, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3684, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3688, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3692, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3696, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3700, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3704, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3708, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3712, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3716, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3720, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3724, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3728, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3732, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3736, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3740, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3744, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3748, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3752, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3756, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3760, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3764, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3768, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3772, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3776, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3780, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3784, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3788, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3792, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3796, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3800, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3804, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3808, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3812, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3816, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3820, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3824, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3828, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3832, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3836, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3840, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3844, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3848, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3852, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3856, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3860, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3864, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3868, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_character_3872, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3480: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3482, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3484: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3486, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3488: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3490, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3492: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3494, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3496: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3498, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3500: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3502, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3504: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3506, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3508: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3510, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3512: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3514, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3516: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3518, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3520: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3522, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3524: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3526, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3528: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3530, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3532: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3534, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3536: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3538, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3540: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3542, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3544: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3546, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3548: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3550, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3552: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3554, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3556: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3558, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3560: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3562, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3564: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3566, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3568: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3570, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3572: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3574, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3576: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3578, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3580: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3582, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3584: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3586, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3588: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3590, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3592: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3594, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3596: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3598, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3600: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3602, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3604: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3606, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3608: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3610, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3612: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3614, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3616: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3618, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3620: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3622, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3624: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3626, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3628: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3630, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3632: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3634, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3636: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3638, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3640: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3642, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3644: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3646, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3648: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3650, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3652: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3654, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3656: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3658, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3660: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3662, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3664: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3666, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3668: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3670, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3672: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3674, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3676: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3678, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3680: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3682, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3684: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3686, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3688: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3690, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3692: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3694, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3696: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3698, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3700: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3702, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3704: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3706, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3708: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3710, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3712: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3714, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3716: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3718, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3720: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3722, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3724: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3726, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3728: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3730, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3732: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3734, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3736: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3738, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3740: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3742, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3744: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3746, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3748: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3750, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3752: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3754, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3756: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3758, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3760: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3762, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3764: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3766, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3768: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3770, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3772: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3774, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3776: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3778, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3780: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3782, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3784: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3786, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3788: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3790, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3792: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3794, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3796: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3798, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3800: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3802, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3804: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3806, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3808: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3810, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3812: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3814, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3816: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3818, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3820: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3822, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3824: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3826, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3828: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3830, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3832: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3834, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3836: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3838, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3840: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3842, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3844: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3846, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3848: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3850, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3852: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3854, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3856: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3858, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3860: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3862, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3864: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3866, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3868: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3870, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_character: match production*/
			case ART_L_JavaLexerImp_single_character_3872: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_character_3874, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_simple_escape_sequence() {
		switch (currentRestartLabel) {
				/* Nonterminal simple_escape_sequence production descriptor loads*/
			case ART_L_JavaLexerImp_simple_escape_sequence: 
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3877, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3883, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3889, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3895, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3901, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3907, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3913, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3919, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3925, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3931, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_simple_escape_sequence_3937, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3877: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3879, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet164[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3881, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3883: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3885, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet156[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3887, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3889: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3891, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet135[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3893, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3895: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3897, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet136[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3899, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3901: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3903, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet154[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3905, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3907: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3909, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet150[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3911, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3913: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3915, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet142[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3917, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3919: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3921, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet159[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3923, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3925: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3927, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet117[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3929, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3931: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3933, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet112[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3935, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal simple_escape_sequence: match production*/
			case ART_L_JavaLexerImp_simple_escape_sequence_3937: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3939, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet110[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_simple_escape_sequence_3941, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_hexadecimal_escape_sequence() {
		switch (currentRestartLabel) {
				/* Nonterminal hexadecimal_escape_sequence production descriptor loads*/
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence: 
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal hexadecimal_escape_sequence: match production*/
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet78[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950: 
				/* Nonterminal template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet139[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956: 
				/* Optional, non-nullable body template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet139[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962: 
				/* Optional, non-nullable body template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Optional, non-nullable body template start */
				if (ARTSet139[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFRightChildNode = findSPPFEpsilon(currentInputIndex);
				temporarySPPFNode = findSPPF(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968, currentSPPFNode, currentSPPFRightChildNode);
				findDescriptor(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968, currentGSSNode, currentInputIndex, temporarySPPFNode);
 }
				if (!ARTSet138[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hex_digit; return; }
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967: 
				/* Nonterminal template end */
				/* Cat/unary template end */
			case ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968: 
				/* Optional, non-nullable body template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_STRING() {
		switch (currentRestartLabel) {
				/* Nonterminal STRING production descriptor loads*/
			case ART_L_JavaLexerImp_STRING: 
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_STRING_3971, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal STRING: match production*/
			case ART_L_JavaLexerImp_STRING_3971: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_STRING_3973, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet129[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Kleene closure, non-nullable body template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_STRING_3979, currentGSSNode, currentInputIndex, currentSPPFNode);
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) { 				currentSPPFNode = findSPPFEpsilon(currentInputIndex);
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
 }
				currentSPPFNode = dummySPPFNode;
				/*L*/
			case ART_C_JavaLexerImp_STRING_3974: 
				if (!ARTSet118[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_STRING_3978, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_regular_string_literal_character; return; }
			case ART_L_JavaLexerImp_STRING_3978: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (ARTSet156[inputPairBuffer[currentInputPairReference]]) 				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_C_JavaLexerImp_STRING_3974; return; }
			case ART_L_JavaLexerImp_STRING_3979: 
				/* Kleene closure, non-nullable body template end */
				if (!ARTSet156[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DBLQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_STRING_3981, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_regular_string_literal_character() {
		switch (currentRestartLabel) {
				/* Nonterminal regular_string_literal_character production descriptor loads*/
			case ART_L_JavaLexerImp_regular_string_literal_character: 
				if (ARTSet114[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_regular_string_literal_character_3984, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_regular_string_literal_character_3988, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_regular_string_literal_character_3992, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_regular_string_literal_character_3996, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_regular_string_literal_character_3984: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_regular_string_literal_character_3986, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_single_regular_string_literal_character; return; }
			case ART_L_JavaLexerImp_regular_string_literal_character_3986: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_regular_string_literal_character_3988: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_regular_string_literal_character_3990, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_simple_escape_sequence; return; }
			case ART_L_JavaLexerImp_regular_string_literal_character_3990: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_regular_string_literal_character_3992: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_regular_string_literal_character_3994, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_hexadecimal_escape_sequence; return; }
			case ART_L_JavaLexerImp_regular_string_literal_character_3994: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_regular_string_literal_character_3996: 
				/* Cat/unary template start */
				/* Nonterminal template start */
				currentGSSNode = findGSS(ART_L_JavaLexerImp_regular_string_literal_character_3998, currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_L_JavaLexerImp_unicode_character_escape_sequence; return; }
			case ART_L_JavaLexerImp_regular_string_literal_character_3998: 
				/* Nonterminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_single_regular_string_literal_character() {
		switch (currentRestartLabel) {
				/* Nonterminal single_regular_string_literal_character production descriptor loads*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4001, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4005, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4009, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4013, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4017, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4021, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4025, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4029, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4033, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4037, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4041, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4045, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4049, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4053, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4057, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4061, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4065, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4069, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4073, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4077, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4081, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4085, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4089, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4093, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4097, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4101, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4105, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4109, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4113, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4117, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4121, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4125, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4129, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4133, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4137, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4141, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4145, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4149, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4153, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4157, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4161, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4165, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4169, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4173, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4177, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4181, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4185, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4189, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4193, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4197, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4201, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4205, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4209, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4213, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4217, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4221, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4225, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4229, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4233, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4237, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4241, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4245, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4249, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4253, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4257, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4261, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4265, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4269, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4273, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4277, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4281, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4285, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4289, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4293, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4297, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4301, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4305, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4309, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4313, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4317, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4321, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4325, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4329, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4333, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4337, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4341, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4345, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4349, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4353, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4357, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4361, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4365, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4369, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4373, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4377, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4381, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4385, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4389, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_regular_string_literal_character_4393, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4001: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4003, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4005: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4007, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4009: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4011, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4013: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4015, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4017: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4019, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4021: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4023, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4025: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4027, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4029: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4031, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4033: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4035, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4037: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4039, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4041: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4043, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4045: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4047, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4049: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4051, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4053: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4055, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4057: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4059, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4061: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4063, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4065: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4067, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4069: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4071, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4073: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4075, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4077: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4079, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4081: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4083, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4085: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4087, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4089: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4091, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4093: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4095, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4097: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4099, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4101: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4103, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4105: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4107, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4109: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4111, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4113: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4115, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4117: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4119, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4121: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4123, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4125: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4127, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4129: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4131, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4133: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4135, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4137: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4139, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4141: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4143, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4145: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4147, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4149: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4151, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4153: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4155, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4157: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4159, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4161: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4163, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4165: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4167, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4169: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4171, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4173: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4175, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4177: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4179, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4181: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4183, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4185: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4187, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4189: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4191, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4193: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4195, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4197: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4199, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4201: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4203, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4205: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4207, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4209: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4211, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4213: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4215, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4217: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4219, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4221: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4223, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4225: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4227, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4229: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4231, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4233: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4235, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4237: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4239, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4241: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4243, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4245: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4247, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4249: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4251, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4253: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4255, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4257: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4259, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4261: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4263, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4265: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4267, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4269: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4271, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4273: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4275, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4277: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4279, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4281: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4283, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4285: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4287, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4289: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4291, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4293: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4295, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4297: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4299, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4301: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4303, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4305: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4307, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4309: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4311, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4313: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4315, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4317: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4319, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4321: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4323, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4325: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4327, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4329: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4331, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4333: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4335, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4337: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4339, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4341: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4343, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4345: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4347, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4349: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4351, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4353: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4355, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4357: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4359, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4361: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4363, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4365: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4367, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4369: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4371, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4373: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4375, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4377: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4379, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4381: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4383, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4385: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4387, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4389: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4391, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_regular_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_regular_string_literal_character_4393: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_regular_string_literal_character_4395, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet139[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_single_verbatim_string_literal_character() {
		switch (currentRestartLabel) {
				/* Nonterminal single_verbatim_string_literal_character production descriptor loads*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character: 
				if (ARTSet27[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet28[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet29[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet30[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet31[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet32[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet144[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet97[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet33[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet34[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet164[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet136[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet35[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet36[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet37[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet38[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet39[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet40[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet41[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet42[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet43[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet44[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet45[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet46[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet47[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet48[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet49[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet50[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet51[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet52[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet53[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet54[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet55[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet56[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet57[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet58[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet59[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet60[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet61[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet62[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet63[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet64[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet65[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet66[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet67[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet68[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet69[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet70[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet135[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet111[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet71[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet154[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet150[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet149[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet147[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet142[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet140[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet72[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet132[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet73[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet74[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet127[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet75[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet76[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet119[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet77[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet117[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet116[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet112[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet83[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet110[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet109[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet78[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet79[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet80[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet81[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet82[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BEL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__VT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__FF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_e, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__HASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__DOLLAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_0, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_1, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_2, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_3, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_4, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_5, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_6, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_7, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_8, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_9, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_A, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_B, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_C, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_D, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_E, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_F, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_G, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_H, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_I, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_J, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_K, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_L, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_M, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_N, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_O, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_P, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_R, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_S, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_T, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_U, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_V, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_W, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_X, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_Z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKSLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BACKQUOTE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_a, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_b, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_c, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_d, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_f, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_g, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_h, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_i, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_j, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_k, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_m, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_o, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_p, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_q, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_r, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_s, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_t, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_v, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_w, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_x, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_y, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_z, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LF, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal single_verbatim_string_literal_character: match production*/
			case ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__CR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet126[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_NULL() {
		switch (currentRestartLabel) {
				/* Nonterminal NULL production descriptor loads*/
			case ART_L_JavaLexerImp_NULL: 
				if (ARTSet159[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_NULL_4807, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal NULL: match production*/
			case ART_L_JavaLexerImp_NULL_4807: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_n, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_NULL_4809, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet83[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_u, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_NULL_4811, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_NULL_4813, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet127[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC_l, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_NULL_4815, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_SEPARATORS() {
		switch (currentRestartLabel) {
				/* Nonterminal SEPARATORS production descriptor loads*/
			case ART_L_JavaLexerImp_SEPARATORS: 
				if (ARTSet84[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4818, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet85[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4822, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet86[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4826, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet87[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4830, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet88[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4834, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet89[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4838, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet90[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4842, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet91[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4846, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet92[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_SEPARATORS_4850, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4818: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4820, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4822: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RPAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4824, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4826: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4828, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4830: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4832, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4834: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4836, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4838: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__RBRACK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4840, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4842: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SEMICOLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4844, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4846: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COMMA, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4848, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal SEPARATORS: match production*/
			case ART_L_JavaLexerImp_SEPARATORS_4850: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERIOD, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_SEPARATORS_4852, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void ART_PF_OP() {
		switch (currentRestartLabel) {
				/* Nonterminal OP production descriptor loads*/
			case ART_L_JavaLexerImp_OP: 
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4855, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4859, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4863, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4867, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet93[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4871, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet94[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4875, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet95[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4879, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet106[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4883, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4889, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4895, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet96[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4901, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4907, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4913, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4919, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4925, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4933, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4937, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4941, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4945, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4949, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4953, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4957, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4961, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4965, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4971, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4977, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet98[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4985, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet99[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4991, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet100[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_4997, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet163[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5003, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet101[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5009, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet102[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5015, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet103[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5021, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet104[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5027, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet105[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5033, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5041, currentGSSNode, currentInputIndex, dummySPPFNode);
				if (ARTSet108[inputPairBuffer[currentInputPairReference]]) 
					findDescriptor(ART_L_JavaLexerImp_OP_5049, currentGSSNode, currentInputIndex, dummySPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4855: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4857, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4859: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4861, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4863: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4865, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4867: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4869, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4871: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__TILDE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4873, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4875: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__QUERY, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4877, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4879: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__COLON, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4881, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4883: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4885, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4887, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4889: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4891, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4893, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4895: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4897, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4899, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4901: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SHREIK, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4903, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4905, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4907: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4909, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet101[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4911, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4913: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4915, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet102[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4917, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4919: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4921, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet98[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4923, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4925: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4927, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet99[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4929, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet97[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SPACE, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4931, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4933: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4935, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4937: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4939, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4941: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4943, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4945: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4947, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4949: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4951, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4953: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4955, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4957: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4959, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4961: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4963, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4965: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4967, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet105[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4969, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4971: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4973, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4975, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4977: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4979, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4981, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4983, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4985: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PLUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4987, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4989, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4991: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__MINUS, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4993, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4995, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_4997: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__STAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_4999, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5001, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5003: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__SLASH, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5005, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5007, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5009: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__AMPERSAND, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5011, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5013, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5015: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__BAR, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5017, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5019, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5021: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__UPARROW, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5023, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5025, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5027: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__PERCENT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5029, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5031, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5033: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5035, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet105[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__LT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5037, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5039, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5041: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5043, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5045, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5047, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
				/* Nonterminal OP: match production*/
			case ART_L_JavaLexerImp_OP_5049: 
				/* Cat/unary template start */
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5051, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5053, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet108[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__GT, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5055, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				if (!ARTSet106[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				/* Terminal template start */
				currentInputPairReference = inputSuccessorIndex[inputPairBuffer[currentInputPairReference + 1]][inputPairBuffer[currentInputPairReference]];
				currentSPPFRightChildNode = findSPPFTerminal(ART_TC__EQUAL, currentInputIndex, inputPairBuffer[currentInputPairReference + 1]);
				currentInputIndex = inputPairBuffer[currentInputPairReference + 1];
				currentSPPFNode = findSPPF(ART_L_JavaLexerImp_OP_5057, currentSPPFNode, currentSPPFRightChildNode);
				/* Terminal template end */
				/* Cat/unary template end */
				if (!ARTSet166[inputPairBuffer[currentInputPairReference]]) { currentRestartLabel = ART_X_DESPATCH; return; }
				pop(currentGSSNode, currentInputIndex, currentSPPFNode);
				{ currentRestartLabel = ART_X_DESPATCH /* Top level pop */; return; }
		}
	}

	public void parseGenerated(String characterString, int startLabel) {
		characterStringInput = characterString + "\0";
		startSymbolLabel = startLabel;
		inLanguage = false;
		if (!lexLongestMatch()) 		return;
		dummySPPFNode = findSPPFInitial(ART_L_DUMMY, 0, 0);
		currentSPPFNode = dummySPPFNode;
		rootGSSNode = findGSS(ART_L_EOS, 0, 0, 0);
		currentGSSNode = rootGSSNode;
		startClock();
		currentRestartLabel = startSymbolLabel;
		currentInputIndex = 0;
		currentInputPairReference = 0;
		while (true)
			switch (lhsL[currentRestartLabel]) {
				case ART_L_JavaLexerImp_BOOL: 
					ART_PF_BOOL();
					break;
				case ART_L_JavaLexerImp_CHAR: 
					ART_PF_CHAR();
					break;
				case ART_L_JavaLexerImp_COMMENT: 
					ART_PF_COMMENT();
					break;
				case ART_L_JavaLexerImp_FLOAT: 
					ART_PF_FLOAT();
					break;
				case ART_L_JavaLexerImp_ID: 
					ART_PF_ID();
					break;
				case ART_L_JavaLexerImp_INT: 
					ART_PF_INT();
					break;
				case ART_L_JavaLexerImp_NULL: 
					ART_PF_NULL();
					break;
				case ART_L_JavaLexerImp_OP: 
					ART_PF_OP();
					break;
				case ART_L_JavaLexerImp_SEPARATORS: 
					ART_PF_SEPARATORS();
					break;
				case ART_L_JavaLexerImp_STRING: 
					ART_PF_STRING();
					break;
				case ART_L_JavaLexerImp_WS: 
					ART_PF_WS();
					break;
				case ART_L_JavaLexerImp_abstract: 
					ART_PF_abstract();
					break;
				case ART_L_JavaLexerImp_assert: 
					ART_PF_assert();
					break;
				case ART_L_JavaLexerImp_binary_digit: 
					ART_PF_binary_digit();
					break;
				case ART_L_JavaLexerImp_binary_digit_and_underscores: 
					ART_PF_binary_digit_and_underscores();
					break;
				case ART_L_JavaLexerImp_binary_digit_or_underscore: 
					ART_PF_binary_digit_or_underscore();
					break;
				case ART_L_JavaLexerImp_binary_digits: 
					ART_PF_binary_digits();
					break;
				case ART_L_JavaLexerImp_binary_exponent: 
					ART_PF_binary_exponent();
					break;
				case ART_L_JavaLexerImp_boolean: 
					ART_PF_boolean();
					break;
				case ART_L_JavaLexerImp_break: 
					ART_PF_break();
					break;
				case ART_L_JavaLexerImp_byte: 
					ART_PF_byte();
					break;
				case ART_L_JavaLexerImp_case: 
					ART_PF_case();
					break;
				case ART_L_JavaLexerImp_catch: 
					ART_PF_catch();
					break;
				case ART_L_JavaLexerImp_char: 
					ART_PF_char();
					break;
				case ART_L_JavaLexerImp_character: 
					ART_PF_character();
					break;
				case ART_L_JavaLexerImp_class: 
					ART_PF_class();
					break;
				case ART_L_JavaLexerImp_const: 
					ART_PF_const();
					break;
				case ART_L_JavaLexerImp_continue: 
					ART_PF_continue();
					break;
				case ART_L_JavaLexerImp_default: 
					ART_PF_default();
					break;
				case ART_L_JavaLexerImp_digit: 
					ART_PF_digit();
					break;
				case ART_L_JavaLexerImp_digit_and_underscores: 
					ART_PF_digit_and_underscores();
					break;
				case ART_L_JavaLexerImp_digit_or_underscore: 
					ART_PF_digit_or_underscore();
					break;
				case ART_L_JavaLexerImp_digits: 
					ART_PF_digits();
					break;
				case ART_L_JavaLexerImp_do: 
					ART_PF_do();
					break;
				case ART_L_JavaLexerImp_double: 
					ART_PF_double();
					break;
				case ART_L_JavaLexerImp_else: 
					ART_PF_else();
					break;
				case ART_L_JavaLexerImp_enum: 
					ART_PF_enum();
					break;
				case ART_L_JavaLexerImp_exponent_part: 
					ART_PF_exponent_part();
					break;
				case ART_L_JavaLexerImp_extends: 
					ART_PF_extends();
					break;
				case ART_L_JavaLexerImp_final: 
					ART_PF_final();
					break;
				case ART_L_JavaLexerImp_finally: 
					ART_PF_finally();
					break;
				case ART_L_JavaLexerImp_float: 
					ART_PF_float();
					break;
				case ART_L_JavaLexerImp_float_type_suffix: 
					ART_PF_float_type_suffix();
					break;
				case ART_L_JavaLexerImp_for: 
					ART_PF_for();
					break;
				case ART_L_JavaLexerImp_goto: 
					ART_PF_goto();
					break;
				case ART_L_JavaLexerImp_hex_digit: 
					ART_PF_hex_digit();
					break;
				case ART_L_JavaLexerImp_hex_digits: 
					ART_PF_hex_digits();
					break;
				case ART_L_JavaLexerImp_hex_digits_and_underscores: 
					ART_PF_hex_digits_and_underscores();
					break;
				case ART_L_JavaLexerImp_hex_digits_or_underscore: 
					ART_PF_hex_digits_or_underscore();
					break;
				case ART_L_JavaLexerImp_hex_significand: 
					ART_PF_hex_significand();
					break;
				case ART_L_JavaLexerImp_hexadecimal_escape_sequence: 
					ART_PF_hexadecimal_escape_sequence();
					break;
				case ART_L_JavaLexerImp_identifier_part_character: 
					ART_PF_identifier_part_character();
					break;
				case ART_L_JavaLexerImp_if: 
					ART_PF_if();
					break;
				case ART_L_JavaLexerImp_implements: 
					ART_PF_implements();
					break;
				case ART_L_JavaLexerImp_import: 
					ART_PF_import();
					break;
				case ART_L_JavaLexerImp_input: 
					ART_PF_input();
					break;
				case ART_L_JavaLexerImp_input_character: 
					ART_PF_input_character();
					break;
				case ART_L_JavaLexerImp_instanceof: 
					ART_PF_instanceof();
					break;
				case ART_L_JavaLexerImp_int: 
					ART_PF_int();
					break;
				case ART_L_JavaLexerImp_interface: 
					ART_PF_interface();
					break;
				case ART_L_JavaLexerImp_letter_character: 
					ART_PF_letter_character();
					break;
				case ART_L_JavaLexerImp_long: 
					ART_PF_long();
					break;
				case ART_L_JavaLexerImp_native: 
					ART_PF_native();
					break;
				case ART_L_JavaLexerImp_new: 
					ART_PF_new();
					break;
				case ART_L_JavaLexerImp_new_line_character: 
					ART_PF_new_line_character();
					break;
				case ART_L_JavaLexerImp_non_zero_digit: 
					ART_PF_non_zero_digit();
					break;
				case ART_L_JavaLexerImp_not_asterisk: 
					ART_PF_not_asterisk();
					break;
				case ART_L_JavaLexerImp_not_slash: 
					ART_PF_not_slash();
					break;
				case ART_L_JavaLexerImp_octal_digit: 
					ART_PF_octal_digit();
					break;
				case ART_L_JavaLexerImp_octal_digit_or_underscore: 
					ART_PF_octal_digit_or_underscore();
					break;
				case ART_L_JavaLexerImp_octal_digits: 
					ART_PF_octal_digits();
					break;
				case ART_L_JavaLexerImp_octal_digits_and_underscores: 
					ART_PF_octal_digits_and_underscores();
					break;
				case ART_L_JavaLexerImp_package: 
					ART_PF_package();
					break;
				case ART_L_JavaLexerImp_private: 
					ART_PF_private();
					break;
				case ART_L_JavaLexerImp_protected: 
					ART_PF_protected();
					break;
				case ART_L_JavaLexerImp_public: 
					ART_PF_public();
					break;
				case ART_L_JavaLexerImp_regular_string_literal_character: 
					ART_PF_regular_string_literal_character();
					break;
				case ART_L_JavaLexerImp_return: 
					ART_PF_return();
					break;
				case ART_L_JavaLexerImp_short: 
					ART_PF_short();
					break;
				case ART_L_JavaLexerImp_simple_escape_sequence: 
					ART_PF_simple_escape_sequence();
					break;
				case ART_L_JavaLexerImp_single_character: 
					ART_PF_single_character();
					break;
				case ART_L_JavaLexerImp_single_regular_string_literal_character: 
					ART_PF_single_regular_string_literal_character();
					break;
				case ART_L_JavaLexerImp_single_verbatim_string_literal_character: 
					ART_PF_single_verbatim_string_literal_character();
					break;
				case ART_L_JavaLexerImp_static: 
					ART_PF_static();
					break;
				case ART_L_JavaLexerImp_strictfp: 
					ART_PF_strictfp();
					break;
				case ART_L_JavaLexerImp_super: 
					ART_PF_super();
					break;
				case ART_L_JavaLexerImp_switch: 
					ART_PF_switch();
					break;
				case ART_L_JavaLexerImp_synchronized: 
					ART_PF_synchronized();
					break;
				case ART_L_JavaLexerImp_this: 
					ART_PF_this();
					break;
				case ART_L_JavaLexerImp_throw: 
					ART_PF_throw();
					break;
				case ART_L_JavaLexerImp_throws: 
					ART_PF_throws();
					break;
				case ART_L_JavaLexerImp_transient: 
					ART_PF_transient();
					break;
				case ART_L_JavaLexerImp_try: 
					ART_PF_try();
					break;
				case ART_L_JavaLexerImp_underscores: 
					ART_PF_underscores();
					break;
				case ART_L_JavaLexerImp_unicode_character_escape_sequence: 
					ART_PF_unicode_character_escape_sequence();
					break;
				case ART_L_JavaLexerImp_void: 
					ART_PF_void();
					break;
				case ART_L_JavaLexerImp_volatile: 
					ART_PF_volatile();
					break;
				case ART_L_JavaLexerImp_while: 
					ART_PF_while();
					break;
				case ART_X_DESPATCH: 
					if (noDescriptors()) { 
						checkAcceptance();
						stopClock();
						return;
					 }
					unloadDescriptor();
			}
	}

	public void artSet1initialise() {
		ARTSet1 = new boolean[artSetExtent];
		setBoolArray(ARTSet1, 0, artSetExtent, false);
		ARTSet1[4] = true;
		ARTSet1[5] = true;
		ARTSet1[7] = true;
		ARTSet1[8] = true;
		ARTSet1[9] = true;
		ARTSet1[10] = true;
		ARTSet1[11] = true;
		ARTSet1[14] = true;
		ARTSet1[15] = true;
		ARTSet1[16] = true;
		ARTSet1[17] = true;
		ARTSet1[18] = true;
		ARTSet1[19] = true;
		ARTSet1[20] = true;
		ARTSet1[21] = true;
		ARTSet1[22] = true;
		ARTSet1[23] = true;
		ARTSet1[24] = true;
		ARTSet1[25] = true;
		ARTSet1[26] = true;
		ARTSet1[27] = true;
		ARTSet1[28] = true;
		ARTSet1[29] = true;
		ARTSet1[30] = true;
		ARTSet1[31] = true;
		ARTSet1[32] = true;
		ARTSet1[33] = true;
		ARTSet1[34] = true;
		ARTSet1[35] = true;
		ARTSet1[36] = true;
		ARTSet1[37] = true;
		ARTSet1[38] = true;
		ARTSet1[39] = true;
		ARTSet1[40] = true;
		ARTSet1[42] = true;
		ARTSet1[43] = true;
		ARTSet1[44] = true;
		ARTSet1[45] = true;
		ARTSet1[46] = true;
		ARTSet1[47] = true;
		ARTSet1[48] = true;
		ARTSet1[49] = true;
		ARTSet1[50] = true;
		ARTSet1[51] = true;
		ARTSet1[52] = true;
		ARTSet1[53] = true;
		ARTSet1[54] = true;
		ARTSet1[55] = true;
		ARTSet1[56] = true;
		ARTSet1[57] = true;
		ARTSet1[58] = true;
		ARTSet1[59] = true;
		ARTSet1[60] = true;
		ARTSet1[61] = true;
		ARTSet1[62] = true;
		ARTSet1[63] = true;
		ARTSet1[64] = true;
		ARTSet1[65] = true;
		ARTSet1[66] = true;
		ARTSet1[67] = true;
		ARTSet1[68] = true;
		ARTSet1[70] = true;
		ARTSet1[71] = true;
		ARTSet1[72] = true;
		ARTSet1[74] = true;
		ARTSet1[75] = true;
		ARTSet1[76] = true;
		ARTSet1[77] = true;
		ARTSet1[78] = true;
		ARTSet1[79] = true;
		ARTSet1[80] = true;
		ARTSet1[81] = true;
		ARTSet1[82] = true;
		ARTSet1[83] = true;
		ARTSet1[84] = true;
		ARTSet1[85] = true;
		ARTSet1[86] = true;
		ARTSet1[87] = true;
		ARTSet1[88] = true;
		ARTSet1[89] = true;
		ARTSet1[90] = true;
		ARTSet1[91] = true;
		ARTSet1[92] = true;
		ARTSet1[93] = true;
		ARTSet1[94] = true;
		ARTSet1[95] = true;
		ARTSet1[96] = true;
		ARTSet1[97] = true;
		ARTSet1[98] = true;
		ARTSet1[99] = true;
		ARTSet1[100] = true;
		ARTSet1[101] = true;
		ARTSet1[102] = true;
		ARTSet1[103] = true;
	}

	public void artSet2initialise() {
		ARTSet2 = new boolean[artSetExtent];
		setBoolArray(ARTSet2, 0, artSetExtent, false);
		ARTSet2[1] = true;
		ARTSet2[2] = true;
		ARTSet2[3] = true;
		ARTSet2[4] = true;
		ARTSet2[5] = true;
		ARTSet2[6] = true;
		ARTSet2[7] = true;
		ARTSet2[8] = true;
		ARTSet2[9] = true;
		ARTSet2[10] = true;
		ARTSet2[11] = true;
		ARTSet2[12] = true;
		ARTSet2[13] = true;
		ARTSet2[14] = true;
		ARTSet2[15] = true;
		ARTSet2[16] = true;
		ARTSet2[17] = true;
		ARTSet2[18] = true;
		ARTSet2[19] = true;
		ARTSet2[20] = true;
		ARTSet2[21] = true;
		ARTSet2[22] = true;
		ARTSet2[23] = true;
		ARTSet2[24] = true;
		ARTSet2[25] = true;
		ARTSet2[26] = true;
		ARTSet2[27] = true;
		ARTSet2[28] = true;
		ARTSet2[29] = true;
		ARTSet2[30] = true;
		ARTSet2[31] = true;
		ARTSet2[32] = true;
		ARTSet2[33] = true;
		ARTSet2[34] = true;
		ARTSet2[35] = true;
		ARTSet2[36] = true;
		ARTSet2[37] = true;
		ARTSet2[38] = true;
		ARTSet2[39] = true;
		ARTSet2[40] = true;
		ARTSet2[41] = true;
		ARTSet2[42] = true;
		ARTSet2[43] = true;
		ARTSet2[44] = true;
		ARTSet2[45] = true;
		ARTSet2[46] = true;
		ARTSet2[47] = true;
		ARTSet2[48] = true;
		ARTSet2[49] = true;
		ARTSet2[50] = true;
		ARTSet2[51] = true;
		ARTSet2[52] = true;
		ARTSet2[53] = true;
		ARTSet2[54] = true;
		ARTSet2[55] = true;
		ARTSet2[56] = true;
		ARTSet2[57] = true;
		ARTSet2[58] = true;
		ARTSet2[59] = true;
		ARTSet2[60] = true;
		ARTSet2[61] = true;
		ARTSet2[62] = true;
		ARTSet2[63] = true;
		ARTSet2[64] = true;
		ARTSet2[65] = true;
		ARTSet2[66] = true;
		ARTSet2[67] = true;
		ARTSet2[68] = true;
		ARTSet2[69] = true;
		ARTSet2[70] = true;
		ARTSet2[71] = true;
		ARTSet2[72] = true;
		ARTSet2[73] = true;
		ARTSet2[74] = true;
		ARTSet2[75] = true;
		ARTSet2[76] = true;
		ARTSet2[77] = true;
		ARTSet2[78] = true;
		ARTSet2[79] = true;
		ARTSet2[80] = true;
		ARTSet2[81] = true;
		ARTSet2[82] = true;
		ARTSet2[83] = true;
		ARTSet2[84] = true;
		ARTSet2[85] = true;
		ARTSet2[86] = true;
		ARTSet2[87] = true;
		ARTSet2[88] = true;
		ARTSet2[89] = true;
		ARTSet2[90] = true;
		ARTSet2[91] = true;
		ARTSet2[92] = true;
		ARTSet2[93] = true;
		ARTSet2[94] = true;
		ARTSet2[95] = true;
		ARTSet2[96] = true;
		ARTSet2[97] = true;
		ARTSet2[98] = true;
		ARTSet2[99] = true;
		ARTSet2[100] = true;
		ARTSet2[101] = true;
		ARTSet2[102] = true;
		ARTSet2[103] = true;
	}

	public void artSet4initialise() {
		ARTSet4 = new boolean[artSetExtent];
		setBoolArray(ARTSet4, 0, artSetExtent, false);
		ARTSet4[19] = true;
		ARTSet4[24] = true;
	}

	public void artSet7initialise() {
		ARTSet7 = new boolean[artSetExtent];
		setBoolArray(ARTSet7, 0, artSetExtent, false);
		ARTSet7[43] = true;
		ARTSet7[75] = true;
	}

	public void artSet8initialise() {
		ARTSet8 = new boolean[artSetExtent];
		setBoolArray(ARTSet8, 0, artSetExtent, false);
		ARTSet8[53] = true;
		ARTSet8[85] = true;
	}

	public void artSet17initialise() {
		ARTSet17 = new boolean[artSetExtent];
		setBoolArray(ARTSet17, 0, artSetExtent, false);
		ARTSet17[45] = true;
		ARTSet17[46] = true;
		ARTSet17[47] = true;
		ARTSet17[77] = true;
		ARTSet17[78] = true;
		ARTSet17[79] = true;
	}

	public void artSet20initialise() {
		ARTSet20 = new boolean[artSetExtent];
		setBoolArray(ARTSet20, 0, artSetExtent, false);
		ARTSet20[65] = true;
		ARTSet20[97] = true;
	}

	public void artSet21initialise() {
		ARTSet21 = new boolean[artSetExtent];
		setBoolArray(ARTSet21, 0, artSetExtent, false);
		ARTSet21[23] = true;
		ARTSet21[25] = true;
		ARTSet21[26] = true;
		ARTSet21[27] = true;
		ARTSet21[28] = true;
		ARTSet21[29] = true;
		ARTSet21[30] = true;
		ARTSet21[31] = true;
		ARTSet21[32] = true;
		ARTSet21[33] = true;
		ARTSet21[34] = true;
		ARTSet21[42] = true;
		ARTSet21[43] = true;
		ARTSet21[44] = true;
		ARTSet21[45] = true;
		ARTSet21[46] = true;
		ARTSet21[47] = true;
	}

	public void artSet22initialise() {
		ARTSet22 = new boolean[artSetExtent];
		setBoolArray(ARTSet22, 0, artSetExtent, false);
		ARTSet22[20] = true;
		ARTSet22[22] = true;
	}

	public void artSet27initialise() {
		ARTSet27 = new boolean[artSetExtent];
		setBoolArray(ARTSet27, 0, artSetExtent, false);
		ARTSet27[1] = true;
	}

	public void artSet28initialise() {
		ARTSet28 = new boolean[artSetExtent];
		setBoolArray(ARTSet28, 0, artSetExtent, false);
		ARTSet28[2] = true;
	}

	public void artSet29initialise() {
		ARTSet29 = new boolean[artSetExtent];
		setBoolArray(ARTSet29, 0, artSetExtent, false);
		ARTSet29[3] = true;
	}

	public void artSet30initialise() {
		ARTSet30 = new boolean[artSetExtent];
		setBoolArray(ARTSet30, 0, artSetExtent, false);
		ARTSet30[4] = true;
	}

	public void artSet31initialise() {
		ARTSet31 = new boolean[artSetExtent];
		setBoolArray(ARTSet31, 0, artSetExtent, false);
		ARTSet31[6] = true;
	}

	public void artSet32initialise() {
		ARTSet32 = new boolean[artSetExtent];
		setBoolArray(ARTSet32, 0, artSetExtent, false);
		ARTSet32[7] = true;
	}

	public void artSet33initialise() {
		ARTSet33 = new boolean[artSetExtent];
		setBoolArray(ARTSet33, 0, artSetExtent, false);
		ARTSet33[12] = true;
	}

	public void artSet34initialise() {
		ARTSet34 = new boolean[artSetExtent];
		setBoolArray(ARTSet34, 0, artSetExtent, false);
		ARTSet34[13] = true;
	}

	public void artSet35initialise() {
		ARTSet35 = new boolean[artSetExtent];
		setBoolArray(ARTSet35, 0, artSetExtent, false);
		ARTSet35[26] = true;
	}

	public void artSet36initialise() {
		ARTSet36 = new boolean[artSetExtent];
		setBoolArray(ARTSet36, 0, artSetExtent, false);
		ARTSet36[27] = true;
	}

	public void artSet37initialise() {
		ARTSet37 = new boolean[artSetExtent];
		setBoolArray(ARTSet37, 0, artSetExtent, false);
		ARTSet37[28] = true;
	}

	public void artSet38initialise() {
		ARTSet38 = new boolean[artSetExtent];
		setBoolArray(ARTSet38, 0, artSetExtent, false);
		ARTSet38[29] = true;
	}

	public void artSet39initialise() {
		ARTSet39 = new boolean[artSetExtent];
		setBoolArray(ARTSet39, 0, artSetExtent, false);
		ARTSet39[30] = true;
	}

	public void artSet40initialise() {
		ARTSet40 = new boolean[artSetExtent];
		setBoolArray(ARTSet40, 0, artSetExtent, false);
		ARTSet40[31] = true;
	}

	public void artSet41initialise() {
		ARTSet41 = new boolean[artSetExtent];
		setBoolArray(ARTSet41, 0, artSetExtent, false);
		ARTSet41[32] = true;
	}

	public void artSet42initialise() {
		ARTSet42 = new boolean[artSetExtent];
		setBoolArray(ARTSet42, 0, artSetExtent, false);
		ARTSet42[33] = true;
	}

	public void artSet43initialise() {
		ARTSet43 = new boolean[artSetExtent];
		setBoolArray(ARTSet43, 0, artSetExtent, false);
		ARTSet43[34] = true;
	}

	public void artSet44initialise() {
		ARTSet44 = new boolean[artSetExtent];
		setBoolArray(ARTSet44, 0, artSetExtent, false);
		ARTSet44[41] = true;
	}

	public void artSet45initialise() {
		ARTSet45 = new boolean[artSetExtent];
		setBoolArray(ARTSet45, 0, artSetExtent, false);
		ARTSet45[42] = true;
	}

	public void artSet46initialise() {
		ARTSet46 = new boolean[artSetExtent];
		setBoolArray(ARTSet46, 0, artSetExtent, false);
		ARTSet46[43] = true;
	}

	public void artSet47initialise() {
		ARTSet47 = new boolean[artSetExtent];
		setBoolArray(ARTSet47, 0, artSetExtent, false);
		ARTSet47[44] = true;
	}

	public void artSet48initialise() {
		ARTSet48 = new boolean[artSetExtent];
		setBoolArray(ARTSet48, 0, artSetExtent, false);
		ARTSet48[45] = true;
	}

	public void artSet49initialise() {
		ARTSet49 = new boolean[artSetExtent];
		setBoolArray(ARTSet49, 0, artSetExtent, false);
		ARTSet49[46] = true;
	}

	public void artSet50initialise() {
		ARTSet50 = new boolean[artSetExtent];
		setBoolArray(ARTSet50, 0, artSetExtent, false);
		ARTSet50[47] = true;
	}

	public void artSet51initialise() {
		ARTSet51 = new boolean[artSetExtent];
		setBoolArray(ARTSet51, 0, artSetExtent, false);
		ARTSet51[48] = true;
	}

	public void artSet52initialise() {
		ARTSet52 = new boolean[artSetExtent];
		setBoolArray(ARTSet52, 0, artSetExtent, false);
		ARTSet52[49] = true;
	}

	public void artSet53initialise() {
		ARTSet53 = new boolean[artSetExtent];
		setBoolArray(ARTSet53, 0, artSetExtent, false);
		ARTSet53[50] = true;
	}

	public void artSet54initialise() {
		ARTSet54 = new boolean[artSetExtent];
		setBoolArray(ARTSet54, 0, artSetExtent, false);
		ARTSet54[51] = true;
	}

	public void artSet55initialise() {
		ARTSet55 = new boolean[artSetExtent];
		setBoolArray(ARTSet55, 0, artSetExtent, false);
		ARTSet55[52] = true;
	}

	public void artSet56initialise() {
		ARTSet56 = new boolean[artSetExtent];
		setBoolArray(ARTSet56, 0, artSetExtent, false);
		ARTSet56[53] = true;
	}

	public void artSet57initialise() {
		ARTSet57 = new boolean[artSetExtent];
		setBoolArray(ARTSet57, 0, artSetExtent, false);
		ARTSet57[54] = true;
	}

	public void artSet58initialise() {
		ARTSet58 = new boolean[artSetExtent];
		setBoolArray(ARTSet58, 0, artSetExtent, false);
		ARTSet58[55] = true;
	}

	public void artSet59initialise() {
		ARTSet59 = new boolean[artSetExtent];
		setBoolArray(ARTSet59, 0, artSetExtent, false);
		ARTSet59[56] = true;
	}

	public void artSet60initialise() {
		ARTSet60 = new boolean[artSetExtent];
		setBoolArray(ARTSet60, 0, artSetExtent, false);
		ARTSet60[57] = true;
	}

	public void artSet61initialise() {
		ARTSet61 = new boolean[artSetExtent];
		setBoolArray(ARTSet61, 0, artSetExtent, false);
		ARTSet61[58] = true;
	}

	public void artSet62initialise() {
		ARTSet62 = new boolean[artSetExtent];
		setBoolArray(ARTSet62, 0, artSetExtent, false);
		ARTSet62[59] = true;
	}

	public void artSet63initialise() {
		ARTSet63 = new boolean[artSetExtent];
		setBoolArray(ARTSet63, 0, artSetExtent, false);
		ARTSet63[60] = true;
	}

	public void artSet64initialise() {
		ARTSet64 = new boolean[artSetExtent];
		setBoolArray(ARTSet64, 0, artSetExtent, false);
		ARTSet64[61] = true;
	}

	public void artSet65initialise() {
		ARTSet65 = new boolean[artSetExtent];
		setBoolArray(ARTSet65, 0, artSetExtent, false);
		ARTSet65[62] = true;
	}

	public void artSet66initialise() {
		ARTSet66 = new boolean[artSetExtent];
		setBoolArray(ARTSet66, 0, artSetExtent, false);
		ARTSet66[63] = true;
	}

	public void artSet67initialise() {
		ARTSet67 = new boolean[artSetExtent];
		setBoolArray(ARTSet67, 0, artSetExtent, false);
		ARTSet67[64] = true;
	}

	public void artSet68initialise() {
		ARTSet68 = new boolean[artSetExtent];
		setBoolArray(ARTSet68, 0, artSetExtent, false);
		ARTSet68[65] = true;
	}

	public void artSet69initialise() {
		ARTSet69 = new boolean[artSetExtent];
		setBoolArray(ARTSet69, 0, artSetExtent, false);
		ARTSet69[66] = true;
	}

	public void artSet70initialise() {
		ARTSet70 = new boolean[artSetExtent];
		setBoolArray(ARTSet70, 0, artSetExtent, false);
		ARTSet70[67] = true;
	}

	public void artSet71initialise() {
		ARTSet71 = new boolean[artSetExtent];
		setBoolArray(ARTSet71, 0, artSetExtent, false);
		ARTSet71[73] = true;
	}

	public void artSet72initialise() {
		ARTSet72 = new boolean[artSetExtent];
		setBoolArray(ARTSet72, 0, artSetExtent, false);
		ARTSet72[81] = true;
	}

	public void artSet73initialise() {
		ARTSet73 = new boolean[artSetExtent];
		setBoolArray(ARTSet73, 0, artSetExtent, false);
		ARTSet73[83] = true;
	}

	public void artSet74initialise() {
		ARTSet74 = new boolean[artSetExtent];
		setBoolArray(ARTSet74, 0, artSetExtent, false);
		ARTSet74[84] = true;
	}

	public void artSet75initialise() {
		ARTSet75 = new boolean[artSetExtent];
		setBoolArray(ARTSet75, 0, artSetExtent, false);
		ARTSet75[86] = true;
	}

	public void artSet76initialise() {
		ARTSet76 = new boolean[artSetExtent];
		setBoolArray(ARTSet76, 0, artSetExtent, false);
		ARTSet76[88] = true;
	}

	public void artSet77initialise() {
		ARTSet77 = new boolean[artSetExtent];
		setBoolArray(ARTSet77, 0, artSetExtent, false);
		ARTSet77[90] = true;
	}

	public void artSet78initialise() {
		ARTSet78 = new boolean[artSetExtent];
		setBoolArray(ARTSet78, 0, artSetExtent, false);
		ARTSet78[97] = true;
	}

	public void artSet79initialise() {
		ARTSet79 = new boolean[artSetExtent];
		setBoolArray(ARTSet79, 0, artSetExtent, false);
		ARTSet79[98] = true;
	}

	public void artSet80initialise() {
		ARTSet80 = new boolean[artSetExtent];
		setBoolArray(ARTSet80, 0, artSetExtent, false);
		ARTSet80[99] = true;
	}

	public void artSet81initialise() {
		ARTSet81 = new boolean[artSetExtent];
		setBoolArray(ARTSet81, 0, artSetExtent, false);
		ARTSet81[5] = true;
	}

	public void artSet82initialise() {
		ARTSet82 = new boolean[artSetExtent];
		setBoolArray(ARTSet82, 0, artSetExtent, false);
		ARTSet82[8] = true;
	}

	public void artSet83initialise() {
		ARTSet83 = new boolean[artSetExtent];
		setBoolArray(ARTSet83, 0, artSetExtent, false);
		ARTSet83[94] = true;
	}

	public void artSet84initialise() {
		ARTSet84 = new boolean[artSetExtent];
		setBoolArray(ARTSet84, 0, artSetExtent, false);
		ARTSet84[17] = true;
	}

	public void artSet85initialise() {
		ARTSet85 = new boolean[artSetExtent];
		setBoolArray(ARTSet85, 0, artSetExtent, false);
		ARTSet85[18] = true;
	}

	public void artSet86initialise() {
		ARTSet86 = new boolean[artSetExtent];
		setBoolArray(ARTSet86, 0, artSetExtent, false);
		ARTSet86[100] = true;
	}

	public void artSet87initialise() {
		ARTSet87 = new boolean[artSetExtent];
		setBoolArray(ARTSet87, 0, artSetExtent, false);
		ARTSet87[102] = true;
	}

	public void artSet88initialise() {
		ARTSet88 = new boolean[artSetExtent];
		setBoolArray(ARTSet88, 0, artSetExtent, false);
		ARTSet88[68] = true;
	}

	public void artSet89initialise() {
		ARTSet89 = new boolean[artSetExtent];
		setBoolArray(ARTSet89, 0, artSetExtent, false);
		ARTSet89[70] = true;
	}

	public void artSet90initialise() {
		ARTSet90 = new boolean[artSetExtent];
		setBoolArray(ARTSet90, 0, artSetExtent, false);
		ARTSet90[36] = true;
	}

	public void artSet91initialise() {
		ARTSet91 = new boolean[artSetExtent];
		setBoolArray(ARTSet91, 0, artSetExtent, false);
		ARTSet91[21] = true;
	}

	public void artSet92initialise() {
		ARTSet92 = new boolean[artSetExtent];
		setBoolArray(ARTSet92, 0, artSetExtent, false);
		ARTSet92[23] = true;
	}

	public void artSet93initialise() {
		ARTSet93 = new boolean[artSetExtent];
		setBoolArray(ARTSet93, 0, artSetExtent, false);
		ARTSet93[103] = true;
	}

	public void artSet94initialise() {
		ARTSet94 = new boolean[artSetExtent];
		setBoolArray(ARTSet94, 0, artSetExtent, false);
		ARTSet94[40] = true;
	}

	public void artSet95initialise() {
		ARTSet95 = new boolean[artSetExtent];
		setBoolArray(ARTSet95, 0, artSetExtent, false);
		ARTSet95[35] = true;
	}

	public void artSet96initialise() {
		ARTSet96 = new boolean[artSetExtent];
		setBoolArray(ARTSet96, 0, artSetExtent, false);
		ARTSet96[10] = true;
	}

	public void artSet97initialise() {
		ARTSet97 = new boolean[artSetExtent];
		setBoolArray(ARTSet97, 0, artSetExtent, false);
		ARTSet97[9] = true;
	}

	public void artSet98initialise() {
		ARTSet98 = new boolean[artSetExtent];
		setBoolArray(ARTSet98, 0, artSetExtent, false);
		ARTSet98[20] = true;
	}

	public void artSet99initialise() {
		ARTSet99 = new boolean[artSetExtent];
		setBoolArray(ARTSet99, 0, artSetExtent, false);
		ARTSet99[22] = true;
	}

	public void artSet100initialise() {
		ARTSet100 = new boolean[artSetExtent];
		setBoolArray(ARTSet100, 0, artSetExtent, false);
		ARTSet100[19] = true;
	}

	public void artSet101initialise() {
		ARTSet101 = new boolean[artSetExtent];
		setBoolArray(ARTSet101, 0, artSetExtent, false);
		ARTSet101[15] = true;
	}

	public void artSet102initialise() {
		ARTSet102 = new boolean[artSetExtent];
		setBoolArray(ARTSet102, 0, artSetExtent, false);
		ARTSet102[101] = true;
	}

	public void artSet103initialise() {
		ARTSet103 = new boolean[artSetExtent];
		setBoolArray(ARTSet103, 0, artSetExtent, false);
		ARTSet103[71] = true;
	}

	public void artSet104initialise() {
		ARTSet104 = new boolean[artSetExtent];
		setBoolArray(ARTSet104, 0, artSetExtent, false);
		ARTSet104[14] = true;
	}

	public void artSet105initialise() {
		ARTSet105 = new boolean[artSetExtent];
		setBoolArray(ARTSet105, 0, artSetExtent, false);
		ARTSet105[37] = true;
	}

	public void artSet106initialise() {
		ARTSet106 = new boolean[artSetExtent];
		setBoolArray(ARTSet106, 0, artSetExtent, false);
		ARTSet106[38] = true;
	}

	public void artSet108initialise() {
		ARTSet108 = new boolean[artSetExtent];
		setBoolArray(ARTSet108, 0, artSetExtent, false);
		ARTSet108[39] = true;
	}

	public void artSet109initialise() {
		ARTSet109 = new boolean[artSetExtent];
		setBoolArray(ARTSet109, 0, artSetExtent, false);
		ARTSet109[96] = true;
	}

	public void artSet110initialise() {
		ARTSet110 = new boolean[artSetExtent];
		setBoolArray(ARTSet110, 0, artSetExtent, false);
		ARTSet110[95] = true;
	}

	public void artSet111initialise() {
		ARTSet111 = new boolean[artSetExtent];
		setBoolArray(ARTSet111, 0, artSetExtent, false);
		ARTSet111[72] = true;
	}

	public void artSet112initialise() {
		ARTSet112 = new boolean[artSetExtent];
		setBoolArray(ARTSet112, 0, artSetExtent, false);
		ARTSet112[93] = true;
	}

	public void artSet114initialise() {
		ARTSet114 = new boolean[artSetExtent];
		setBoolArray(ARTSet114, 0, artSetExtent, false);
		ARTSet114[1] = true;
		ARTSet114[2] = true;
		ARTSet114[3] = true;
		ARTSet114[4] = true;
		ARTSet114[6] = true;
		ARTSet114[7] = true;
		ARTSet114[9] = true;
		ARTSet114[10] = true;
		ARTSet114[12] = true;
		ARTSet114[13] = true;
		ARTSet114[14] = true;
		ARTSet114[15] = true;
		ARTSet114[16] = true;
		ARTSet114[17] = true;
		ARTSet114[18] = true;
		ARTSet114[19] = true;
		ARTSet114[20] = true;
		ARTSet114[21] = true;
		ARTSet114[22] = true;
		ARTSet114[23] = true;
		ARTSet114[24] = true;
		ARTSet114[25] = true;
		ARTSet114[26] = true;
		ARTSet114[27] = true;
		ARTSet114[28] = true;
		ARTSet114[29] = true;
		ARTSet114[30] = true;
		ARTSet114[31] = true;
		ARTSet114[32] = true;
		ARTSet114[33] = true;
		ARTSet114[34] = true;
		ARTSet114[35] = true;
		ARTSet114[36] = true;
		ARTSet114[37] = true;
		ARTSet114[38] = true;
		ARTSet114[39] = true;
		ARTSet114[40] = true;
		ARTSet114[41] = true;
		ARTSet114[42] = true;
		ARTSet114[43] = true;
		ARTSet114[44] = true;
		ARTSet114[45] = true;
		ARTSet114[46] = true;
		ARTSet114[47] = true;
		ARTSet114[48] = true;
		ARTSet114[49] = true;
		ARTSet114[50] = true;
		ARTSet114[51] = true;
		ARTSet114[52] = true;
		ARTSet114[53] = true;
		ARTSet114[54] = true;
		ARTSet114[55] = true;
		ARTSet114[56] = true;
		ARTSet114[57] = true;
		ARTSet114[58] = true;
		ARTSet114[59] = true;
		ARTSet114[60] = true;
		ARTSet114[61] = true;
		ARTSet114[62] = true;
		ARTSet114[63] = true;
		ARTSet114[64] = true;
		ARTSet114[65] = true;
		ARTSet114[66] = true;
		ARTSet114[67] = true;
		ARTSet114[68] = true;
		ARTSet114[70] = true;
		ARTSet114[71] = true;
		ARTSet114[72] = true;
		ARTSet114[73] = true;
		ARTSet114[74] = true;
		ARTSet114[75] = true;
		ARTSet114[76] = true;
		ARTSet114[77] = true;
		ARTSet114[78] = true;
		ARTSet114[79] = true;
		ARTSet114[80] = true;
		ARTSet114[81] = true;
		ARTSet114[82] = true;
		ARTSet114[83] = true;
		ARTSet114[84] = true;
		ARTSet114[85] = true;
		ARTSet114[86] = true;
		ARTSet114[87] = true;
		ARTSet114[88] = true;
		ARTSet114[89] = true;
		ARTSet114[90] = true;
		ARTSet114[91] = true;
		ARTSet114[92] = true;
		ARTSet114[93] = true;
		ARTSet114[94] = true;
		ARTSet114[95] = true;
		ARTSet114[96] = true;
		ARTSet114[97] = true;
		ARTSet114[98] = true;
		ARTSet114[99] = true;
		ARTSet114[100] = true;
		ARTSet114[101] = true;
		ARTSet114[102] = true;
		ARTSet114[103] = true;
	}

	public void artSet115initialise() {
		ARTSet115 = new boolean[artSetExtent];
		setBoolArray(ARTSet115, 0, artSetExtent, false);
		ARTSet115[1] = true;
		ARTSet115[2] = true;
		ARTSet115[3] = true;
		ARTSet115[4] = true;
		ARTSet115[6] = true;
		ARTSet115[7] = true;
		ARTSet115[9] = true;
		ARTSet115[10] = true;
		ARTSet115[11] = true;
		ARTSet115[12] = true;
		ARTSet115[13] = true;
		ARTSet115[14] = true;
		ARTSet115[15] = true;
		ARTSet115[17] = true;
		ARTSet115[18] = true;
		ARTSet115[19] = true;
		ARTSet115[20] = true;
		ARTSet115[21] = true;
		ARTSet115[22] = true;
		ARTSet115[23] = true;
		ARTSet115[24] = true;
		ARTSet115[25] = true;
		ARTSet115[26] = true;
		ARTSet115[27] = true;
		ARTSet115[28] = true;
		ARTSet115[29] = true;
		ARTSet115[30] = true;
		ARTSet115[31] = true;
		ARTSet115[32] = true;
		ARTSet115[33] = true;
		ARTSet115[34] = true;
		ARTSet115[35] = true;
		ARTSet115[36] = true;
		ARTSet115[37] = true;
		ARTSet115[38] = true;
		ARTSet115[39] = true;
		ARTSet115[40] = true;
		ARTSet115[41] = true;
		ARTSet115[42] = true;
		ARTSet115[43] = true;
		ARTSet115[44] = true;
		ARTSet115[45] = true;
		ARTSet115[46] = true;
		ARTSet115[47] = true;
		ARTSet115[48] = true;
		ARTSet115[49] = true;
		ARTSet115[50] = true;
		ARTSet115[51] = true;
		ARTSet115[52] = true;
		ARTSet115[53] = true;
		ARTSet115[54] = true;
		ARTSet115[55] = true;
		ARTSet115[56] = true;
		ARTSet115[57] = true;
		ARTSet115[58] = true;
		ARTSet115[59] = true;
		ARTSet115[60] = true;
		ARTSet115[61] = true;
		ARTSet115[62] = true;
		ARTSet115[63] = true;
		ARTSet115[64] = true;
		ARTSet115[65] = true;
		ARTSet115[66] = true;
		ARTSet115[67] = true;
		ARTSet115[68] = true;
		ARTSet115[70] = true;
		ARTSet115[71] = true;
		ARTSet115[72] = true;
		ARTSet115[73] = true;
		ARTSet115[74] = true;
		ARTSet115[75] = true;
		ARTSet115[76] = true;
		ARTSet115[77] = true;
		ARTSet115[78] = true;
		ARTSet115[79] = true;
		ARTSet115[80] = true;
		ARTSet115[81] = true;
		ARTSet115[82] = true;
		ARTSet115[83] = true;
		ARTSet115[84] = true;
		ARTSet115[85] = true;
		ARTSet115[86] = true;
		ARTSet115[87] = true;
		ARTSet115[88] = true;
		ARTSet115[89] = true;
		ARTSet115[90] = true;
		ARTSet115[91] = true;
		ARTSet115[92] = true;
		ARTSet115[93] = true;
		ARTSet115[94] = true;
		ARTSet115[95] = true;
		ARTSet115[96] = true;
		ARTSet115[97] = true;
		ARTSet115[98] = true;
		ARTSet115[99] = true;
		ARTSet115[100] = true;
		ARTSet115[101] = true;
		ARTSet115[102] = true;
		ARTSet115[103] = true;
	}

	public void artSet116initialise() {
		ARTSet116 = new boolean[artSetExtent];
		setBoolArray(ARTSet116, 0, artSetExtent, false);
		ARTSet116[92] = true;
	}

	public void artSet117initialise() {
		ARTSet117 = new boolean[artSetExtent];
		setBoolArray(ARTSet117, 0, artSetExtent, false);
		ARTSet117[91] = true;
	}

	public void artSet118initialise() {
		ARTSet118 = new boolean[artSetExtent];
		setBoolArray(ARTSet118, 0, artSetExtent, false);
		ARTSet118[1] = true;
		ARTSet118[2] = true;
		ARTSet118[3] = true;
		ARTSet118[4] = true;
		ARTSet118[6] = true;
		ARTSet118[7] = true;
		ARTSet118[9] = true;
		ARTSet118[10] = true;
		ARTSet118[12] = true;
		ARTSet118[13] = true;
		ARTSet118[14] = true;
		ARTSet118[15] = true;
		ARTSet118[16] = true;
		ARTSet118[17] = true;
		ARTSet118[18] = true;
		ARTSet118[19] = true;
		ARTSet118[20] = true;
		ARTSet118[21] = true;
		ARTSet118[22] = true;
		ARTSet118[23] = true;
		ARTSet118[24] = true;
		ARTSet118[25] = true;
		ARTSet118[26] = true;
		ARTSet118[27] = true;
		ARTSet118[28] = true;
		ARTSet118[29] = true;
		ARTSet118[30] = true;
		ARTSet118[31] = true;
		ARTSet118[32] = true;
		ARTSet118[33] = true;
		ARTSet118[34] = true;
		ARTSet118[35] = true;
		ARTSet118[36] = true;
		ARTSet118[37] = true;
		ARTSet118[38] = true;
		ARTSet118[39] = true;
		ARTSet118[40] = true;
		ARTSet118[41] = true;
		ARTSet118[42] = true;
		ARTSet118[43] = true;
		ARTSet118[44] = true;
		ARTSet118[45] = true;
		ARTSet118[46] = true;
		ARTSet118[47] = true;
		ARTSet118[48] = true;
		ARTSet118[49] = true;
		ARTSet118[50] = true;
		ARTSet118[51] = true;
		ARTSet118[52] = true;
		ARTSet118[53] = true;
		ARTSet118[54] = true;
		ARTSet118[55] = true;
		ARTSet118[56] = true;
		ARTSet118[57] = true;
		ARTSet118[58] = true;
		ARTSet118[59] = true;
		ARTSet118[60] = true;
		ARTSet118[61] = true;
		ARTSet118[62] = true;
		ARTSet118[63] = true;
		ARTSet118[64] = true;
		ARTSet118[65] = true;
		ARTSet118[66] = true;
		ARTSet118[67] = true;
		ARTSet118[68] = true;
		ARTSet118[69] = true;
		ARTSet118[70] = true;
		ARTSet118[71] = true;
		ARTSet118[72] = true;
		ARTSet118[73] = true;
		ARTSet118[74] = true;
		ARTSet118[75] = true;
		ARTSet118[76] = true;
		ARTSet118[77] = true;
		ARTSet118[78] = true;
		ARTSet118[79] = true;
		ARTSet118[80] = true;
		ARTSet118[81] = true;
		ARTSet118[82] = true;
		ARTSet118[83] = true;
		ARTSet118[84] = true;
		ARTSet118[85] = true;
		ARTSet118[86] = true;
		ARTSet118[87] = true;
		ARTSet118[88] = true;
		ARTSet118[89] = true;
		ARTSet118[90] = true;
		ARTSet118[91] = true;
		ARTSet118[92] = true;
		ARTSet118[93] = true;
		ARTSet118[94] = true;
		ARTSet118[95] = true;
		ARTSet118[96] = true;
		ARTSet118[97] = true;
		ARTSet118[98] = true;
		ARTSet118[99] = true;
		ARTSet118[100] = true;
		ARTSet118[101] = true;
		ARTSet118[102] = true;
		ARTSet118[103] = true;
	}

	public void artSet119initialise() {
		ARTSet119 = new boolean[artSetExtent];
		setBoolArray(ARTSet119, 0, artSetExtent, false);
		ARTSet119[89] = true;
	}

	public void artSet120initialise() {
		ARTSet120 = new boolean[artSetExtent];
		setBoolArray(ARTSet120, 0, artSetExtent, false);
		ARTSet120[25] = true;
		ARTSet120[26] = true;
		ARTSet120[27] = true;
		ARTSet120[28] = true;
		ARTSet120[29] = true;
		ARTSet120[30] = true;
		ARTSet120[31] = true;
		ARTSet120[32] = true;
		ARTSet120[72] = true;
	}

	public void artSet121initialise() {
		ARTSet121 = new boolean[artSetExtent];
		setBoolArray(ARTSet121, 0, artSetExtent, false);
		ARTSet121[25] = true;
		ARTSet121[26] = true;
		ARTSet121[27] = true;
		ARTSet121[28] = true;
		ARTSet121[29] = true;
		ARTSet121[30] = true;
		ARTSet121[31] = true;
		ARTSet121[32] = true;
	}

	public void artSet122initialise() {
		ARTSet122 = new boolean[artSetExtent];
		setBoolArray(ARTSet122, 0, artSetExtent, false);
		ARTSet122[1] = true;
		ARTSet122[2] = true;
		ARTSet122[3] = true;
		ARTSet122[4] = true;
		ARTSet122[5] = true;
		ARTSet122[6] = true;
		ARTSet122[7] = true;
		ARTSet122[8] = true;
		ARTSet122[9] = true;
		ARTSet122[10] = true;
		ARTSet122[11] = true;
		ARTSet122[12] = true;
		ARTSet122[13] = true;
		ARTSet122[14] = true;
		ARTSet122[15] = true;
		ARTSet122[16] = true;
		ARTSet122[17] = true;
		ARTSet122[18] = true;
		ARTSet122[19] = true;
		ARTSet122[20] = true;
		ARTSet122[21] = true;
		ARTSet122[22] = true;
		ARTSet122[23] = true;
		ARTSet122[25] = true;
		ARTSet122[26] = true;
		ARTSet122[27] = true;
		ARTSet122[28] = true;
		ARTSet122[29] = true;
		ARTSet122[30] = true;
		ARTSet122[31] = true;
		ARTSet122[32] = true;
		ARTSet122[33] = true;
		ARTSet122[34] = true;
		ARTSet122[35] = true;
		ARTSet122[36] = true;
		ARTSet122[37] = true;
		ARTSet122[38] = true;
		ARTSet122[39] = true;
		ARTSet122[40] = true;
		ARTSet122[41] = true;
		ARTSet122[42] = true;
		ARTSet122[43] = true;
		ARTSet122[44] = true;
		ARTSet122[45] = true;
		ARTSet122[46] = true;
		ARTSet122[47] = true;
		ARTSet122[48] = true;
		ARTSet122[49] = true;
		ARTSet122[50] = true;
		ARTSet122[51] = true;
		ARTSet122[52] = true;
		ARTSet122[53] = true;
		ARTSet122[54] = true;
		ARTSet122[55] = true;
		ARTSet122[56] = true;
		ARTSet122[57] = true;
		ARTSet122[58] = true;
		ARTSet122[59] = true;
		ARTSet122[60] = true;
		ARTSet122[61] = true;
		ARTSet122[62] = true;
		ARTSet122[63] = true;
		ARTSet122[64] = true;
		ARTSet122[65] = true;
		ARTSet122[66] = true;
		ARTSet122[67] = true;
		ARTSet122[68] = true;
		ARTSet122[69] = true;
		ARTSet122[70] = true;
		ARTSet122[71] = true;
		ARTSet122[72] = true;
		ARTSet122[73] = true;
		ARTSet122[74] = true;
		ARTSet122[75] = true;
		ARTSet122[76] = true;
		ARTSet122[77] = true;
		ARTSet122[78] = true;
		ARTSet122[79] = true;
		ARTSet122[80] = true;
		ARTSet122[81] = true;
		ARTSet122[82] = true;
		ARTSet122[83] = true;
		ARTSet122[84] = true;
		ARTSet122[85] = true;
		ARTSet122[86] = true;
		ARTSet122[87] = true;
		ARTSet122[88] = true;
		ARTSet122[89] = true;
		ARTSet122[90] = true;
		ARTSet122[91] = true;
		ARTSet122[92] = true;
		ARTSet122[93] = true;
		ARTSet122[94] = true;
		ARTSet122[95] = true;
		ARTSet122[96] = true;
		ARTSet122[97] = true;
		ARTSet122[98] = true;
		ARTSet122[99] = true;
		ARTSet122[100] = true;
		ARTSet122[101] = true;
		ARTSet122[102] = true;
		ARTSet122[103] = true;
	}

	public void artSet123initialise() {
		ARTSet123 = new boolean[artSetExtent];
		setBoolArray(ARTSet123, 0, artSetExtent, false);
		ARTSet123[1] = true;
		ARTSet123[2] = true;
		ARTSet123[3] = true;
		ARTSet123[4] = true;
		ARTSet123[5] = true;
		ARTSet123[6] = true;
		ARTSet123[7] = true;
		ARTSet123[8] = true;
		ARTSet123[9] = true;
		ARTSet123[10] = true;
		ARTSet123[11] = true;
		ARTSet123[12] = true;
		ARTSet123[13] = true;
		ARTSet123[14] = true;
		ARTSet123[15] = true;
		ARTSet123[16] = true;
		ARTSet123[17] = true;
		ARTSet123[18] = true;
		ARTSet123[20] = true;
		ARTSet123[21] = true;
		ARTSet123[22] = true;
		ARTSet123[23] = true;
		ARTSet123[24] = true;
		ARTSet123[25] = true;
		ARTSet123[26] = true;
		ARTSet123[27] = true;
		ARTSet123[28] = true;
		ARTSet123[29] = true;
		ARTSet123[30] = true;
		ARTSet123[31] = true;
		ARTSet123[32] = true;
		ARTSet123[33] = true;
		ARTSet123[34] = true;
		ARTSet123[35] = true;
		ARTSet123[36] = true;
		ARTSet123[37] = true;
		ARTSet123[38] = true;
		ARTSet123[39] = true;
		ARTSet123[40] = true;
		ARTSet123[41] = true;
		ARTSet123[42] = true;
		ARTSet123[43] = true;
		ARTSet123[44] = true;
		ARTSet123[45] = true;
		ARTSet123[46] = true;
		ARTSet123[47] = true;
		ARTSet123[48] = true;
		ARTSet123[49] = true;
		ARTSet123[50] = true;
		ARTSet123[51] = true;
		ARTSet123[52] = true;
		ARTSet123[53] = true;
		ARTSet123[54] = true;
		ARTSet123[55] = true;
		ARTSet123[56] = true;
		ARTSet123[57] = true;
		ARTSet123[58] = true;
		ARTSet123[59] = true;
		ARTSet123[60] = true;
		ARTSet123[61] = true;
		ARTSet123[62] = true;
		ARTSet123[63] = true;
		ARTSet123[64] = true;
		ARTSet123[65] = true;
		ARTSet123[66] = true;
		ARTSet123[67] = true;
		ARTSet123[68] = true;
		ARTSet123[69] = true;
		ARTSet123[70] = true;
		ARTSet123[71] = true;
		ARTSet123[72] = true;
		ARTSet123[73] = true;
		ARTSet123[74] = true;
		ARTSet123[75] = true;
		ARTSet123[76] = true;
		ARTSet123[77] = true;
		ARTSet123[78] = true;
		ARTSet123[79] = true;
		ARTSet123[80] = true;
		ARTSet123[81] = true;
		ARTSet123[82] = true;
		ARTSet123[83] = true;
		ARTSet123[84] = true;
		ARTSet123[85] = true;
		ARTSet123[86] = true;
		ARTSet123[87] = true;
		ARTSet123[88] = true;
		ARTSet123[89] = true;
		ARTSet123[90] = true;
		ARTSet123[91] = true;
		ARTSet123[92] = true;
		ARTSet123[93] = true;
		ARTSet123[94] = true;
		ARTSet123[95] = true;
		ARTSet123[96] = true;
		ARTSet123[97] = true;
		ARTSet123[98] = true;
		ARTSet123[99] = true;
		ARTSet123[100] = true;
		ARTSet123[101] = true;
		ARTSet123[102] = true;
		ARTSet123[103] = true;
	}

	public void artSet124initialise() {
		ARTSet124 = new boolean[artSetExtent];
		setBoolArray(ARTSet124, 0, artSetExtent, false);
		ARTSet124[26] = true;
		ARTSet124[27] = true;
		ARTSet124[28] = true;
		ARTSet124[29] = true;
		ARTSet124[30] = true;
		ARTSet124[31] = true;
		ARTSet124[32] = true;
		ARTSet124[33] = true;
		ARTSet124[34] = true;
	}

	public void artSet126initialise() {
		ARTSet126 = new boolean[artSetExtent];
		setBoolArray(ARTSet126, 0, artSetExtent, false);
	}

	public void artSet127initialise() {
		ARTSet127 = new boolean[artSetExtent];
		setBoolArray(ARTSet127, 0, artSetExtent, false);
		ARTSet127[85] = true;
	}

	public void artSet128initialise() {
		ARTSet128 = new boolean[artSetExtent];
		setBoolArray(ARTSet128, 0, artSetExtent, false);
		ARTSet128[42] = true;
		ARTSet128[43] = true;
		ARTSet128[44] = true;
		ARTSet128[45] = true;
		ARTSet128[46] = true;
		ARTSet128[47] = true;
		ARTSet128[48] = true;
		ARTSet128[49] = true;
		ARTSet128[50] = true;
		ARTSet128[51] = true;
		ARTSet128[52] = true;
		ARTSet128[53] = true;
		ARTSet128[54] = true;
		ARTSet128[55] = true;
		ARTSet128[56] = true;
		ARTSet128[57] = true;
		ARTSet128[58] = true;
		ARTSet128[59] = true;
		ARTSet128[60] = true;
		ARTSet128[61] = true;
		ARTSet128[62] = true;
		ARTSet128[63] = true;
		ARTSet128[64] = true;
		ARTSet128[65] = true;
		ARTSet128[66] = true;
		ARTSet128[67] = true;
		ARTSet128[74] = true;
		ARTSet128[75] = true;
		ARTSet128[76] = true;
		ARTSet128[77] = true;
		ARTSet128[78] = true;
		ARTSet128[79] = true;
		ARTSet128[80] = true;
		ARTSet128[81] = true;
		ARTSet128[82] = true;
		ARTSet128[83] = true;
		ARTSet128[84] = true;
		ARTSet128[85] = true;
		ARTSet128[86] = true;
		ARTSet128[87] = true;
		ARTSet128[88] = true;
		ARTSet128[89] = true;
		ARTSet128[90] = true;
		ARTSet128[91] = true;
		ARTSet128[92] = true;
		ARTSet128[93] = true;
		ARTSet128[94] = true;
		ARTSet128[95] = true;
		ARTSet128[96] = true;
		ARTSet128[97] = true;
		ARTSet128[98] = true;
		ARTSet128[99] = true;
	}

	public void artSet129initialise() {
		ARTSet129 = new boolean[artSetExtent];
		setBoolArray(ARTSet129, 0, artSetExtent, false);
		ARTSet129[1] = true;
		ARTSet129[2] = true;
		ARTSet129[3] = true;
		ARTSet129[4] = true;
		ARTSet129[6] = true;
		ARTSet129[7] = true;
		ARTSet129[9] = true;
		ARTSet129[10] = true;
		ARTSet129[11] = true;
		ARTSet129[12] = true;
		ARTSet129[13] = true;
		ARTSet129[14] = true;
		ARTSet129[15] = true;
		ARTSet129[16] = true;
		ARTSet129[17] = true;
		ARTSet129[18] = true;
		ARTSet129[19] = true;
		ARTSet129[20] = true;
		ARTSet129[21] = true;
		ARTSet129[22] = true;
		ARTSet129[23] = true;
		ARTSet129[24] = true;
		ARTSet129[25] = true;
		ARTSet129[26] = true;
		ARTSet129[27] = true;
		ARTSet129[28] = true;
		ARTSet129[29] = true;
		ARTSet129[30] = true;
		ARTSet129[31] = true;
		ARTSet129[32] = true;
		ARTSet129[33] = true;
		ARTSet129[34] = true;
		ARTSet129[35] = true;
		ARTSet129[36] = true;
		ARTSet129[37] = true;
		ARTSet129[38] = true;
		ARTSet129[39] = true;
		ARTSet129[40] = true;
		ARTSet129[41] = true;
		ARTSet129[42] = true;
		ARTSet129[43] = true;
		ARTSet129[44] = true;
		ARTSet129[45] = true;
		ARTSet129[46] = true;
		ARTSet129[47] = true;
		ARTSet129[48] = true;
		ARTSet129[49] = true;
		ARTSet129[50] = true;
		ARTSet129[51] = true;
		ARTSet129[52] = true;
		ARTSet129[53] = true;
		ARTSet129[54] = true;
		ARTSet129[55] = true;
		ARTSet129[56] = true;
		ARTSet129[57] = true;
		ARTSet129[58] = true;
		ARTSet129[59] = true;
		ARTSet129[60] = true;
		ARTSet129[61] = true;
		ARTSet129[62] = true;
		ARTSet129[63] = true;
		ARTSet129[64] = true;
		ARTSet129[65] = true;
		ARTSet129[66] = true;
		ARTSet129[67] = true;
		ARTSet129[68] = true;
		ARTSet129[69] = true;
		ARTSet129[70] = true;
		ARTSet129[71] = true;
		ARTSet129[72] = true;
		ARTSet129[73] = true;
		ARTSet129[74] = true;
		ARTSet129[75] = true;
		ARTSet129[76] = true;
		ARTSet129[77] = true;
		ARTSet129[78] = true;
		ARTSet129[79] = true;
		ARTSet129[80] = true;
		ARTSet129[81] = true;
		ARTSet129[82] = true;
		ARTSet129[83] = true;
		ARTSet129[84] = true;
		ARTSet129[85] = true;
		ARTSet129[86] = true;
		ARTSet129[87] = true;
		ARTSet129[88] = true;
		ARTSet129[89] = true;
		ARTSet129[90] = true;
		ARTSet129[91] = true;
		ARTSet129[92] = true;
		ARTSet129[93] = true;
		ARTSet129[94] = true;
		ARTSet129[95] = true;
		ARTSet129[96] = true;
		ARTSet129[97] = true;
		ARTSet129[98] = true;
		ARTSet129[99] = true;
		ARTSet129[100] = true;
		ARTSet129[101] = true;
		ARTSet129[102] = true;
		ARTSet129[103] = true;
	}

	public void artSet131initialise() {
		ARTSet131 = new boolean[artSetExtent];
		setBoolArray(ARTSet131, 0, artSetExtent, false);
		ARTSet131[0] = true;
	}

	public void artSet132initialise() {
		ARTSet132 = new boolean[artSetExtent];
		setBoolArray(ARTSet132, 0, artSetExtent, false);
		ARTSet132[82] = true;
	}

	public void artSet133initialise() {
		ARTSet133 = new boolean[artSetExtent];
		setBoolArray(ARTSet133, 0, artSetExtent, false);
		ARTSet133[25] = true;
		ARTSet133[26] = true;
		ARTSet133[27] = true;
		ARTSet133[28] = true;
		ARTSet133[29] = true;
		ARTSet133[30] = true;
		ARTSet133[31] = true;
		ARTSet133[32] = true;
		ARTSet133[33] = true;
		ARTSet133[34] = true;
		ARTSet133[42] = true;
		ARTSet133[43] = true;
		ARTSet133[44] = true;
		ARTSet133[45] = true;
		ARTSet133[46] = true;
		ARTSet133[47] = true;
		ARTSet133[48] = true;
		ARTSet133[49] = true;
		ARTSet133[50] = true;
		ARTSet133[51] = true;
		ARTSet133[52] = true;
		ARTSet133[53] = true;
		ARTSet133[54] = true;
		ARTSet133[55] = true;
		ARTSet133[56] = true;
		ARTSet133[57] = true;
		ARTSet133[58] = true;
		ARTSet133[59] = true;
		ARTSet133[60] = true;
		ARTSet133[61] = true;
		ARTSet133[62] = true;
		ARTSet133[63] = true;
		ARTSet133[64] = true;
		ARTSet133[65] = true;
		ARTSet133[66] = true;
		ARTSet133[67] = true;
		ARTSet133[69] = true;
		ARTSet133[72] = true;
		ARTSet133[74] = true;
		ARTSet133[75] = true;
		ARTSet133[76] = true;
		ARTSet133[77] = true;
		ARTSet133[78] = true;
		ARTSet133[79] = true;
		ARTSet133[80] = true;
		ARTSet133[81] = true;
		ARTSet133[82] = true;
		ARTSet133[83] = true;
		ARTSet133[84] = true;
		ARTSet133[85] = true;
		ARTSet133[86] = true;
		ARTSet133[87] = true;
		ARTSet133[88] = true;
		ARTSet133[89] = true;
		ARTSet133[90] = true;
		ARTSet133[91] = true;
		ARTSet133[92] = true;
		ARTSet133[93] = true;
		ARTSet133[94] = true;
		ARTSet133[95] = true;
		ARTSet133[96] = true;
		ARTSet133[97] = true;
		ARTSet133[98] = true;
		ARTSet133[99] = true;
	}

	public void artSet134initialise() {
		ARTSet134 = new boolean[artSetExtent];
		setBoolArray(ARTSet134, 0, artSetExtent, false);
		ARTSet134[0] = true;
		ARTSet134[4] = true;
		ARTSet134[5] = true;
		ARTSet134[7] = true;
		ARTSet134[8] = true;
		ARTSet134[9] = true;
		ARTSet134[10] = true;
		ARTSet134[11] = true;
		ARTSet134[14] = true;
		ARTSet134[15] = true;
		ARTSet134[16] = true;
		ARTSet134[17] = true;
		ARTSet134[18] = true;
		ARTSet134[19] = true;
		ARTSet134[20] = true;
		ARTSet134[21] = true;
		ARTSet134[22] = true;
		ARTSet134[23] = true;
		ARTSet134[24] = true;
		ARTSet134[25] = true;
		ARTSet134[26] = true;
		ARTSet134[27] = true;
		ARTSet134[28] = true;
		ARTSet134[29] = true;
		ARTSet134[30] = true;
		ARTSet134[31] = true;
		ARTSet134[32] = true;
		ARTSet134[33] = true;
		ARTSet134[34] = true;
		ARTSet134[35] = true;
		ARTSet134[36] = true;
		ARTSet134[37] = true;
		ARTSet134[38] = true;
		ARTSet134[39] = true;
		ARTSet134[40] = true;
		ARTSet134[42] = true;
		ARTSet134[43] = true;
		ARTSet134[44] = true;
		ARTSet134[45] = true;
		ARTSet134[46] = true;
		ARTSet134[47] = true;
		ARTSet134[48] = true;
		ARTSet134[49] = true;
		ARTSet134[50] = true;
		ARTSet134[51] = true;
		ARTSet134[52] = true;
		ARTSet134[53] = true;
		ARTSet134[54] = true;
		ARTSet134[55] = true;
		ARTSet134[56] = true;
		ARTSet134[57] = true;
		ARTSet134[58] = true;
		ARTSet134[59] = true;
		ARTSet134[60] = true;
		ARTSet134[61] = true;
		ARTSet134[62] = true;
		ARTSet134[63] = true;
		ARTSet134[64] = true;
		ARTSet134[65] = true;
		ARTSet134[66] = true;
		ARTSet134[67] = true;
		ARTSet134[68] = true;
		ARTSet134[69] = true;
		ARTSet134[70] = true;
		ARTSet134[71] = true;
		ARTSet134[72] = true;
		ARTSet134[74] = true;
		ARTSet134[75] = true;
		ARTSet134[76] = true;
		ARTSet134[77] = true;
		ARTSet134[78] = true;
		ARTSet134[79] = true;
		ARTSet134[80] = true;
		ARTSet134[81] = true;
		ARTSet134[82] = true;
		ARTSet134[83] = true;
		ARTSet134[84] = true;
		ARTSet134[85] = true;
		ARTSet134[86] = true;
		ARTSet134[87] = true;
		ARTSet134[88] = true;
		ARTSet134[89] = true;
		ARTSet134[90] = true;
		ARTSet134[91] = true;
		ARTSet134[92] = true;
		ARTSet134[93] = true;
		ARTSet134[94] = true;
		ARTSet134[95] = true;
		ARTSet134[96] = true;
		ARTSet134[97] = true;
		ARTSet134[98] = true;
		ARTSet134[99] = true;
		ARTSet134[100] = true;
		ARTSet134[101] = true;
		ARTSet134[102] = true;
		ARTSet134[103] = true;
	}

	public void artSet135initialise() {
		ARTSet135 = new boolean[artSetExtent];
		setBoolArray(ARTSet135, 0, artSetExtent, false);
		ARTSet135[69] = true;
	}

	public void artSet136initialise() {
		ARTSet136 = new boolean[artSetExtent];
		setBoolArray(ARTSet136, 0, artSetExtent, false);
		ARTSet136[25] = true;
	}

	public void artSet137initialise() {
		ARTSet137 = new boolean[artSetExtent];
		setBoolArray(ARTSet137, 0, artSetExtent, false);
		ARTSet137[25] = true;
		ARTSet137[26] = true;
		ARTSet137[27] = true;
		ARTSet137[28] = true;
		ARTSet137[29] = true;
		ARTSet137[30] = true;
		ARTSet137[31] = true;
		ARTSet137[32] = true;
		ARTSet137[33] = true;
		ARTSet137[34] = true;
		ARTSet137[42] = true;
		ARTSet137[43] = true;
		ARTSet137[44] = true;
		ARTSet137[45] = true;
		ARTSet137[46] = true;
		ARTSet137[47] = true;
		ARTSet137[72] = true;
	}

	public void artSet138initialise() {
		ARTSet138 = new boolean[artSetExtent];
		setBoolArray(ARTSet138, 0, artSetExtent, false);
		ARTSet138[25] = true;
		ARTSet138[26] = true;
		ARTSet138[27] = true;
		ARTSet138[28] = true;
		ARTSet138[29] = true;
		ARTSet138[30] = true;
		ARTSet138[31] = true;
		ARTSet138[32] = true;
		ARTSet138[33] = true;
		ARTSet138[34] = true;
		ARTSet138[42] = true;
		ARTSet138[43] = true;
		ARTSet138[44] = true;
		ARTSet138[45] = true;
		ARTSet138[46] = true;
		ARTSet138[47] = true;
	}

	public void artSet139initialise() {
		ARTSet139 = new boolean[artSetExtent];
		setBoolArray(ARTSet139, 0, artSetExtent, false);
		ARTSet139[0] = true;
		ARTSet139[1] = true;
		ARTSet139[2] = true;
		ARTSet139[3] = true;
		ARTSet139[4] = true;
		ARTSet139[5] = true;
		ARTSet139[6] = true;
		ARTSet139[7] = true;
		ARTSet139[8] = true;
		ARTSet139[9] = true;
		ARTSet139[10] = true;
		ARTSet139[11] = true;
		ARTSet139[12] = true;
		ARTSet139[13] = true;
		ARTSet139[14] = true;
		ARTSet139[15] = true;
		ARTSet139[16] = true;
		ARTSet139[17] = true;
		ARTSet139[18] = true;
		ARTSet139[19] = true;
		ARTSet139[20] = true;
		ARTSet139[21] = true;
		ARTSet139[22] = true;
		ARTSet139[23] = true;
		ARTSet139[24] = true;
		ARTSet139[25] = true;
		ARTSet139[26] = true;
		ARTSet139[27] = true;
		ARTSet139[28] = true;
		ARTSet139[29] = true;
		ARTSet139[30] = true;
		ARTSet139[31] = true;
		ARTSet139[32] = true;
		ARTSet139[33] = true;
		ARTSet139[34] = true;
		ARTSet139[35] = true;
		ARTSet139[36] = true;
		ARTSet139[37] = true;
		ARTSet139[38] = true;
		ARTSet139[39] = true;
		ARTSet139[40] = true;
		ARTSet139[41] = true;
		ARTSet139[42] = true;
		ARTSet139[43] = true;
		ARTSet139[44] = true;
		ARTSet139[45] = true;
		ARTSet139[46] = true;
		ARTSet139[47] = true;
		ARTSet139[48] = true;
		ARTSet139[49] = true;
		ARTSet139[50] = true;
		ARTSet139[51] = true;
		ARTSet139[52] = true;
		ARTSet139[53] = true;
		ARTSet139[54] = true;
		ARTSet139[55] = true;
		ARTSet139[56] = true;
		ARTSet139[57] = true;
		ARTSet139[58] = true;
		ARTSet139[59] = true;
		ARTSet139[60] = true;
		ARTSet139[61] = true;
		ARTSet139[62] = true;
		ARTSet139[63] = true;
		ARTSet139[64] = true;
		ARTSet139[65] = true;
		ARTSet139[66] = true;
		ARTSet139[67] = true;
		ARTSet139[68] = true;
		ARTSet139[69] = true;
		ARTSet139[70] = true;
		ARTSet139[71] = true;
		ARTSet139[72] = true;
		ARTSet139[73] = true;
		ARTSet139[74] = true;
		ARTSet139[75] = true;
		ARTSet139[76] = true;
		ARTSet139[77] = true;
		ARTSet139[78] = true;
		ARTSet139[79] = true;
		ARTSet139[80] = true;
		ARTSet139[81] = true;
		ARTSet139[82] = true;
		ARTSet139[83] = true;
		ARTSet139[84] = true;
		ARTSet139[85] = true;
		ARTSet139[86] = true;
		ARTSet139[87] = true;
		ARTSet139[88] = true;
		ARTSet139[89] = true;
		ARTSet139[90] = true;
		ARTSet139[91] = true;
		ARTSet139[92] = true;
		ARTSet139[93] = true;
		ARTSet139[94] = true;
		ARTSet139[95] = true;
		ARTSet139[96] = true;
		ARTSet139[97] = true;
		ARTSet139[98] = true;
		ARTSet139[99] = true;
		ARTSet139[100] = true;
		ARTSet139[101] = true;
		ARTSet139[102] = true;
		ARTSet139[103] = true;
	}

	public void artSet140initialise() {
		ARTSet140 = new boolean[artSetExtent];
		setBoolArray(ARTSet140, 0, artSetExtent, false);
		ARTSet140[80] = true;
	}

	public void artSet141initialise() {
		ARTSet141 = new boolean[artSetExtent];
		setBoolArray(ARTSet141, 0, artSetExtent, false);
		ARTSet141[45] = true;
		ARTSet141[47] = true;
		ARTSet141[77] = true;
		ARTSet141[79] = true;
	}

	public void artSet142initialise() {
		ARTSet142 = new boolean[artSetExtent];
		setBoolArray(ARTSet142, 0, artSetExtent, false);
		ARTSet142[79] = true;
	}

	public void artSet143initialise() {
		ARTSet143 = new boolean[artSetExtent];
		setBoolArray(ARTSet143, 0, artSetExtent, false);
		ARTSet143[46] = true;
		ARTSet143[78] = true;
	}

	public void artSet144initialise() {
		ARTSet144 = new boolean[artSetExtent];
		setBoolArray(ARTSet144, 0, artSetExtent, false);
		ARTSet144[78] = true;
	}

	public void artSet145initialise() {
		ARTSet145 = new boolean[artSetExtent];
		setBoolArray(ARTSet145, 0, artSetExtent, false);
		ARTSet145[25] = true;
		ARTSet145[26] = true;
		ARTSet145[27] = true;
		ARTSet145[28] = true;
		ARTSet145[29] = true;
		ARTSet145[30] = true;
		ARTSet145[31] = true;
		ARTSet145[32] = true;
		ARTSet145[33] = true;
		ARTSet145[34] = true;
		ARTSet145[72] = true;
	}

	public void artSet146initialise() {
		ARTSet146 = new boolean[artSetExtent];
		setBoolArray(ARTSet146, 0, artSetExtent, false);
		ARTSet146[25] = true;
		ARTSet146[26] = true;
		ARTSet146[27] = true;
		ARTSet146[28] = true;
		ARTSet146[29] = true;
		ARTSet146[30] = true;
		ARTSet146[31] = true;
		ARTSet146[32] = true;
		ARTSet146[33] = true;
		ARTSet146[34] = true;
	}

	public void artSet147initialise() {
		ARTSet147 = new boolean[artSetExtent];
		setBoolArray(ARTSet147, 0, artSetExtent, false);
		ARTSet147[77] = true;
	}

	public void artSet148initialise() {
		ARTSet148 = new boolean[artSetExtent];
		setBoolArray(ARTSet148, 0, artSetExtent, false);
		ARTSet148[1] = true;
		ARTSet148[2] = true;
		ARTSet148[3] = true;
		ARTSet148[4] = true;
		ARTSet148[6] = true;
		ARTSet148[7] = true;
		ARTSet148[9] = true;
		ARTSet148[10] = true;
		ARTSet148[11] = true;
		ARTSet148[12] = true;
		ARTSet148[13] = true;
		ARTSet148[14] = true;
		ARTSet148[15] = true;
		ARTSet148[17] = true;
		ARTSet148[18] = true;
		ARTSet148[19] = true;
		ARTSet148[20] = true;
		ARTSet148[21] = true;
		ARTSet148[22] = true;
		ARTSet148[23] = true;
		ARTSet148[24] = true;
		ARTSet148[25] = true;
		ARTSet148[26] = true;
		ARTSet148[27] = true;
		ARTSet148[28] = true;
		ARTSet148[29] = true;
		ARTSet148[30] = true;
		ARTSet148[31] = true;
		ARTSet148[32] = true;
		ARTSet148[33] = true;
		ARTSet148[34] = true;
		ARTSet148[35] = true;
		ARTSet148[36] = true;
		ARTSet148[37] = true;
		ARTSet148[38] = true;
		ARTSet148[39] = true;
		ARTSet148[40] = true;
		ARTSet148[41] = true;
		ARTSet148[42] = true;
		ARTSet148[43] = true;
		ARTSet148[44] = true;
		ARTSet148[45] = true;
		ARTSet148[46] = true;
		ARTSet148[47] = true;
		ARTSet148[48] = true;
		ARTSet148[49] = true;
		ARTSet148[50] = true;
		ARTSet148[51] = true;
		ARTSet148[52] = true;
		ARTSet148[53] = true;
		ARTSet148[54] = true;
		ARTSet148[55] = true;
		ARTSet148[56] = true;
		ARTSet148[57] = true;
		ARTSet148[58] = true;
		ARTSet148[59] = true;
		ARTSet148[60] = true;
		ARTSet148[61] = true;
		ARTSet148[62] = true;
		ARTSet148[63] = true;
		ARTSet148[64] = true;
		ARTSet148[65] = true;
		ARTSet148[66] = true;
		ARTSet148[67] = true;
		ARTSet148[68] = true;
		ARTSet148[69] = true;
		ARTSet148[70] = true;
		ARTSet148[71] = true;
		ARTSet148[72] = true;
		ARTSet148[73] = true;
		ARTSet148[74] = true;
		ARTSet148[75] = true;
		ARTSet148[76] = true;
		ARTSet148[77] = true;
		ARTSet148[78] = true;
		ARTSet148[79] = true;
		ARTSet148[80] = true;
		ARTSet148[81] = true;
		ARTSet148[82] = true;
		ARTSet148[83] = true;
		ARTSet148[84] = true;
		ARTSet148[85] = true;
		ARTSet148[86] = true;
		ARTSet148[87] = true;
		ARTSet148[88] = true;
		ARTSet148[89] = true;
		ARTSet148[90] = true;
		ARTSet148[91] = true;
		ARTSet148[92] = true;
		ARTSet148[93] = true;
		ARTSet148[94] = true;
		ARTSet148[95] = true;
		ARTSet148[96] = true;
		ARTSet148[97] = true;
		ARTSet148[98] = true;
		ARTSet148[99] = true;
		ARTSet148[100] = true;
		ARTSet148[101] = true;
		ARTSet148[102] = true;
		ARTSet148[103] = true;
	}

	public void artSet149initialise() {
		ARTSet149 = new boolean[artSetExtent];
		setBoolArray(ARTSet149, 0, artSetExtent, false);
		ARTSet149[76] = true;
	}

	public void artSet150initialise() {
		ARTSet150 = new boolean[artSetExtent];
		setBoolArray(ARTSet150, 0, artSetExtent, false);
		ARTSet150[75] = true;
	}

	public void artSet151initialise() {
		ARTSet151 = new boolean[artSetExtent];
		setBoolArray(ARTSet151, 0, artSetExtent, false);
		ARTSet151[57] = true;
		ARTSet151[89] = true;
	}

	public void artSet152initialise() {
		ARTSet152 = new boolean[artSetExtent];
		setBoolArray(ARTSet152, 0, artSetExtent, false);
		ARTSet152[25] = true;
		ARTSet152[26] = true;
		ARTSet152[72] = true;
	}

	public void artSet153initialise() {
		ARTSet153 = new boolean[artSetExtent];
		setBoolArray(ARTSet153, 0, artSetExtent, false);
		ARTSet153[25] = true;
		ARTSet153[26] = true;
	}

	public void artSet154initialise() {
		ARTSet154 = new boolean[artSetExtent];
		setBoolArray(ARTSet154, 0, artSetExtent, false);
		ARTSet154[74] = true;
	}

	public void artSet155initialise() {
		ARTSet155 = new boolean[artSetExtent];
		setBoolArray(ARTSet155, 0, artSetExtent, false);
		ARTSet155[4] = true;
		ARTSet155[5] = true;
		ARTSet155[7] = true;
		ARTSet155[8] = true;
		ARTSet155[9] = true;
	}

	public void artSet156initialise() {
		ARTSet156 = new boolean[artSetExtent];
		setBoolArray(ARTSet156, 0, artSetExtent, false);
		ARTSet156[11] = true;
	}

	public void artSet157initialise() {
		ARTSet157 = new boolean[artSetExtent];
		setBoolArray(ARTSet157, 0, artSetExtent, false);
		ARTSet157[17] = true;
		ARTSet157[18] = true;
		ARTSet157[21] = true;
		ARTSet157[23] = true;
		ARTSet157[36] = true;
		ARTSet157[68] = true;
		ARTSet157[70] = true;
		ARTSet157[100] = true;
		ARTSet157[102] = true;
	}

	public void artSet158initialise() {
		ARTSet158 = new boolean[artSetExtent];
		setBoolArray(ARTSet158, 0, artSetExtent, false);
		ARTSet158[10] = true;
		ARTSet158[14] = true;
		ARTSet158[15] = true;
		ARTSet158[19] = true;
		ARTSet158[20] = true;
		ARTSet158[22] = true;
		ARTSet158[24] = true;
		ARTSet158[35] = true;
		ARTSet158[37] = true;
		ARTSet158[38] = true;
		ARTSet158[39] = true;
		ARTSet158[40] = true;
		ARTSet158[71] = true;
		ARTSet158[101] = true;
		ARTSet158[103] = true;
	}

	public void artSet159initialise() {
		ARTSet159 = new boolean[artSetExtent];
		setBoolArray(ARTSet159, 0, artSetExtent, false);
		ARTSet159[87] = true;
	}

	public void artSet160initialise() {
		ARTSet160 = new boolean[artSetExtent];
		setBoolArray(ARTSet160, 0, artSetExtent, false);
		ARTSet160[20] = true;
		ARTSet160[22] = true;
		ARTSet160[25] = true;
		ARTSet160[26] = true;
		ARTSet160[27] = true;
		ARTSet160[28] = true;
		ARTSet160[29] = true;
		ARTSet160[30] = true;
		ARTSet160[31] = true;
		ARTSet160[32] = true;
		ARTSet160[33] = true;
		ARTSet160[34] = true;
	}

	public void artSet161initialise() {
		ARTSet161 = new boolean[artSetExtent];
		setBoolArray(ARTSet161, 0, artSetExtent, false);
		ARTSet161[42] = true;
		ARTSet161[43] = true;
		ARTSet161[44] = true;
		ARTSet161[45] = true;
		ARTSet161[46] = true;
		ARTSet161[47] = true;
		ARTSet161[48] = true;
		ARTSet161[49] = true;
		ARTSet161[50] = true;
		ARTSet161[51] = true;
		ARTSet161[52] = true;
		ARTSet161[53] = true;
		ARTSet161[54] = true;
		ARTSet161[55] = true;
		ARTSet161[56] = true;
		ARTSet161[57] = true;
		ARTSet161[58] = true;
		ARTSet161[59] = true;
		ARTSet161[60] = true;
		ARTSet161[61] = true;
		ARTSet161[62] = true;
		ARTSet161[63] = true;
		ARTSet161[64] = true;
		ARTSet161[65] = true;
		ARTSet161[66] = true;
		ARTSet161[67] = true;
		ARTSet161[72] = true;
		ARTSet161[74] = true;
		ARTSet161[75] = true;
		ARTSet161[76] = true;
		ARTSet161[77] = true;
		ARTSet161[78] = true;
		ARTSet161[79] = true;
		ARTSet161[80] = true;
		ARTSet161[81] = true;
		ARTSet161[82] = true;
		ARTSet161[83] = true;
		ARTSet161[84] = true;
		ARTSet161[85] = true;
		ARTSet161[86] = true;
		ARTSet161[87] = true;
		ARTSet161[88] = true;
		ARTSet161[89] = true;
		ARTSet161[90] = true;
		ARTSet161[91] = true;
		ARTSet161[92] = true;
		ARTSet161[93] = true;
		ARTSet161[94] = true;
		ARTSet161[95] = true;
		ARTSet161[96] = true;
		ARTSet161[97] = true;
		ARTSet161[98] = true;
		ARTSet161[99] = true;
	}

	public void artSet162initialise() {
		ARTSet162 = new boolean[artSetExtent];
		setBoolArray(ARTSet162, 0, artSetExtent, false);
		ARTSet162[23] = true;
		ARTSet162[25] = true;
		ARTSet162[26] = true;
		ARTSet162[27] = true;
		ARTSet162[28] = true;
		ARTSet162[29] = true;
		ARTSet162[30] = true;
		ARTSet162[31] = true;
		ARTSet162[32] = true;
		ARTSet162[33] = true;
		ARTSet162[34] = true;
	}

	public void artSet163initialise() {
		ARTSet163 = new boolean[artSetExtent];
		setBoolArray(ARTSet163, 0, artSetExtent, false);
		ARTSet163[24] = true;
	}

	public void artSet164initialise() {
		ARTSet164 = new boolean[artSetExtent];
		setBoolArray(ARTSet164, 0, artSetExtent, false);
		ARTSet164[16] = true;
	}

	public void artSet165initialise() {
		ARTSet165 = new boolean[artSetExtent];
		setBoolArray(ARTSet165, 0, artSetExtent, false);
		ARTSet165[79] = true;
		ARTSet165[93] = true;
	}

	public void artSet166initialise() {
		ARTSet166 = new boolean[artSetExtent];
		setBoolArray(ARTSet166, 0, artSetExtent, false);
		ARTSet166[0] = true;
		ARTSet166[4] = true;
		ARTSet166[5] = true;
		ARTSet166[7] = true;
		ARTSet166[8] = true;
		ARTSet166[9] = true;
		ARTSet166[10] = true;
		ARTSet166[11] = true;
		ARTSet166[14] = true;
		ARTSet166[15] = true;
		ARTSet166[16] = true;
		ARTSet166[17] = true;
		ARTSet166[18] = true;
		ARTSet166[19] = true;
		ARTSet166[20] = true;
		ARTSet166[21] = true;
		ARTSet166[22] = true;
		ARTSet166[23] = true;
		ARTSet166[24] = true;
		ARTSet166[25] = true;
		ARTSet166[26] = true;
		ARTSet166[27] = true;
		ARTSet166[28] = true;
		ARTSet166[29] = true;
		ARTSet166[30] = true;
		ARTSet166[31] = true;
		ARTSet166[32] = true;
		ARTSet166[33] = true;
		ARTSet166[34] = true;
		ARTSet166[35] = true;
		ARTSet166[36] = true;
		ARTSet166[37] = true;
		ARTSet166[38] = true;
		ARTSet166[39] = true;
		ARTSet166[40] = true;
		ARTSet166[42] = true;
		ARTSet166[43] = true;
		ARTSet166[44] = true;
		ARTSet166[45] = true;
		ARTSet166[46] = true;
		ARTSet166[47] = true;
		ARTSet166[48] = true;
		ARTSet166[49] = true;
		ARTSet166[50] = true;
		ARTSet166[51] = true;
		ARTSet166[52] = true;
		ARTSet166[53] = true;
		ARTSet166[54] = true;
		ARTSet166[55] = true;
		ARTSet166[56] = true;
		ARTSet166[57] = true;
		ARTSet166[58] = true;
		ARTSet166[59] = true;
		ARTSet166[60] = true;
		ARTSet166[61] = true;
		ARTSet166[62] = true;
		ARTSet166[63] = true;
		ARTSet166[64] = true;
		ARTSet166[65] = true;
		ARTSet166[66] = true;
		ARTSet166[67] = true;
		ARTSet166[68] = true;
		ARTSet166[70] = true;
		ARTSet166[71] = true;
		ARTSet166[72] = true;
		ARTSet166[74] = true;
		ARTSet166[75] = true;
		ARTSet166[76] = true;
		ARTSet166[77] = true;
		ARTSet166[78] = true;
		ARTSet166[79] = true;
		ARTSet166[80] = true;
		ARTSet166[81] = true;
		ARTSet166[82] = true;
		ARTSet166[83] = true;
		ARTSet166[84] = true;
		ARTSet166[85] = true;
		ARTSet166[86] = true;
		ARTSet166[87] = true;
		ARTSet166[88] = true;
		ARTSet166[89] = true;
		ARTSet166[90] = true;
		ARTSet166[91] = true;
		ARTSet166[92] = true;
		ARTSet166[93] = true;
		ARTSet166[94] = true;
		ARTSet166[95] = true;
		ARTSet166[96] = true;
		ARTSet166[97] = true;
		ARTSet166[98] = true;
		ARTSet166[99] = true;
		ARTSet166[100] = true;
		ARTSet166[101] = true;
		ARTSet166[102] = true;
		ARTSet166[103] = true;
	}

	public void setInitialise() {
		artSet1initialise();
		artSet2initialise();
		artSet4initialise();
		artSet7initialise();
		artSet8initialise();
		artSet17initialise();
		artSet20initialise();
		artSet21initialise();
		artSet22initialise();
		artSet27initialise();
		artSet28initialise();
		artSet29initialise();
		artSet30initialise();
		artSet31initialise();
		artSet32initialise();
		artSet33initialise();
		artSet34initialise();
		artSet35initialise();
		artSet36initialise();
		artSet37initialise();
		artSet38initialise();
		artSet39initialise();
		artSet40initialise();
		artSet41initialise();
		artSet42initialise();
		artSet43initialise();
		artSet44initialise();
		artSet45initialise();
		artSet46initialise();
		artSet47initialise();
		artSet48initialise();
		artSet49initialise();
		artSet50initialise();
		artSet51initialise();
		artSet52initialise();
		artSet53initialise();
		artSet54initialise();
		artSet55initialise();
		artSet56initialise();
		artSet57initialise();
		artSet58initialise();
		artSet59initialise();
		artSet60initialise();
		artSet61initialise();
		artSet62initialise();
		artSet63initialise();
		artSet64initialise();
		artSet65initialise();
		artSet66initialise();
		artSet67initialise();
		artSet68initialise();
		artSet69initialise();
		artSet70initialise();
		artSet71initialise();
		artSet72initialise();
		artSet73initialise();
		artSet74initialise();
		artSet75initialise();
		artSet76initialise();
		artSet77initialise();
		artSet78initialise();
		artSet79initialise();
		artSet80initialise();
		artSet81initialise();
		artSet82initialise();
		artSet83initialise();
		artSet84initialise();
		artSet85initialise();
		artSet86initialise();
		artSet87initialise();
		artSet88initialise();
		artSet89initialise();
		artSet90initialise();
		artSet91initialise();
		artSet92initialise();
		artSet93initialise();
		artSet94initialise();
		artSet95initialise();
		artSet96initialise();
		artSet97initialise();
		artSet98initialise();
		artSet99initialise();
		artSet100initialise();
		artSet101initialise();
		artSet102initialise();
		artSet103initialise();
		artSet104initialise();
		artSet105initialise();
		artSet106initialise();
		artSet108initialise();
		artSet109initialise();
		artSet110initialise();
		artSet111initialise();
		artSet112initialise();
		artSet114initialise();
		artSet115initialise();
		artSet116initialise();
		artSet117initialise();
		artSet118initialise();
		artSet119initialise();
		artSet120initialise();
		artSet121initialise();
		artSet122initialise();
		artSet123initialise();
		artSet124initialise();
		artSet126initialise();
		artSet127initialise();
		artSet128initialise();
		artSet129initialise();
		artSet131initialise();
		artSet132initialise();
		artSet133initialise();
		artSet134initialise();
		artSet135initialise();
		artSet136initialise();
		artSet137initialise();
		artSet138initialise();
		artSet139initialise();
		artSet140initialise();
		artSet141initialise();
		artSet142initialise();
		artSet143initialise();
		artSet144initialise();
		artSet145initialise();
		artSet146initialise();
		artSet147initialise();
		artSet148initialise();
		artSet149initialise();
		artSet150initialise();
		artSet151initialise();
		artSet152initialise();
		artSet153initialise();
		artSet154initialise();
		artSet155initialise();
		artSet156initialise();
		artSet157initialise();
		artSet158initialise();
		artSet159initialise();
		artSet160initialise();
		artSet161initialise();
		artSet162initialise();
		artSet163initialise();
		artSet164initialise();
		artSet165initialise();
		artSet166initialise();
	}

	public void artTableInitialiser_105() {
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL] = "JavaLexerImp.BOOL ";
		artLabelStrings[ART_L_JavaLexerImp_BOOL] = "BOOL";
		artKindOfs[ART_L_JavaLexerImp_BOOL] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3431] = "JavaLexerImp.BOOL ::= . `t`r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3431] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3431] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3431] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3431] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3432] = "JavaLexerImp.BOOL ::= `t`r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3432] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3432] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3432] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3433] = "JavaLexerImp.BOOL ::= `t. `r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3433] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3433] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3433] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_BOOL_3433] = true;
		popD[ART_L_JavaLexerImp_BOOL_3433] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3434] = "JavaLexerImp.BOOL ::= `t`r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3434] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3434] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3434] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3435] = "JavaLexerImp.BOOL ::= `t`r. `u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3435] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3435] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3435] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3435] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3436] = "JavaLexerImp.BOOL ::= `t`r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3436] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3436] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3436] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3437] = "JavaLexerImp.BOOL ::= `t`r`u. `e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3437] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3437] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3437] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3437] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3438] = "JavaLexerImp.BOOL ::= `t`r`u`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3438] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3438] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3438] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3439] = "JavaLexerImp.BOOL ::= `t`r`u`e. ";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3439] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3439] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3439] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_BOOL_3439] = true;
		eoR_pL[ART_L_JavaLexerImp_BOOL_3439] = true;
		popD[ART_L_JavaLexerImp_BOOL_3439] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3441] = "JavaLexerImp.BOOL ::= . `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3441] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3441] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3441] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3441] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3442] = "JavaLexerImp.BOOL ::= `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3442] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3442] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3442] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3443] = "JavaLexerImp.BOOL ::= `f. `a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3443] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3443] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3443] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_BOOL_3443] = true;
		popD[ART_L_JavaLexerImp_BOOL_3443] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3444] = "JavaLexerImp.BOOL ::= `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3444] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3444] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3444] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3445] = "JavaLexerImp.BOOL ::= `f`a. `l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3445] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3445] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3445] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3445] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3446] = "JavaLexerImp.BOOL ::= `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3446] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3446] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3446] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3447] = "JavaLexerImp.BOOL ::= `f`a`l. `s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3447] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3447] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3447] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3447] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3448] = "JavaLexerImp.BOOL ::= `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3448] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3448] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3448] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3449] = "JavaLexerImp.BOOL ::= `f`a`l`s. `e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3449] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3449] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3449] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_BOOL_3449] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3450] = "JavaLexerImp.BOOL ::= `f`a`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3450] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3450] = ART_L_JavaLexerImp_BOOL;
		popD[ART_L_JavaLexerImp_BOOL_3450] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_BOOL_3451] = "JavaLexerImp.BOOL ::= `f`a`l`s`e. ";
		artLabelStrings[ART_L_JavaLexerImp_BOOL_3451] = "";
		lhsL[ART_L_JavaLexerImp_BOOL_3451] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_BOOL_3451] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_BOOL_3451] = true;
		eoR_pL[ART_L_JavaLexerImp_BOOL_3451] = true;
		popD[ART_L_JavaLexerImp_BOOL_3451] = true;
	}

	public void artTableInitialiser_106() {
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR] = "JavaLexerImp.CHAR ";
		artLabelStrings[ART_L_JavaLexerImp_CHAR] = "CHAR";
		artKindOfs[ART_L_JavaLexerImp_CHAR] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3454] = "JavaLexerImp.CHAR ::= . `\\\\'JavaLexerImp.character `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3454] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3454] = ART_L_JavaLexerImp_CHAR;
		artKindOfs[ART_L_JavaLexerImp_CHAR_3454] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3455] = "JavaLexerImp.CHAR ::= `\\\\'JavaLexerImp.character `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3455] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3455] = ART_L_JavaLexerImp_CHAR;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3456] = "JavaLexerImp.CHAR ::= `\\\\'. JavaLexerImp.character `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3456] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3456] = ART_L_JavaLexerImp_CHAR;
		artKindOfs[ART_L_JavaLexerImp_CHAR_3456] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_CHAR_3456] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3458] = "JavaLexerImp.CHAR ::= `\\\\'JavaLexerImp.character . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3458] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3458] = ART_L_JavaLexerImp_CHAR;
		artSlotInstanceOfs[ART_L_JavaLexerImp_CHAR_3458] = ART_L_JavaLexerImp_character;
		artKindOfs[ART_L_JavaLexerImp_CHAR_3458] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_CHAR_3458] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3459] = "JavaLexerImp.CHAR ::= `\\\\'JavaLexerImp.character `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3459] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3459] = ART_L_JavaLexerImp_CHAR;
		popD[ART_L_JavaLexerImp_CHAR_3459] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_CHAR_3460] = "JavaLexerImp.CHAR ::= `\\\\'JavaLexerImp.character `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_CHAR_3460] = "";
		lhsL[ART_L_JavaLexerImp_CHAR_3460] = ART_L_JavaLexerImp_CHAR;
		artKindOfs[ART_L_JavaLexerImp_CHAR_3460] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_CHAR_3460] = true;
		eoR_pL[ART_L_JavaLexerImp_CHAR_3460] = true;
		popD[ART_L_JavaLexerImp_CHAR_3460] = true;
	}

	public void artTableInitialiser_107() {
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT] = "JavaLexerImp.COMMENT ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT] = "COMMENT";
		artKindOfs[ART_L_JavaLexerImp_COMMENT] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1010] = "JavaLexerImp.COMMENT ::= . `/`/( JavaLexerImp.input_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1010] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1010] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1010] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1011] = "JavaLexerImp.COMMENT ::= `/`/( JavaLexerImp.input_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1011] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1011] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1012] = "JavaLexerImp.COMMENT ::= `/. `/( JavaLexerImp.input_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1012] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1012] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1012] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_COMMENT_1012] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1013] = "JavaLexerImp.COMMENT ::= `/`/( JavaLexerImp.input_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1013] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1013] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1014] = "JavaLexerImp.COMMENT ::= `/`/. ( JavaLexerImp.input_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1014] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1014] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1014] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_COMMENT_1015] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1019] = "JavaLexerImp.COMMENT ::= `/`/( JavaLexerImp.input_character . )* ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1019] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1019] = ART_L_JavaLexerImp_COMMENT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_COMMENT_1019] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1019] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_COMMENT_1019] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1020] = "JavaLexerImp.COMMENT ::= `/`/( JavaLexerImp.input_character )* . ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1020] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1020] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1020] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_COMMENT_1020] = true;
		eoR_pL[ART_L_JavaLexerImp_COMMENT_1020] = true;
		popD[ART_L_JavaLexerImp_COMMENT_1020] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1022] = "JavaLexerImp.COMMENT ::= . `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1022] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1022] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1022] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1023] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1023] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1023] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1024] = "JavaLexerImp.COMMENT ::= `/. `*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1024] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1024] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1024] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_COMMENT_1024] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1025] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1025] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1025] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1026] = "JavaLexerImp.COMMENT ::= `/`*. ( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1026] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1026] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1026] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_COMMENT_1027] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1028] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1028] = "";
		lhsL[ART_A_JavaLexerImp_COMMENT_1028] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1030] = "JavaLexerImp.COMMENT ::= `/`*( . JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1030] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1030] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1030] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1032] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk . | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1032] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1032] = ART_L_JavaLexerImp_COMMENT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_COMMENT_1032] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1032] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_COMMENT_1032] = ART_L_JavaLexerImp_COMMENT_1042;
		aL[ART_L_JavaLexerImp_COMMENT_1032] = ART_L_JavaLexerImp_COMMENT_1042;
		popD[ART_L_JavaLexerImp_COMMENT_1032] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1034] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | . ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1034] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1034] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1034] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_COMMENT_1035] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1038] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1038] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1038] = ART_L_JavaLexerImp_COMMENT;
		popD[ART_L_JavaLexerImp_COMMENT_1038] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1039] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*. )+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1039] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1039] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1039] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_COMMENT_1039] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1040] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ . JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1040] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1040] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1040] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1042] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash . )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1042] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1042] = ART_L_JavaLexerImp_COMMENT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_COMMENT_1042] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1042] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_COMMENT_1042] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1043] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* . ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1043] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1043] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1043] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_COMMENT_1044] = ART_L_JavaLexerImp_COMMENT;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1047] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1047] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1047] = ART_L_JavaLexerImp_COMMENT;
		popD[ART_L_JavaLexerImp_COMMENT_1047] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1048] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*. )+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1048] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1048] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1048] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_COMMENT_1048] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1049] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ . `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1049] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1049] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1049] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_COMMENT_1049] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1050] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1050] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1050] = ART_L_JavaLexerImp_COMMENT;
		popD[ART_L_JavaLexerImp_COMMENT_1050] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_COMMENT_1051] = "JavaLexerImp.COMMENT ::= `/`*( JavaLexerImp.not_asterisk | ( `*)+ JavaLexerImp.not_slash )* ( `*)+ `/. ";
		artLabelStrings[ART_L_JavaLexerImp_COMMENT_1051] = "";
		lhsL[ART_L_JavaLexerImp_COMMENT_1051] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_COMMENT_1051] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_COMMENT_1051] = true;
		eoR_pL[ART_L_JavaLexerImp_COMMENT_1051] = true;
		popD[ART_L_JavaLexerImp_COMMENT_1051] = true;
	}

	public void artTableInitialiser_108() {
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT] = "JavaLexerImp.FLOAT ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT] = "FLOAT";
		artKindOfs[ART_L_JavaLexerImp_FLOAT] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3219] = "JavaLexerImp.FLOAT ::= . JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3219] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3219] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3219] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3221] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits . `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3221] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3221] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3221] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3221] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_FLOAT_3221] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3222] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3222] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3222] = ART_L_JavaLexerImp_FLOAT;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3223] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.. ( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3223] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3223] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3223] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3228] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits . )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3228] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3228] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3228] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3228] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3228] = ART_L_JavaLexerImp_FLOAT_3229;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3228] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3228] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3229] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? . ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3229] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3229] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3229] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3234] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part . )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3234] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3234] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3234] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3234] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3234] = ART_L_JavaLexerImp_FLOAT_3235;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3234] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3234] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3235] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? . ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3235] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3235] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3235] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3240] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix . )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3240] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3240] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3240] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3240] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3240] = ART_L_JavaLexerImp_FLOAT_3241;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3240] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3240] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3240] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3241] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits `.( JavaLexerImp.digits )? ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? . ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3241] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3241] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3241] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_FLOAT_3241] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3241] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3241] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3243] = "JavaLexerImp.FLOAT ::= . `.JavaLexerImp.digits ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3243] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3243] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3243] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3244] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3244] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3244] = ART_L_JavaLexerImp_FLOAT;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3245] = "JavaLexerImp.FLOAT ::= `.. JavaLexerImp.digits ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3245] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3245] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3245] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_FLOAT_3245] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3247] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits . ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3247] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3247] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3247] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3247] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3252] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits ( JavaLexerImp.exponent_part . )? ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3252] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3252] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3252] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3252] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3252] = ART_L_JavaLexerImp_FLOAT_3253;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3252] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3252] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3253] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits ( JavaLexerImp.exponent_part )? . ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3253] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3253] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3253] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3258] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix . )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3258] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3258] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3258] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3258] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3258] = ART_L_JavaLexerImp_FLOAT_3259;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3258] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3258] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3258] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3259] = "JavaLexerImp.FLOAT ::= `.JavaLexerImp.digits ( JavaLexerImp.exponent_part )? ( JavaLexerImp.float_type_suffix )? . ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3259] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3259] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3259] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_FLOAT_3259] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3259] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3259] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3261] = "JavaLexerImp.FLOAT ::= . JavaLexerImp.digits JavaLexerImp.exponent_part ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3261] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3261] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3261] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3263] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits . JavaLexerImp.exponent_part ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3263] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3263] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3263] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3263] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_FLOAT_3263] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3265] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits JavaLexerImp.exponent_part . ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3265] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3265] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3265] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3265] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3270] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits JavaLexerImp.exponent_part ( JavaLexerImp.float_type_suffix . )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3270] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3270] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3270] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3270] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3270] = ART_L_JavaLexerImp_FLOAT_3271;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3270] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3270] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3270] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3271] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits JavaLexerImp.exponent_part ( JavaLexerImp.float_type_suffix )? . ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3271] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3271] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3271] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_FLOAT_3271] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3271] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3271] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3273] = "JavaLexerImp.FLOAT ::= . JavaLexerImp.digits ( JavaLexerImp.exponent_part )? JavaLexerImp.float_type_suffix ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3273] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3273] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3273] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3275] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits . ( JavaLexerImp.exponent_part )? JavaLexerImp.float_type_suffix ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3275] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3275] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3275] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3275] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_FLOAT_3275] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3280] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits ( JavaLexerImp.exponent_part . )? JavaLexerImp.float_type_suffix ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3280] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3280] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3280] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3280] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3280] = ART_L_JavaLexerImp_FLOAT_3281;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3280] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3280] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3281] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits ( JavaLexerImp.exponent_part )? . JavaLexerImp.float_type_suffix ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3281] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3281] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3281] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3283] = "JavaLexerImp.FLOAT ::= JavaLexerImp.digits ( JavaLexerImp.exponent_part )? JavaLexerImp.float_type_suffix . ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3283] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3283] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3283] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3283] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_FLOAT_3283] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3283] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3283] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3285] = "JavaLexerImp.FLOAT ::= . JavaLexerImp.hex_significand JavaLexerImp.binary_exponent ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3285] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3285] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3285] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3287] = "JavaLexerImp.FLOAT ::= JavaLexerImp.hex_significand . JavaLexerImp.binary_exponent ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3287] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3287] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3287] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3287] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_FLOAT_3287] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3289] = "JavaLexerImp.FLOAT ::= JavaLexerImp.hex_significand JavaLexerImp.binary_exponent . ( JavaLexerImp.float_type_suffix )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3289] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3289] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3289] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3289] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3294] = "JavaLexerImp.FLOAT ::= JavaLexerImp.hex_significand JavaLexerImp.binary_exponent ( JavaLexerImp.float_type_suffix . )? ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3294] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3294] = ART_L_JavaLexerImp_FLOAT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_FLOAT_3294] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3294] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_FLOAT_3294] = ART_L_JavaLexerImp_FLOAT_3295;
		eoOPL[ART_L_JavaLexerImp_FLOAT_3294] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3294] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3294] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_FLOAT_3295] = "JavaLexerImp.FLOAT ::= JavaLexerImp.hex_significand JavaLexerImp.binary_exponent ( JavaLexerImp.float_type_suffix )? . ";
		artLabelStrings[ART_L_JavaLexerImp_FLOAT_3295] = "";
		lhsL[ART_L_JavaLexerImp_FLOAT_3295] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_FLOAT_3295] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_FLOAT_3295] = true;
		eoR_pL[ART_L_JavaLexerImp_FLOAT_3295] = true;
		popD[ART_L_JavaLexerImp_FLOAT_3295] = true;
	}

	public void artTableInitialiser_109() {
		artLabelInternalStrings[ART_L_JavaLexerImp_ID] = "JavaLexerImp.ID ";
		artLabelStrings[ART_L_JavaLexerImp_ID] = "ID";
		artKindOfs[ART_L_JavaLexerImp_ID] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2286] = "JavaLexerImp.ID ::= . ( JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2286] = "";
		lhsL[ART_L_JavaLexerImp_ID_2286] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2286] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2288] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2288] = "";
		lhsL[ART_A_JavaLexerImp_ID_2288] = ART_L_JavaLexerImp_ID;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2290] = "JavaLexerImp.ID ::= ( . JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2290] = "";
		lhsL[ART_L_JavaLexerImp_ID_2290] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2290] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2292] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character . | `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2292] = "";
		lhsL[ART_L_JavaLexerImp_ID_2292] = ART_L_JavaLexerImp_ID;
		artSlotInstanceOfs[ART_L_JavaLexerImp_ID_2292] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_ID_2292] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_ID_2292] = ART_L_JavaLexerImp_ID_2297;
		aL[ART_L_JavaLexerImp_ID_2292] = ART_L_JavaLexerImp_ID_2296;
		eoOPL[ART_L_JavaLexerImp_ID_2292] = true;
		popD[ART_L_JavaLexerImp_ID_2292] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2294] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | . `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2294] = "";
		lhsL[ART_L_JavaLexerImp_ID_2294] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2294] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_ID_2294] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2295] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2295] = "";
		lhsL[ART_L_JavaLexerImp_ID_2295] = ART_L_JavaLexerImp_ID;
		popD[ART_L_JavaLexerImp_ID_2295] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2296] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_. ) ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2296] = "";
		lhsL[ART_L_JavaLexerImp_ID_2296] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2296] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_ID_2296] = ART_L_JavaLexerImp_ID_2297;
		eoOPL[ART_L_JavaLexerImp_ID_2296] = true;
		popD[ART_L_JavaLexerImp_ID_2296] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2297] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_) . ( JavaLexerImp.identifier_part_character )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2297] = "";
		lhsL[ART_L_JavaLexerImp_ID_2297] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2297] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_ID_2298] = ART_L_JavaLexerImp_ID;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2302] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character . )* ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2302] = "";
		lhsL[ART_L_JavaLexerImp_ID_2302] = ART_L_JavaLexerImp_ID;
		artSlotInstanceOfs[ART_L_JavaLexerImp_ID_2302] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_ID_2302] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_ID_2302] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_ID_2303] = "JavaLexerImp.ID ::= ( JavaLexerImp.letter_character | `_) ( JavaLexerImp.identifier_part_character )* . ";
		artLabelStrings[ART_L_JavaLexerImp_ID_2303] = "";
		lhsL[ART_L_JavaLexerImp_ID_2303] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_ID_2303] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_ID_2303] = true;
		eoR_pL[ART_L_JavaLexerImp_ID_2303] = true;
		popD[ART_L_JavaLexerImp_ID_2303] = true;
	}

	public void artTableInitialiser_110() {
		artLabelInternalStrings[ART_L_JavaLexerImp_INT] = "JavaLexerImp.INT ";
		artLabelStrings[ART_L_JavaLexerImp_INT] = "INT";
		artKindOfs[ART_L_JavaLexerImp_INT] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2809] = "JavaLexerImp.INT ::= . ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2809] = "";
		lhsL[ART_L_JavaLexerImp_INT_2809] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2809] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2811] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2811] = "";
		lhsL[ART_A_JavaLexerImp_INT_2811] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2813] = "JavaLexerImp.INT ::= ( . `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2813] = "";
		lhsL[ART_L_JavaLexerImp_INT_2813] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2813] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2813] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2814] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2814] = "";
		lhsL[ART_L_JavaLexerImp_INT_2814] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2814] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2815] = "JavaLexerImp.INT ::= ( `-. | `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2815] = "";
		lhsL[ART_L_JavaLexerImp_INT_2815] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2815] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2815] = ART_L_JavaLexerImp_INT_2820;
		aL[ART_L_JavaLexerImp_INT_2815] = ART_L_JavaLexerImp_INT_2819;
		eoOPL[ART_L_JavaLexerImp_INT_2815] = true;
		popD[ART_L_JavaLexerImp_INT_2815] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2817] = "JavaLexerImp.INT ::= ( `-| . `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2817] = "";
		lhsL[ART_L_JavaLexerImp_INT_2817] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2817] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2817] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2818] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2818] = "";
		lhsL[ART_L_JavaLexerImp_INT_2818] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2818] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2819] = "JavaLexerImp.INT ::= ( `-| `+. )? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2819] = "";
		lhsL[ART_L_JavaLexerImp_INT_2819] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2819] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2819] = ART_L_JavaLexerImp_INT_2820;
		eoOPL[ART_L_JavaLexerImp_INT_2819] = true;
		popD[ART_L_JavaLexerImp_INT_2819] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2820] = "JavaLexerImp.INT ::= ( `-| `+)? . ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2820] = "";
		lhsL[ART_L_JavaLexerImp_INT_2820] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2820] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2822] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2822] = "";
		lhsL[ART_A_JavaLexerImp_INT_2822] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2824] = "JavaLexerImp.INT ::= ( `-| `+)? ( . `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2824] = "";
		lhsL[ART_L_JavaLexerImp_INT_2824] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2824] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2825] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2825] = "";
		lhsL[ART_L_JavaLexerImp_INT_2825] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2826] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0. ( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2826] = "";
		lhsL[ART_L_JavaLexerImp_INT_2826] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2826] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2828] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2828] = "";
		lhsL[ART_A_JavaLexerImp_INT_2828] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2830] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( . `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2830] = "";
		lhsL[ART_L_JavaLexerImp_INT_2830] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2830] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2830] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2831] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2831] = "";
		lhsL[ART_L_JavaLexerImp_INT_2831] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2831] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2832] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x. | `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2832] = "";
		lhsL[ART_L_JavaLexerImp_INT_2832] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2832] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2832] = ART_L_JavaLexerImp_INT_2837;
		aL[ART_L_JavaLexerImp_INT_2832] = ART_L_JavaLexerImp_INT_2836;
		eoOPL[ART_L_JavaLexerImp_INT_2832] = true;
		popD[ART_L_JavaLexerImp_INT_2832] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2834] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| . `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2834] = "";
		lhsL[ART_L_JavaLexerImp_INT_2834] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2834] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2834] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2835] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2835] = "";
		lhsL[ART_L_JavaLexerImp_INT_2835] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2835] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2836] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X. ) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2836] = "";
		lhsL[ART_L_JavaLexerImp_INT_2836] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2836] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2836] = ART_L_JavaLexerImp_INT_2837;
		eoOPL[ART_L_JavaLexerImp_INT_2836] = true;
		popD[ART_L_JavaLexerImp_INT_2836] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2837] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) . JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2837] = "";
		lhsL[ART_L_JavaLexerImp_INT_2837] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2837] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2839] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits . | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2839] = "";
		lhsL[ART_L_JavaLexerImp_INT_2839] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2839] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2839] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2839] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2839] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2839] = true;
		popD[ART_L_JavaLexerImp_INT_2839] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2841] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | . `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2841] = "";
		lhsL[ART_L_JavaLexerImp_INT_2841] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2841] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2841] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2842] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2842] = "";
		lhsL[ART_L_JavaLexerImp_INT_2842] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2842] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2843] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0. | JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2843] = "";
		lhsL[ART_L_JavaLexerImp_INT_2843] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2843] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2843] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2843] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2843] = true;
		popD[ART_L_JavaLexerImp_INT_2843] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2845] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| . JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2845] = "";
		lhsL[ART_L_JavaLexerImp_INT_2845] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2845] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2847] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit . ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2847] = "";
		lhsL[ART_L_JavaLexerImp_INT_2847] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2847] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_INT_2847] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2852] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits . )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2852] = "";
		lhsL[ART_L_JavaLexerImp_INT_2852] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2852] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2852] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2852] = ART_L_JavaLexerImp_INT_2893;
		eoOPL[ART_L_JavaLexerImp_INT_2852] = true;
		popD[ART_L_JavaLexerImp_INT_2852] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2853] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? . | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2853] = "";
		lhsL[ART_L_JavaLexerImp_INT_2853] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2853] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2853] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2853] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2853] = true;
		popD[ART_L_JavaLexerImp_INT_2853] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2855] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | . JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2855] = "";
		lhsL[ART_L_JavaLexerImp_INT_2855] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2855] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2857] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit . JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2857] = "";
		lhsL[ART_L_JavaLexerImp_INT_2857] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2857] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_INT_2857] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2859] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores . JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2859] = "";
		lhsL[ART_L_JavaLexerImp_INT_2859] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2859] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_INT_2859] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2861] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits . | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2861] = "";
		lhsL[ART_L_JavaLexerImp_INT_2861] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2861] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2861] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2861] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2861] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2861] = true;
		popD[ART_L_JavaLexerImp_INT_2861] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2863] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | . `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2863] = "";
		lhsL[ART_L_JavaLexerImp_INT_2863] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2863] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2864] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2864] = "";
		lhsL[ART_L_JavaLexerImp_INT_2864] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2865] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0. JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2865] = "";
		lhsL[ART_L_JavaLexerImp_INT_2865] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2865] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2867] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits . | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2867] = "";
		lhsL[ART_L_JavaLexerImp_INT_2867] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2867] = ART_L_JavaLexerImp_octal_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2867] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2867] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2867] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2867] = true;
		popD[ART_L_JavaLexerImp_INT_2867] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2869] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | . `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2869] = "";
		lhsL[ART_L_JavaLexerImp_INT_2869] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2869] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2870] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2870] = "";
		lhsL[ART_L_JavaLexerImp_INT_2870] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2871] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0. JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2871] = "";
		lhsL[ART_L_JavaLexerImp_INT_2871] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2871] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2873] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores . JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2873] = "";
		lhsL[ART_L_JavaLexerImp_INT_2873] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2873] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_INT_2873] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2875] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits . | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2875] = "";
		lhsL[ART_L_JavaLexerImp_INT_2875] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2875] = ART_L_JavaLexerImp_octal_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2875] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2875] = ART_L_JavaLexerImp_INT_2893;
		aL[ART_L_JavaLexerImp_INT_2875] = ART_L_JavaLexerImp_INT_2892;
		eoOPL[ART_L_JavaLexerImp_INT_2875] = true;
		popD[ART_L_JavaLexerImp_INT_2875] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2877] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | . `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2877] = "";
		lhsL[ART_L_JavaLexerImp_INT_2877] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2877] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2878] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2878] = "";
		lhsL[ART_L_JavaLexerImp_INT_2878] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2879] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0. ( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2879] = "";
		lhsL[ART_L_JavaLexerImp_INT_2879] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2879] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2881] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2881] = "";
		lhsL[ART_A_JavaLexerImp_INT_2881] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2883] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( . `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2883] = "";
		lhsL[ART_L_JavaLexerImp_INT_2883] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2883] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2883] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2884] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2884] = "";
		lhsL[ART_L_JavaLexerImp_INT_2884] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2884] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2885] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b. | `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2885] = "";
		lhsL[ART_L_JavaLexerImp_INT_2885] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2885] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2885] = ART_L_JavaLexerImp_INT_2890;
		aL[ART_L_JavaLexerImp_INT_2885] = ART_L_JavaLexerImp_INT_2889;
		eoOPL[ART_L_JavaLexerImp_INT_2885] = true;
		popD[ART_L_JavaLexerImp_INT_2885] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2887] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| . `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2887] = "";
		lhsL[ART_L_JavaLexerImp_INT_2887] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2887] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2887] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2888] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2888] = "";
		lhsL[ART_L_JavaLexerImp_INT_2888] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2888] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2889] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B. ) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2889] = "";
		lhsL[ART_L_JavaLexerImp_INT_2889] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2889] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2889] = ART_L_JavaLexerImp_INT_2890;
		eoOPL[ART_L_JavaLexerImp_INT_2889] = true;
		popD[ART_L_JavaLexerImp_INT_2889] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2890] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) . JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2890] = "";
		lhsL[ART_L_JavaLexerImp_INT_2890] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2890] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2892] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits . ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2892] = "";
		lhsL[ART_L_JavaLexerImp_INT_2892] = ART_L_JavaLexerImp_INT;
		artSlotInstanceOfs[ART_L_JavaLexerImp_INT_2892] = ART_L_JavaLexerImp_binary_digits;
		artKindOfs[ART_L_JavaLexerImp_INT_2892] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2892] = ART_L_JavaLexerImp_INT_2893;
		eoOPL[ART_L_JavaLexerImp_INT_2892] = true;
		popD[ART_L_JavaLexerImp_INT_2892] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2893] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) . ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2893] = "";
		lhsL[ART_L_JavaLexerImp_INT_2893] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2893] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2895] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2895] = "";
		lhsL[ART_A_JavaLexerImp_INT_2895] = ART_L_JavaLexerImp_INT;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2897] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( . `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2897] = "";
		lhsL[ART_L_JavaLexerImp_INT_2897] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2897] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2897] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2898] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2898] = "";
		lhsL[ART_L_JavaLexerImp_INT_2898] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2898] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2899] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l. | `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2899] = "";
		lhsL[ART_L_JavaLexerImp_INT_2899] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2899] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2899] = ART_L_JavaLexerImp_INT_2904;
		aL[ART_L_JavaLexerImp_INT_2899] = ART_L_JavaLexerImp_INT_2903;
		eoOPL[ART_L_JavaLexerImp_INT_2899] = true;
		eoR_pL[ART_L_JavaLexerImp_INT_2899] = true;
		popD[ART_L_JavaLexerImp_INT_2899] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2901] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| . `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2901] = "";
		lhsL[ART_L_JavaLexerImp_INT_2901] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2901] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_INT_2901] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2902] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2902] = "";
		lhsL[ART_L_JavaLexerImp_INT_2902] = ART_L_JavaLexerImp_INT;
		popD[ART_L_JavaLexerImp_INT_2902] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2903] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L. )? ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2903] = "";
		lhsL[ART_L_JavaLexerImp_INT_2903] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2903] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_INT_2903] = ART_L_JavaLexerImp_INT_2904;
		eoOPL[ART_L_JavaLexerImp_INT_2903] = true;
		eoR_pL[ART_L_JavaLexerImp_INT_2903] = true;
		popD[ART_L_JavaLexerImp_INT_2903] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_INT_2904] = "JavaLexerImp.INT ::= ( `-| `+)? ( `0( `x| `X) JavaLexerImp.hex_digits | `0| JavaLexerImp.non_zero_digit ( JavaLexerImp.digits )? | JavaLexerImp.non_zero_digit JavaLexerImp.underscores JavaLexerImp.digits | `0JavaLexerImp.octal_digits | `0JavaLexerImp.underscores JavaLexerImp.octal_digits | `0( `b| `B) JavaLexerImp.binary_digits ) ( `l| `L)? . ";
		artLabelStrings[ART_L_JavaLexerImp_INT_2904] = "";
		lhsL[ART_L_JavaLexerImp_INT_2904] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_INT_2904] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_INT_2904] = true;
		eoR_pL[ART_L_JavaLexerImp_INT_2904] = true;
		popD[ART_L_JavaLexerImp_INT_2904] = true;
	}

	public void artTableInitialiser_111() {
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL] = "JavaLexerImp.NULL ";
		artLabelStrings[ART_L_JavaLexerImp_NULL] = "NULL";
		artKindOfs[ART_L_JavaLexerImp_NULL] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4807] = "JavaLexerImp.NULL ::= . `n`u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4807] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4807] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_NULL_4807] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_NULL_4807] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4808] = "JavaLexerImp.NULL ::= `n`u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4808] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4808] = ART_L_JavaLexerImp_NULL;
		popD[ART_L_JavaLexerImp_NULL_4808] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4809] = "JavaLexerImp.NULL ::= `n. `u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4809] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4809] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_NULL_4809] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_NULL_4809] = true;
		popD[ART_L_JavaLexerImp_NULL_4809] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4810] = "JavaLexerImp.NULL ::= `n`u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4810] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4810] = ART_L_JavaLexerImp_NULL;
		popD[ART_L_JavaLexerImp_NULL_4810] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4811] = "JavaLexerImp.NULL ::= `n`u. `l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4811] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4811] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_NULL_4811] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_NULL_4811] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4812] = "JavaLexerImp.NULL ::= `n`u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4812] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4812] = ART_L_JavaLexerImp_NULL;
		popD[ART_L_JavaLexerImp_NULL_4812] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4813] = "JavaLexerImp.NULL ::= `n`u`l. `l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4813] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4813] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_NULL_4813] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_NULL_4813] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4814] = "JavaLexerImp.NULL ::= `n`u`l`l";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4814] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4814] = ART_L_JavaLexerImp_NULL;
		popD[ART_L_JavaLexerImp_NULL_4814] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_NULL_4815] = "JavaLexerImp.NULL ::= `n`u`l`l. ";
		artLabelStrings[ART_L_JavaLexerImp_NULL_4815] = "";
		lhsL[ART_L_JavaLexerImp_NULL_4815] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_NULL_4815] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_NULL_4815] = true;
		eoR_pL[ART_L_JavaLexerImp_NULL_4815] = true;
		popD[ART_L_JavaLexerImp_NULL_4815] = true;
	}

	public void artTableInitialiser_112() {
		artLabelInternalStrings[ART_L_JavaLexerImp_OP] = "JavaLexerImp.OP ";
		artLabelStrings[ART_L_JavaLexerImp_OP] = "OP";
		artKindOfs[ART_L_JavaLexerImp_OP] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4855] = "JavaLexerImp.OP ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4855] = "";
		lhsL[ART_L_JavaLexerImp_OP_4855] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4855] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4855] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4856] = "JavaLexerImp.OP ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4856] = "";
		lhsL[ART_L_JavaLexerImp_OP_4856] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4856] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4857] = "JavaLexerImp.OP ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4857] = "";
		lhsL[ART_L_JavaLexerImp_OP_4857] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4857] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4857] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4857] = true;
		popD[ART_L_JavaLexerImp_OP_4857] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4859] = "JavaLexerImp.OP ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4859] = "";
		lhsL[ART_L_JavaLexerImp_OP_4859] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4859] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4859] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4860] = "JavaLexerImp.OP ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4860] = "";
		lhsL[ART_L_JavaLexerImp_OP_4860] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4860] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4861] = "JavaLexerImp.OP ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4861] = "";
		lhsL[ART_L_JavaLexerImp_OP_4861] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4861] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4861] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4861] = true;
		popD[ART_L_JavaLexerImp_OP_4861] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4863] = "JavaLexerImp.OP ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4863] = "";
		lhsL[ART_L_JavaLexerImp_OP_4863] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4863] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4863] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4864] = "JavaLexerImp.OP ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4864] = "";
		lhsL[ART_L_JavaLexerImp_OP_4864] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4864] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4865] = "JavaLexerImp.OP ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4865] = "";
		lhsL[ART_L_JavaLexerImp_OP_4865] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4865] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4865] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4865] = true;
		popD[ART_L_JavaLexerImp_OP_4865] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4867] = "JavaLexerImp.OP ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_OP_4867] = "";
		lhsL[ART_L_JavaLexerImp_OP_4867] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4867] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4867] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4868] = "JavaLexerImp.OP ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_OP_4868] = "";
		lhsL[ART_L_JavaLexerImp_OP_4868] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4868] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4869] = "JavaLexerImp.OP ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4869] = "";
		lhsL[ART_L_JavaLexerImp_OP_4869] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4869] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4869] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4869] = true;
		popD[ART_L_JavaLexerImp_OP_4869] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4871] = "JavaLexerImp.OP ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_OP_4871] = "";
		lhsL[ART_L_JavaLexerImp_OP_4871] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4871] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4871] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4872] = "JavaLexerImp.OP ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_OP_4872] = "";
		lhsL[ART_L_JavaLexerImp_OP_4872] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4872] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4873] = "JavaLexerImp.OP ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4873] = "";
		lhsL[ART_L_JavaLexerImp_OP_4873] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4873] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4873] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4873] = true;
		popD[ART_L_JavaLexerImp_OP_4873] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4875] = "JavaLexerImp.OP ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_OP_4875] = "";
		lhsL[ART_L_JavaLexerImp_OP_4875] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4875] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4875] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4876] = "JavaLexerImp.OP ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_OP_4876] = "";
		lhsL[ART_L_JavaLexerImp_OP_4876] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4876] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4877] = "JavaLexerImp.OP ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4877] = "";
		lhsL[ART_L_JavaLexerImp_OP_4877] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4877] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4877] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4877] = true;
		popD[ART_L_JavaLexerImp_OP_4877] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4879] = "JavaLexerImp.OP ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_OP_4879] = "";
		lhsL[ART_L_JavaLexerImp_OP_4879] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4879] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4879] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4880] = "JavaLexerImp.OP ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_OP_4880] = "";
		lhsL[ART_L_JavaLexerImp_OP_4880] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4880] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4881] = "JavaLexerImp.OP ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4881] = "";
		lhsL[ART_L_JavaLexerImp_OP_4881] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4881] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4881] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4881] = true;
		popD[ART_L_JavaLexerImp_OP_4881] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4883] = "JavaLexerImp.OP ::= . `=`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4883] = "";
		lhsL[ART_L_JavaLexerImp_OP_4883] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4883] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4883] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4884] = "JavaLexerImp.OP ::= `=`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4884] = "";
		lhsL[ART_L_JavaLexerImp_OP_4884] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4884] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4885] = "JavaLexerImp.OP ::= `=. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4885] = "";
		lhsL[ART_L_JavaLexerImp_OP_4885] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4885] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4885] = true;
		popD[ART_L_JavaLexerImp_OP_4885] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4886] = "JavaLexerImp.OP ::= `=`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4886] = "";
		lhsL[ART_L_JavaLexerImp_OP_4886] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4886] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4887] = "JavaLexerImp.OP ::= `=`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4887] = "";
		lhsL[ART_L_JavaLexerImp_OP_4887] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4887] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4887] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4887] = true;
		popD[ART_L_JavaLexerImp_OP_4887] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4889] = "JavaLexerImp.OP ::= . `<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4889] = "";
		lhsL[ART_L_JavaLexerImp_OP_4889] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4889] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4889] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4890] = "JavaLexerImp.OP ::= `<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4890] = "";
		lhsL[ART_L_JavaLexerImp_OP_4890] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4890] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4891] = "JavaLexerImp.OP ::= `<. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4891] = "";
		lhsL[ART_L_JavaLexerImp_OP_4891] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4891] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4891] = true;
		popD[ART_L_JavaLexerImp_OP_4891] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4892] = "JavaLexerImp.OP ::= `<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4892] = "";
		lhsL[ART_L_JavaLexerImp_OP_4892] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4892] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4893] = "JavaLexerImp.OP ::= `<`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4893] = "";
		lhsL[ART_L_JavaLexerImp_OP_4893] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4893] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4893] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4893] = true;
		popD[ART_L_JavaLexerImp_OP_4893] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4895] = "JavaLexerImp.OP ::= . `>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4895] = "";
		lhsL[ART_L_JavaLexerImp_OP_4895] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4895] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4895] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4896] = "JavaLexerImp.OP ::= `>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4896] = "";
		lhsL[ART_L_JavaLexerImp_OP_4896] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4896] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4897] = "JavaLexerImp.OP ::= `>. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4897] = "";
		lhsL[ART_L_JavaLexerImp_OP_4897] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4897] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4897] = true;
		popD[ART_L_JavaLexerImp_OP_4897] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4898] = "JavaLexerImp.OP ::= `>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4898] = "";
		lhsL[ART_L_JavaLexerImp_OP_4898] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4898] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4899] = "JavaLexerImp.OP ::= `>`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4899] = "";
		lhsL[ART_L_JavaLexerImp_OP_4899] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4899] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4899] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4899] = true;
		popD[ART_L_JavaLexerImp_OP_4899] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4901] = "JavaLexerImp.OP ::= . `!`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4901] = "";
		lhsL[ART_L_JavaLexerImp_OP_4901] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4901] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4901] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4902] = "JavaLexerImp.OP ::= `!`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4902] = "";
		lhsL[ART_L_JavaLexerImp_OP_4902] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4902] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4903] = "JavaLexerImp.OP ::= `!. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4903] = "";
		lhsL[ART_L_JavaLexerImp_OP_4903] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4903] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4903] = true;
		popD[ART_L_JavaLexerImp_OP_4903] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4904] = "JavaLexerImp.OP ::= `!`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4904] = "";
		lhsL[ART_L_JavaLexerImp_OP_4904] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4904] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4905] = "JavaLexerImp.OP ::= `!`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4905] = "";
		lhsL[ART_L_JavaLexerImp_OP_4905] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4905] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4905] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4905] = true;
		popD[ART_L_JavaLexerImp_OP_4905] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4907] = "JavaLexerImp.OP ::= . `&`&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4907] = "";
		lhsL[ART_L_JavaLexerImp_OP_4907] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4907] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4907] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4908] = "JavaLexerImp.OP ::= `&`&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4908] = "";
		lhsL[ART_L_JavaLexerImp_OP_4908] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4908] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4909] = "JavaLexerImp.OP ::= `&. `&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4909] = "";
		lhsL[ART_L_JavaLexerImp_OP_4909] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4909] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4909] = true;
		popD[ART_L_JavaLexerImp_OP_4909] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4910] = "JavaLexerImp.OP ::= `&`&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4910] = "";
		lhsL[ART_L_JavaLexerImp_OP_4910] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4910] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4911] = "JavaLexerImp.OP ::= `&`&. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4911] = "";
		lhsL[ART_L_JavaLexerImp_OP_4911] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4911] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4911] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4911] = true;
		popD[ART_L_JavaLexerImp_OP_4911] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4913] = "JavaLexerImp.OP ::= . `|`|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4913] = "";
		lhsL[ART_L_JavaLexerImp_OP_4913] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4913] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4913] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4914] = "JavaLexerImp.OP ::= `|`|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4914] = "";
		lhsL[ART_L_JavaLexerImp_OP_4914] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4914] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4915] = "JavaLexerImp.OP ::= `|. `|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4915] = "";
		lhsL[ART_L_JavaLexerImp_OP_4915] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4915] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4915] = true;
		popD[ART_L_JavaLexerImp_OP_4915] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4916] = "JavaLexerImp.OP ::= `|`|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4916] = "";
		lhsL[ART_L_JavaLexerImp_OP_4916] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4916] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4917] = "JavaLexerImp.OP ::= `|`|. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4917] = "";
		lhsL[ART_L_JavaLexerImp_OP_4917] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4917] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4917] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4917] = true;
		popD[ART_L_JavaLexerImp_OP_4917] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4919] = "JavaLexerImp.OP ::= . `+`+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4919] = "";
		lhsL[ART_L_JavaLexerImp_OP_4919] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4919] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4919] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4920] = "JavaLexerImp.OP ::= `+`+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4920] = "";
		lhsL[ART_L_JavaLexerImp_OP_4920] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4920] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4921] = "JavaLexerImp.OP ::= `+. `+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4921] = "";
		lhsL[ART_L_JavaLexerImp_OP_4921] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4921] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4921] = true;
		popD[ART_L_JavaLexerImp_OP_4921] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4922] = "JavaLexerImp.OP ::= `+`+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4922] = "";
		lhsL[ART_L_JavaLexerImp_OP_4922] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4922] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4923] = "JavaLexerImp.OP ::= `+`+. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4923] = "";
		lhsL[ART_L_JavaLexerImp_OP_4923] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4923] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4923] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4923] = true;
		popD[ART_L_JavaLexerImp_OP_4923] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4925] = "JavaLexerImp.OP ::= . `-`-` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4925] = "";
		lhsL[ART_L_JavaLexerImp_OP_4925] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4925] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4925] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4926] = "JavaLexerImp.OP ::= `-`-` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4926] = "";
		lhsL[ART_L_JavaLexerImp_OP_4926] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4926] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4927] = "JavaLexerImp.OP ::= `-. `-` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4927] = "";
		lhsL[ART_L_JavaLexerImp_OP_4927] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4927] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4927] = true;
		popD[ART_L_JavaLexerImp_OP_4927] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4928] = "JavaLexerImp.OP ::= `-`-` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4928] = "";
		lhsL[ART_L_JavaLexerImp_OP_4928] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4928] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4929] = "JavaLexerImp.OP ::= `-`-. ` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4929] = "";
		lhsL[ART_L_JavaLexerImp_OP_4929] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4929] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4929] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4930] = "JavaLexerImp.OP ::= `-`-` ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4930] = "";
		lhsL[ART_L_JavaLexerImp_OP_4930] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4930] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4931] = "JavaLexerImp.OP ::= `-`-` . ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4931] = "";
		lhsL[ART_L_JavaLexerImp_OP_4931] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4931] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4931] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4931] = true;
		popD[ART_L_JavaLexerImp_OP_4931] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4933] = "JavaLexerImp.OP ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4933] = "";
		lhsL[ART_L_JavaLexerImp_OP_4933] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4933] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4933] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4934] = "JavaLexerImp.OP ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_OP_4934] = "";
		lhsL[ART_L_JavaLexerImp_OP_4934] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4934] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4935] = "JavaLexerImp.OP ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4935] = "";
		lhsL[ART_L_JavaLexerImp_OP_4935] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4935] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4935] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4935] = true;
		popD[ART_L_JavaLexerImp_OP_4935] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4937] = "JavaLexerImp.OP ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_OP_4937] = "";
		lhsL[ART_L_JavaLexerImp_OP_4937] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4937] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4937] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4938] = "JavaLexerImp.OP ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_OP_4938] = "";
		lhsL[ART_L_JavaLexerImp_OP_4938] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4938] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4939] = "JavaLexerImp.OP ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4939] = "";
		lhsL[ART_L_JavaLexerImp_OP_4939] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4939] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4939] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4939] = true;
		popD[ART_L_JavaLexerImp_OP_4939] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4941] = "JavaLexerImp.OP ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_OP_4941] = "";
		lhsL[ART_L_JavaLexerImp_OP_4941] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4941] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4941] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4942] = "JavaLexerImp.OP ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_OP_4942] = "";
		lhsL[ART_L_JavaLexerImp_OP_4942] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4942] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4943] = "JavaLexerImp.OP ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4943] = "";
		lhsL[ART_L_JavaLexerImp_OP_4943] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4943] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4943] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4943] = true;
		popD[ART_L_JavaLexerImp_OP_4943] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4945] = "JavaLexerImp.OP ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_OP_4945] = "";
		lhsL[ART_L_JavaLexerImp_OP_4945] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4945] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4945] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4946] = "JavaLexerImp.OP ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_OP_4946] = "";
		lhsL[ART_L_JavaLexerImp_OP_4946] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4946] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4947] = "JavaLexerImp.OP ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4947] = "";
		lhsL[ART_L_JavaLexerImp_OP_4947] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4947] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4947] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4947] = true;
		popD[ART_L_JavaLexerImp_OP_4947] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4949] = "JavaLexerImp.OP ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4949] = "";
		lhsL[ART_L_JavaLexerImp_OP_4949] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4949] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4949] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4950] = "JavaLexerImp.OP ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_OP_4950] = "";
		lhsL[ART_L_JavaLexerImp_OP_4950] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4950] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4951] = "JavaLexerImp.OP ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4951] = "";
		lhsL[ART_L_JavaLexerImp_OP_4951] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4951] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4951] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4951] = true;
		popD[ART_L_JavaLexerImp_OP_4951] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4953] = "JavaLexerImp.OP ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4953] = "";
		lhsL[ART_L_JavaLexerImp_OP_4953] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4953] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4953] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4954] = "JavaLexerImp.OP ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_OP_4954] = "";
		lhsL[ART_L_JavaLexerImp_OP_4954] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4954] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4955] = "JavaLexerImp.OP ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4955] = "";
		lhsL[ART_L_JavaLexerImp_OP_4955] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4955] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4955] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4955] = true;
		popD[ART_L_JavaLexerImp_OP_4955] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4957] = "JavaLexerImp.OP ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_OP_4957] = "";
		lhsL[ART_L_JavaLexerImp_OP_4957] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4957] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4957] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4958] = "JavaLexerImp.OP ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_OP_4958] = "";
		lhsL[ART_L_JavaLexerImp_OP_4958] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4958] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4959] = "JavaLexerImp.OP ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4959] = "";
		lhsL[ART_L_JavaLexerImp_OP_4959] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4959] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4959] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4959] = true;
		popD[ART_L_JavaLexerImp_OP_4959] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4961] = "JavaLexerImp.OP ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_OP_4961] = "";
		lhsL[ART_L_JavaLexerImp_OP_4961] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4961] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4961] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4962] = "JavaLexerImp.OP ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_OP_4962] = "";
		lhsL[ART_L_JavaLexerImp_OP_4962] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4962] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4963] = "JavaLexerImp.OP ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4963] = "";
		lhsL[ART_L_JavaLexerImp_OP_4963] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4963] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4963] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4963] = true;
		popD[ART_L_JavaLexerImp_OP_4963] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4965] = "JavaLexerImp.OP ::= . `<`<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4965] = "";
		lhsL[ART_L_JavaLexerImp_OP_4965] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4965] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4965] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4966] = "JavaLexerImp.OP ::= `<`<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4966] = "";
		lhsL[ART_L_JavaLexerImp_OP_4966] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4966] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4967] = "JavaLexerImp.OP ::= `<. `<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4967] = "";
		lhsL[ART_L_JavaLexerImp_OP_4967] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4967] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4967] = true;
		popD[ART_L_JavaLexerImp_OP_4967] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4968] = "JavaLexerImp.OP ::= `<`<";
		artLabelStrings[ART_L_JavaLexerImp_OP_4968] = "";
		lhsL[ART_L_JavaLexerImp_OP_4968] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4968] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4969] = "JavaLexerImp.OP ::= `<`<. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4969] = "";
		lhsL[ART_L_JavaLexerImp_OP_4969] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4969] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4969] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4969] = true;
		popD[ART_L_JavaLexerImp_OP_4969] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4971] = "JavaLexerImp.OP ::= . `>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4971] = "";
		lhsL[ART_L_JavaLexerImp_OP_4971] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4971] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4971] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4972] = "JavaLexerImp.OP ::= `>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4972] = "";
		lhsL[ART_L_JavaLexerImp_OP_4972] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4972] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4973] = "JavaLexerImp.OP ::= `>. `>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4973] = "";
		lhsL[ART_L_JavaLexerImp_OP_4973] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4973] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4973] = true;
		popD[ART_L_JavaLexerImp_OP_4973] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4974] = "JavaLexerImp.OP ::= `>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4974] = "";
		lhsL[ART_L_JavaLexerImp_OP_4974] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4974] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4975] = "JavaLexerImp.OP ::= `>`>. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4975] = "";
		lhsL[ART_L_JavaLexerImp_OP_4975] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4975] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4975] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4975] = true;
		popD[ART_L_JavaLexerImp_OP_4975] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4977] = "JavaLexerImp.OP ::= . `>`>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4977] = "";
		lhsL[ART_L_JavaLexerImp_OP_4977] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4977] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4977] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4978] = "JavaLexerImp.OP ::= `>`>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4978] = "";
		lhsL[ART_L_JavaLexerImp_OP_4978] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4978] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4979] = "JavaLexerImp.OP ::= `>. `>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4979] = "";
		lhsL[ART_L_JavaLexerImp_OP_4979] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4979] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4979] = true;
		popD[ART_L_JavaLexerImp_OP_4979] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4980] = "JavaLexerImp.OP ::= `>`>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4980] = "";
		lhsL[ART_L_JavaLexerImp_OP_4980] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4980] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4981] = "JavaLexerImp.OP ::= `>`>. `>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4981] = "";
		lhsL[ART_L_JavaLexerImp_OP_4981] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4981] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4981] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4982] = "JavaLexerImp.OP ::= `>`>`>";
		artLabelStrings[ART_L_JavaLexerImp_OP_4982] = "";
		lhsL[ART_L_JavaLexerImp_OP_4982] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4982] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4983] = "JavaLexerImp.OP ::= `>`>`>. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4983] = "";
		lhsL[ART_L_JavaLexerImp_OP_4983] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4983] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4983] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4983] = true;
		popD[ART_L_JavaLexerImp_OP_4983] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4985] = "JavaLexerImp.OP ::= . `+`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4985] = "";
		lhsL[ART_L_JavaLexerImp_OP_4985] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4985] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4985] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4986] = "JavaLexerImp.OP ::= `+`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4986] = "";
		lhsL[ART_L_JavaLexerImp_OP_4986] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4986] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4987] = "JavaLexerImp.OP ::= `+. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4987] = "";
		lhsL[ART_L_JavaLexerImp_OP_4987] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4987] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4987] = true;
		popD[ART_L_JavaLexerImp_OP_4987] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4988] = "JavaLexerImp.OP ::= `+`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4988] = "";
		lhsL[ART_L_JavaLexerImp_OP_4988] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4988] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4989] = "JavaLexerImp.OP ::= `+`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4989] = "";
		lhsL[ART_L_JavaLexerImp_OP_4989] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4989] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4989] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4989] = true;
		popD[ART_L_JavaLexerImp_OP_4989] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4991] = "JavaLexerImp.OP ::= . `-`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4991] = "";
		lhsL[ART_L_JavaLexerImp_OP_4991] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4991] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4991] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4992] = "JavaLexerImp.OP ::= `-`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4992] = "";
		lhsL[ART_L_JavaLexerImp_OP_4992] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4992] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4993] = "JavaLexerImp.OP ::= `-. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4993] = "";
		lhsL[ART_L_JavaLexerImp_OP_4993] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4993] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4993] = true;
		popD[ART_L_JavaLexerImp_OP_4993] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4994] = "JavaLexerImp.OP ::= `-`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4994] = "";
		lhsL[ART_L_JavaLexerImp_OP_4994] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4994] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4995] = "JavaLexerImp.OP ::= `-`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_4995] = "";
		lhsL[ART_L_JavaLexerImp_OP_4995] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4995] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_4995] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_4995] = true;
		popD[ART_L_JavaLexerImp_OP_4995] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4997] = "JavaLexerImp.OP ::= . `*`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4997] = "";
		lhsL[ART_L_JavaLexerImp_OP_4997] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4997] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_4997] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4998] = "JavaLexerImp.OP ::= `*`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4998] = "";
		lhsL[ART_L_JavaLexerImp_OP_4998] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_4998] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_4999] = "JavaLexerImp.OP ::= `*. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_4999] = "";
		lhsL[ART_L_JavaLexerImp_OP_4999] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_4999] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_4999] = true;
		popD[ART_L_JavaLexerImp_OP_4999] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5000] = "JavaLexerImp.OP ::= `*`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5000] = "";
		lhsL[ART_L_JavaLexerImp_OP_5000] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5000] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5001] = "JavaLexerImp.OP ::= `*`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5001] = "";
		lhsL[ART_L_JavaLexerImp_OP_5001] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5001] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5001] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5001] = true;
		popD[ART_L_JavaLexerImp_OP_5001] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5003] = "JavaLexerImp.OP ::= . `/`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5003] = "";
		lhsL[ART_L_JavaLexerImp_OP_5003] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5003] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5003] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5004] = "JavaLexerImp.OP ::= `/`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5004] = "";
		lhsL[ART_L_JavaLexerImp_OP_5004] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5004] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5005] = "JavaLexerImp.OP ::= `/. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5005] = "";
		lhsL[ART_L_JavaLexerImp_OP_5005] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5005] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5005] = true;
		popD[ART_L_JavaLexerImp_OP_5005] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5006] = "JavaLexerImp.OP ::= `/`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5006] = "";
		lhsL[ART_L_JavaLexerImp_OP_5006] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5006] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5007] = "JavaLexerImp.OP ::= `/`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5007] = "";
		lhsL[ART_L_JavaLexerImp_OP_5007] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5007] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5007] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5007] = true;
		popD[ART_L_JavaLexerImp_OP_5007] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5009] = "JavaLexerImp.OP ::= . `&`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5009] = "";
		lhsL[ART_L_JavaLexerImp_OP_5009] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5009] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5009] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5010] = "JavaLexerImp.OP ::= `&`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5010] = "";
		lhsL[ART_L_JavaLexerImp_OP_5010] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5010] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5011] = "JavaLexerImp.OP ::= `&. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5011] = "";
		lhsL[ART_L_JavaLexerImp_OP_5011] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5011] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5011] = true;
		popD[ART_L_JavaLexerImp_OP_5011] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5012] = "JavaLexerImp.OP ::= `&`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5012] = "";
		lhsL[ART_L_JavaLexerImp_OP_5012] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5012] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5013] = "JavaLexerImp.OP ::= `&`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5013] = "";
		lhsL[ART_L_JavaLexerImp_OP_5013] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5013] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5013] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5013] = true;
		popD[ART_L_JavaLexerImp_OP_5013] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5015] = "JavaLexerImp.OP ::= . `|`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5015] = "";
		lhsL[ART_L_JavaLexerImp_OP_5015] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5015] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5015] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5016] = "JavaLexerImp.OP ::= `|`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5016] = "";
		lhsL[ART_L_JavaLexerImp_OP_5016] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5016] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5017] = "JavaLexerImp.OP ::= `|. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5017] = "";
		lhsL[ART_L_JavaLexerImp_OP_5017] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5017] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5017] = true;
		popD[ART_L_JavaLexerImp_OP_5017] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5018] = "JavaLexerImp.OP ::= `|`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5018] = "";
		lhsL[ART_L_JavaLexerImp_OP_5018] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5018] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5019] = "JavaLexerImp.OP ::= `|`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5019] = "";
		lhsL[ART_L_JavaLexerImp_OP_5019] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5019] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5019] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5019] = true;
		popD[ART_L_JavaLexerImp_OP_5019] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5021] = "JavaLexerImp.OP ::= . `^`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5021] = "";
		lhsL[ART_L_JavaLexerImp_OP_5021] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5021] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5021] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5022] = "JavaLexerImp.OP ::= `^`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5022] = "";
		lhsL[ART_L_JavaLexerImp_OP_5022] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5022] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5023] = "JavaLexerImp.OP ::= `^. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5023] = "";
		lhsL[ART_L_JavaLexerImp_OP_5023] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5023] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5023] = true;
		popD[ART_L_JavaLexerImp_OP_5023] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5024] = "JavaLexerImp.OP ::= `^`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5024] = "";
		lhsL[ART_L_JavaLexerImp_OP_5024] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5024] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5025] = "JavaLexerImp.OP ::= `^`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5025] = "";
		lhsL[ART_L_JavaLexerImp_OP_5025] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5025] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5025] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5025] = true;
		popD[ART_L_JavaLexerImp_OP_5025] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5027] = "JavaLexerImp.OP ::= . `%`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5027] = "";
		lhsL[ART_L_JavaLexerImp_OP_5027] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5027] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5027] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5028] = "JavaLexerImp.OP ::= `%`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5028] = "";
		lhsL[ART_L_JavaLexerImp_OP_5028] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5028] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5029] = "JavaLexerImp.OP ::= `%. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5029] = "";
		lhsL[ART_L_JavaLexerImp_OP_5029] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5029] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5029] = true;
		popD[ART_L_JavaLexerImp_OP_5029] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5030] = "JavaLexerImp.OP ::= `%`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5030] = "";
		lhsL[ART_L_JavaLexerImp_OP_5030] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5030] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5031] = "JavaLexerImp.OP ::= `%`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5031] = "";
		lhsL[ART_L_JavaLexerImp_OP_5031] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5031] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5031] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5031] = true;
		popD[ART_L_JavaLexerImp_OP_5031] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5033] = "JavaLexerImp.OP ::= . `<`<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5033] = "";
		lhsL[ART_L_JavaLexerImp_OP_5033] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5033] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5033] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5034] = "JavaLexerImp.OP ::= `<`<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5034] = "";
		lhsL[ART_L_JavaLexerImp_OP_5034] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5034] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5035] = "JavaLexerImp.OP ::= `<. `<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5035] = "";
		lhsL[ART_L_JavaLexerImp_OP_5035] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5035] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5035] = true;
		popD[ART_L_JavaLexerImp_OP_5035] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5036] = "JavaLexerImp.OP ::= `<`<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5036] = "";
		lhsL[ART_L_JavaLexerImp_OP_5036] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5036] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5037] = "JavaLexerImp.OP ::= `<`<. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5037] = "";
		lhsL[ART_L_JavaLexerImp_OP_5037] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5037] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5037] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5038] = "JavaLexerImp.OP ::= `<`<`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5038] = "";
		lhsL[ART_L_JavaLexerImp_OP_5038] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5038] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5039] = "JavaLexerImp.OP ::= `<`<`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5039] = "";
		lhsL[ART_L_JavaLexerImp_OP_5039] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5039] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5039] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5039] = true;
		popD[ART_L_JavaLexerImp_OP_5039] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5041] = "JavaLexerImp.OP ::= . `>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5041] = "";
		lhsL[ART_L_JavaLexerImp_OP_5041] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5041] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5041] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5042] = "JavaLexerImp.OP ::= `>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5042] = "";
		lhsL[ART_L_JavaLexerImp_OP_5042] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5042] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5043] = "JavaLexerImp.OP ::= `>. `>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5043] = "";
		lhsL[ART_L_JavaLexerImp_OP_5043] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5043] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5043] = true;
		popD[ART_L_JavaLexerImp_OP_5043] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5044] = "JavaLexerImp.OP ::= `>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5044] = "";
		lhsL[ART_L_JavaLexerImp_OP_5044] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5044] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5045] = "JavaLexerImp.OP ::= `>`>. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5045] = "";
		lhsL[ART_L_JavaLexerImp_OP_5045] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5045] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5045] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5046] = "JavaLexerImp.OP ::= `>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5046] = "";
		lhsL[ART_L_JavaLexerImp_OP_5046] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5046] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5047] = "JavaLexerImp.OP ::= `>`>`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5047] = "";
		lhsL[ART_L_JavaLexerImp_OP_5047] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5047] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5047] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5047] = true;
		popD[ART_L_JavaLexerImp_OP_5047] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5049] = "JavaLexerImp.OP ::= . `>`>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5049] = "";
		lhsL[ART_L_JavaLexerImp_OP_5049] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5049] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5049] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5050] = "JavaLexerImp.OP ::= `>`>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5050] = "";
		lhsL[ART_L_JavaLexerImp_OP_5050] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5050] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5051] = "JavaLexerImp.OP ::= `>. `>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5051] = "";
		lhsL[ART_L_JavaLexerImp_OP_5051] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5051] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_OP_5051] = true;
		popD[ART_L_JavaLexerImp_OP_5051] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5052] = "JavaLexerImp.OP ::= `>`>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5052] = "";
		lhsL[ART_L_JavaLexerImp_OP_5052] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5052] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5053] = "JavaLexerImp.OP ::= `>`>. `>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5053] = "";
		lhsL[ART_L_JavaLexerImp_OP_5053] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5053] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5053] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5054] = "JavaLexerImp.OP ::= `>`>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5054] = "";
		lhsL[ART_L_JavaLexerImp_OP_5054] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5054] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5055] = "JavaLexerImp.OP ::= `>`>`>. `=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5055] = "";
		lhsL[ART_L_JavaLexerImp_OP_5055] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5055] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_OP_5055] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5056] = "JavaLexerImp.OP ::= `>`>`>`=";
		artLabelStrings[ART_L_JavaLexerImp_OP_5056] = "";
		lhsL[ART_L_JavaLexerImp_OP_5056] = ART_L_JavaLexerImp_OP;
		popD[ART_L_JavaLexerImp_OP_5056] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_OP_5057] = "JavaLexerImp.OP ::= `>`>`>`=. ";
		artLabelStrings[ART_L_JavaLexerImp_OP_5057] = "";
		lhsL[ART_L_JavaLexerImp_OP_5057] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_OP_5057] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_OP_5057] = true;
		eoR_pL[ART_L_JavaLexerImp_OP_5057] = true;
		popD[ART_L_JavaLexerImp_OP_5057] = true;
	}

	public void artTableInitialiser_113() {
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS] = "JavaLexerImp.SEPARATORS ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS] = "SEPARATORS";
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4818] = "JavaLexerImp.SEPARATORS ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4818] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4818] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4818] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4818] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4819] = "JavaLexerImp.SEPARATORS ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4819] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4819] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4819] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4820] = "JavaLexerImp.SEPARATORS ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4820] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4820] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4820] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4820] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4820] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4820] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4822] = "JavaLexerImp.SEPARATORS ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4822] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4822] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4822] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4822] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4823] = "JavaLexerImp.SEPARATORS ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4823] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4823] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4823] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4824] = "JavaLexerImp.SEPARATORS ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4824] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4824] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4824] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4824] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4824] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4824] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4826] = "JavaLexerImp.SEPARATORS ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4826] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4826] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4826] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4826] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4827] = "JavaLexerImp.SEPARATORS ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4827] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4827] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4827] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4828] = "JavaLexerImp.SEPARATORS ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4828] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4828] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4828] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4828] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4828] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4828] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4830] = "JavaLexerImp.SEPARATORS ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4830] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4830] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4830] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4830] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4831] = "JavaLexerImp.SEPARATORS ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4831] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4831] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4831] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4832] = "JavaLexerImp.SEPARATORS ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4832] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4832] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4832] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4832] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4832] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4832] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4834] = "JavaLexerImp.SEPARATORS ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4834] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4834] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4834] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4834] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4835] = "JavaLexerImp.SEPARATORS ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4835] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4835] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4835] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4836] = "JavaLexerImp.SEPARATORS ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4836] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4836] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4836] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4836] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4836] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4836] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4838] = "JavaLexerImp.SEPARATORS ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4838] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4838] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4838] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4838] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4839] = "JavaLexerImp.SEPARATORS ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4839] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4839] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4839] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4840] = "JavaLexerImp.SEPARATORS ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4840] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4840] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4840] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4840] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4840] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4840] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4842] = "JavaLexerImp.SEPARATORS ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4842] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4842] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4842] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4842] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4843] = "JavaLexerImp.SEPARATORS ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4843] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4843] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4843] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4844] = "JavaLexerImp.SEPARATORS ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4844] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4844] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4844] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4844] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4844] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4844] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4846] = "JavaLexerImp.SEPARATORS ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4846] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4846] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4846] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4846] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4847] = "JavaLexerImp.SEPARATORS ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4847] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4847] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4847] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4848] = "JavaLexerImp.SEPARATORS ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4848] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4848] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4848] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4848] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4848] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4848] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4850] = "JavaLexerImp.SEPARATORS ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4850] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4850] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4850] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_SEPARATORS_4850] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4851] = "JavaLexerImp.SEPARATORS ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4851] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4851] = ART_L_JavaLexerImp_SEPARATORS;
		popD[ART_L_JavaLexerImp_SEPARATORS_4851] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_SEPARATORS_4852] = "JavaLexerImp.SEPARATORS ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_SEPARATORS_4852] = "";
		lhsL[ART_L_JavaLexerImp_SEPARATORS_4852] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_SEPARATORS_4852] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_SEPARATORS_4852] = true;
		eoR_pL[ART_L_JavaLexerImp_SEPARATORS_4852] = true;
		popD[ART_L_JavaLexerImp_SEPARATORS_4852] = true;
	}

	public void artTableInitialiser_114() {
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING] = "JavaLexerImp.STRING ";
		artLabelStrings[ART_L_JavaLexerImp_STRING] = "STRING";
		artKindOfs[ART_L_JavaLexerImp_STRING] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3971] = "JavaLexerImp.STRING ::= . `\\\"( JavaLexerImp.regular_string_literal_character )* `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3971] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3971] = ART_L_JavaLexerImp_STRING;
		artKindOfs[ART_L_JavaLexerImp_STRING_3971] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3972] = "JavaLexerImp.STRING ::= `\\\"( JavaLexerImp.regular_string_literal_character )* `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3972] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3972] = ART_L_JavaLexerImp_STRING;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3973] = "JavaLexerImp.STRING ::= `\\\". ( JavaLexerImp.regular_string_literal_character )* `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3973] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3973] = ART_L_JavaLexerImp_STRING;
		artKindOfs[ART_L_JavaLexerImp_STRING_3973] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_STRING_3973] = true;
		lhsL[ART_C_JavaLexerImp_STRING_3974] = ART_L_JavaLexerImp_STRING;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3978] = "JavaLexerImp.STRING ::= `\\\"( JavaLexerImp.regular_string_literal_character . )* `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3978] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3978] = ART_L_JavaLexerImp_STRING;
		artSlotInstanceOfs[ART_L_JavaLexerImp_STRING_3978] = ART_L_JavaLexerImp_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_STRING_3978] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_STRING_3978] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3979] = "JavaLexerImp.STRING ::= `\\\"( JavaLexerImp.regular_string_literal_character )* . `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3979] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3979] = ART_L_JavaLexerImp_STRING;
		artKindOfs[ART_L_JavaLexerImp_STRING_3979] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_STRING_3979] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3980] = "JavaLexerImp.STRING ::= `\\\"( JavaLexerImp.regular_string_literal_character )* `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3980] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3980] = ART_L_JavaLexerImp_STRING;
		popD[ART_L_JavaLexerImp_STRING_3980] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_STRING_3981] = "JavaLexerImp.STRING ::= `\\\"( JavaLexerImp.regular_string_literal_character )* `\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_STRING_3981] = "";
		lhsL[ART_L_JavaLexerImp_STRING_3981] = ART_L_JavaLexerImp_STRING;
		artKindOfs[ART_L_JavaLexerImp_STRING_3981] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_STRING_3981] = true;
		eoR_pL[ART_L_JavaLexerImp_STRING_3981] = true;
		popD[ART_L_JavaLexerImp_STRING_3981] = true;
	}

	public void artTableInitialiser_115() {
		artLabelInternalStrings[ART_L_JavaLexerImp_WS] = "JavaLexerImp.WS ";
		artLabelStrings[ART_L_JavaLexerImp_WS] = "WS";
		artKindOfs[ART_L_JavaLexerImp_WS] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_983] = "JavaLexerImp.WS ::= . `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_983] = "";
		lhsL[ART_L_JavaLexerImp_WS_983] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_983] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_983] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_984] = "JavaLexerImp.WS ::= `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_984] = "";
		lhsL[ART_L_JavaLexerImp_WS_984] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_984] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_985] = "JavaLexerImp.WS ::= `\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_WS_985] = "";
		lhsL[ART_L_JavaLexerImp_WS_985] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_985] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_985] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_985] = true;
		popD[ART_L_JavaLexerImp_WS_985] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_987] = "JavaLexerImp.WS ::= . `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_WS_987] = "";
		lhsL[ART_L_JavaLexerImp_WS_987] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_987] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_987] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_988] = "JavaLexerImp.WS ::= `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_WS_988] = "";
		lhsL[ART_L_JavaLexerImp_WS_988] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_988] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_989] = "JavaLexerImp.WS ::= `\\\\r. ";
		artLabelStrings[ART_L_JavaLexerImp_WS_989] = "";
		lhsL[ART_L_JavaLexerImp_WS_989] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_989] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_989] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_989] = true;
		popD[ART_L_JavaLexerImp_WS_989] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_991] = "JavaLexerImp.WS ::= . `\\\\r`\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_991] = "";
		lhsL[ART_L_JavaLexerImp_WS_991] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_991] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_991] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_992] = "JavaLexerImp.WS ::= `\\\\r`\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_992] = "";
		lhsL[ART_L_JavaLexerImp_WS_992] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_992] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_993] = "JavaLexerImp.WS ::= `\\\\r. `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_993] = "";
		lhsL[ART_L_JavaLexerImp_WS_993] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_993] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_WS_993] = true;
		popD[ART_L_JavaLexerImp_WS_993] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_994] = "JavaLexerImp.WS ::= `\\\\r`\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_WS_994] = "";
		lhsL[ART_L_JavaLexerImp_WS_994] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_994] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_995] = "JavaLexerImp.WS ::= `\\\\r`\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_WS_995] = "";
		lhsL[ART_L_JavaLexerImp_WS_995] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_995] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_995] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_995] = true;
		popD[ART_L_JavaLexerImp_WS_995] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_997] = "JavaLexerImp.WS ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_WS_997] = "";
		lhsL[ART_L_JavaLexerImp_WS_997] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_997] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_997] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_998] = "JavaLexerImp.WS ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_WS_998] = "";
		lhsL[ART_L_JavaLexerImp_WS_998] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_998] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_999] = "JavaLexerImp.WS ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_WS_999] = "";
		lhsL[ART_L_JavaLexerImp_WS_999] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_999] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_999] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_999] = true;
		popD[ART_L_JavaLexerImp_WS_999] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1001] = "JavaLexerImp.WS ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_WS_1001] = "";
		lhsL[ART_L_JavaLexerImp_WS_1001] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_1001] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_1001] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1002] = "JavaLexerImp.WS ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_WS_1002] = "";
		lhsL[ART_L_JavaLexerImp_WS_1002] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_1002] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1003] = "JavaLexerImp.WS ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_WS_1003] = "";
		lhsL[ART_L_JavaLexerImp_WS_1003] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_1003] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_1003] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_1003] = true;
		popD[ART_L_JavaLexerImp_WS_1003] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1005] = "JavaLexerImp.WS ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_WS_1005] = "";
		lhsL[ART_L_JavaLexerImp_WS_1005] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_1005] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_WS_1005] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1006] = "JavaLexerImp.WS ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_WS_1006] = "";
		lhsL[ART_L_JavaLexerImp_WS_1006] = ART_L_JavaLexerImp_WS;
		popD[ART_L_JavaLexerImp_WS_1006] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_WS_1007] = "JavaLexerImp.WS ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_WS_1007] = "";
		lhsL[ART_L_JavaLexerImp_WS_1007] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_WS_1007] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_WS_1007] = true;
		eoR_pL[ART_L_JavaLexerImp_WS_1007] = true;
		popD[ART_L_JavaLexerImp_WS_1007] = true;
	}

	public void artTableInitialiser_116() {
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract] = "JavaLexerImp.abstract ";
		artLabelStrings[ART_L_JavaLexerImp_abstract] = "abstract";
		artKindOfs[ART_L_JavaLexerImp_abstract] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_255] = "JavaLexerImp.abstract ::= . `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_255] = "";
		lhsL[ART_L_JavaLexerImp_abstract_255] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_255] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_255] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_256] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_256] = "";
		lhsL[ART_L_JavaLexerImp_abstract_256] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_256] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_257] = "JavaLexerImp.abstract ::= `a. `b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_257] = "";
		lhsL[ART_L_JavaLexerImp_abstract_257] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_257] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_abstract_257] = true;
		popD[ART_L_JavaLexerImp_abstract_257] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_258] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_258] = "";
		lhsL[ART_L_JavaLexerImp_abstract_258] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_258] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_259] = "JavaLexerImp.abstract ::= `a`b. `s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_259] = "";
		lhsL[ART_L_JavaLexerImp_abstract_259] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_259] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_259] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_260] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_260] = "";
		lhsL[ART_L_JavaLexerImp_abstract_260] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_260] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_261] = "JavaLexerImp.abstract ::= `a`b`s. `t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_261] = "";
		lhsL[ART_L_JavaLexerImp_abstract_261] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_261] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_261] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_262] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_262] = "";
		lhsL[ART_L_JavaLexerImp_abstract_262] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_262] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_263] = "JavaLexerImp.abstract ::= `a`b`s`t. `r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_263] = "";
		lhsL[ART_L_JavaLexerImp_abstract_263] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_263] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_263] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_264] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_264] = "";
		lhsL[ART_L_JavaLexerImp_abstract_264] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_264] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_265] = "JavaLexerImp.abstract ::= `a`b`s`t`r. `a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_265] = "";
		lhsL[ART_L_JavaLexerImp_abstract_265] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_265] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_265] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_266] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_266] = "";
		lhsL[ART_L_JavaLexerImp_abstract_266] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_266] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_267] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a. `c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_267] = "";
		lhsL[ART_L_JavaLexerImp_abstract_267] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_267] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_267] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_268] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_268] = "";
		lhsL[ART_L_JavaLexerImp_abstract_268] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_268] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_269] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c. `t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_269] = "";
		lhsL[ART_L_JavaLexerImp_abstract_269] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_269] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_abstract_269] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_270] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t";
		artLabelStrings[ART_L_JavaLexerImp_abstract_270] = "";
		lhsL[ART_L_JavaLexerImp_abstract_270] = ART_L_JavaLexerImp_abstract;
		popD[ART_L_JavaLexerImp_abstract_270] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_abstract_271] = "JavaLexerImp.abstract ::= `a`b`s`t`r`a`c`t. ";
		artLabelStrings[ART_L_JavaLexerImp_abstract_271] = "";
		lhsL[ART_L_JavaLexerImp_abstract_271] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_abstract_271] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_abstract_271] = true;
		eoR_pL[ART_L_JavaLexerImp_abstract_271] = true;
		popD[ART_L_JavaLexerImp_abstract_271] = true;
	}

	public void artTableInitialiser_117() {
		artLabelInternalStrings[ART_L_JavaLexerImp_assert] = "JavaLexerImp.assert ";
		artLabelStrings[ART_L_JavaLexerImp_assert] = "assert";
		artKindOfs[ART_L_JavaLexerImp_assert] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_274] = "JavaLexerImp.assert ::= . `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_274] = "";
		lhsL[ART_L_JavaLexerImp_assert_274] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_274] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_assert_274] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_275] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_275] = "";
		lhsL[ART_L_JavaLexerImp_assert_275] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_275] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_276] = "JavaLexerImp.assert ::= `a. `s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_276] = "";
		lhsL[ART_L_JavaLexerImp_assert_276] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_276] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_assert_276] = true;
		popD[ART_L_JavaLexerImp_assert_276] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_277] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_277] = "";
		lhsL[ART_L_JavaLexerImp_assert_277] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_277] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_278] = "JavaLexerImp.assert ::= `a`s. `s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_278] = "";
		lhsL[ART_L_JavaLexerImp_assert_278] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_278] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_assert_278] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_279] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_279] = "";
		lhsL[ART_L_JavaLexerImp_assert_279] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_279] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_280] = "JavaLexerImp.assert ::= `a`s`s. `e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_280] = "";
		lhsL[ART_L_JavaLexerImp_assert_280] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_280] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_assert_280] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_281] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_281] = "";
		lhsL[ART_L_JavaLexerImp_assert_281] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_281] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_282] = "JavaLexerImp.assert ::= `a`s`s`e. `r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_282] = "";
		lhsL[ART_L_JavaLexerImp_assert_282] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_282] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_assert_282] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_283] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_283] = "";
		lhsL[ART_L_JavaLexerImp_assert_283] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_283] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_284] = "JavaLexerImp.assert ::= `a`s`s`e`r. `t";
		artLabelStrings[ART_L_JavaLexerImp_assert_284] = "";
		lhsL[ART_L_JavaLexerImp_assert_284] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_284] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_assert_284] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_285] = "JavaLexerImp.assert ::= `a`s`s`e`r`t";
		artLabelStrings[ART_L_JavaLexerImp_assert_285] = "";
		lhsL[ART_L_JavaLexerImp_assert_285] = ART_L_JavaLexerImp_assert;
		popD[ART_L_JavaLexerImp_assert_285] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_assert_286] = "JavaLexerImp.assert ::= `a`s`s`e`r`t. ";
		artLabelStrings[ART_L_JavaLexerImp_assert_286] = "";
		lhsL[ART_L_JavaLexerImp_assert_286] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_assert_286] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_assert_286] = true;
		eoR_pL[ART_L_JavaLexerImp_assert_286] = true;
		popD[ART_L_JavaLexerImp_assert_286] = true;
	}

	public void artTableInitialiser_118() {
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit] = "JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit] = "binary_digit";
		artKindOfs[ART_L_JavaLexerImp_binary_digit] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3190] = "JavaLexerImp.binary_digit ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3190] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3190] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_3190] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_digit_3190] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3191] = "JavaLexerImp.binary_digit ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3191] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3191] = ART_L_JavaLexerImp_binary_digit;
		popD[ART_L_JavaLexerImp_binary_digit_3191] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3192] = "JavaLexerImp.binary_digit ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3192] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3192] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_3192] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_3192] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_3192] = true;
		popD[ART_L_JavaLexerImp_binary_digit_3192] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3194] = "JavaLexerImp.binary_digit ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3194] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3194] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_3194] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_digit_3194] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3195] = "JavaLexerImp.binary_digit ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3195] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3195] = ART_L_JavaLexerImp_binary_digit;
		popD[ART_L_JavaLexerImp_binary_digit_3195] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_3196] = "JavaLexerImp.binary_digit ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_3196] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_3196] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_3196] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_3196] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_3196] = true;
		popD[ART_L_JavaLexerImp_binary_digit_3196] = true;
	}

	public void artTableInitialiser_119() {
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores] = "JavaLexerImp.binary_digit_and_underscores ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores] = "binary_digit_and_underscores";
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3199] = "JavaLexerImp.binary_digit_and_underscores ::= . JavaLexerImp.binary_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3199] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_and_underscores_3199] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3199] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = "JavaLexerImp.binary_digit_and_underscores ::= JavaLexerImp.binary_digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = true;
		popD[ART_L_JavaLexerImp_binary_digit_and_underscores_3201] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3203] = "JavaLexerImp.binary_digit_and_underscores ::= . JavaLexerImp.binary_digit_and_underscores JavaLexerImp.binary_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3203] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_and_underscores_3203] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3203] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = "JavaLexerImp.binary_digit_and_underscores ::= JavaLexerImp.binary_digit_and_underscores . JavaLexerImp.binary_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_binary_digit_and_underscores_3205] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = "JavaLexerImp.binary_digit_and_underscores ::= JavaLexerImp.binary_digit_and_underscores JavaLexerImp.binary_digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = true;
		popD[ART_L_JavaLexerImp_binary_digit_and_underscores_3207] = true;
	}

	public void artTableInitialiser_120() {
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore] = "JavaLexerImp.binary_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore] = "binary_digit_or_underscore";
		artKindOfs[ART_L_JavaLexerImp_binary_digit_or_underscore] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3210] = "JavaLexerImp.binary_digit_or_underscore ::= . JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3210] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_or_underscore_3210] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_or_underscore_3210] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = "JavaLexerImp.binary_digit_or_underscore ::= JavaLexerImp.binary_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = true;
		popD[ART_L_JavaLexerImp_binary_digit_or_underscore_3212] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3214] = "JavaLexerImp.binary_digit_or_underscore ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3214] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_or_underscore_3214] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_or_underscore_3214] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_digit_or_underscore_3214] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3215] = "JavaLexerImp.binary_digit_or_underscore ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3215] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_or_underscore_3215] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		popD[ART_L_JavaLexerImp_binary_digit_or_underscore_3215] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = "JavaLexerImp.binary_digit_or_underscore ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = "";
		lhsL[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = ART_L_JavaLexerImp_binary_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = true;
		popD[ART_L_JavaLexerImp_binary_digit_or_underscore_3216] = true;
	}

	public void artTableInitialiser_121() {
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits] = "JavaLexerImp.binary_digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits] = "binary_digits";
		artKindOfs[ART_L_JavaLexerImp_binary_digits] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3173] = "JavaLexerImp.binary_digits ::= . JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3173] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3173] = ART_L_JavaLexerImp_binary_digits;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3173] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3175] = "JavaLexerImp.binary_digits ::= JavaLexerImp.binary_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3175] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3175] = ART_L_JavaLexerImp_binary_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digits_3175] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3175] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digits_3175] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digits_3175] = true;
		popD[ART_L_JavaLexerImp_binary_digits_3175] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3177] = "JavaLexerImp.binary_digits ::= . JavaLexerImp.binary_digit ( JavaLexerImp.binary_digit_and_underscores )? JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3177] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3177] = ART_L_JavaLexerImp_binary_digits;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3177] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3179] = "JavaLexerImp.binary_digits ::= JavaLexerImp.binary_digit . ( JavaLexerImp.binary_digit_and_underscores )? JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3179] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3179] = ART_L_JavaLexerImp_binary_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digits_3179] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3179] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_binary_digits_3179] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3184] = "JavaLexerImp.binary_digits ::= JavaLexerImp.binary_digit ( JavaLexerImp.binary_digit_and_underscores . )? JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3184] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3184] = ART_L_JavaLexerImp_binary_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digits_3184] = ART_L_JavaLexerImp_binary_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3184] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_binary_digits_3184] = ART_L_JavaLexerImp_binary_digits_3185;
		eoOPL[ART_L_JavaLexerImp_binary_digits_3184] = true;
		popD[ART_L_JavaLexerImp_binary_digits_3184] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3185] = "JavaLexerImp.binary_digits ::= JavaLexerImp.binary_digit ( JavaLexerImp.binary_digit_and_underscores )? . JavaLexerImp.binary_digit ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3185] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3185] = ART_L_JavaLexerImp_binary_digits;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3185] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_digits_3187] = "JavaLexerImp.binary_digits ::= JavaLexerImp.binary_digit ( JavaLexerImp.binary_digit_and_underscores )? JavaLexerImp.binary_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_digits_3187] = "";
		lhsL[ART_L_JavaLexerImp_binary_digits_3187] = ART_L_JavaLexerImp_binary_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_digits_3187] = ART_L_JavaLexerImp_binary_digit;
		artKindOfs[ART_L_JavaLexerImp_binary_digits_3187] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_digits_3187] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_digits_3187] = true;
		popD[ART_L_JavaLexerImp_binary_digits_3187] = true;
	}

	public void artTableInitialiser_122() {
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent] = "JavaLexerImp.binary_exponent ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent] = "binary_exponent";
		artKindOfs[ART_L_JavaLexerImp_binary_exponent] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3404] = "JavaLexerImp.binary_exponent ::= . ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3404] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3404] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3404] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3406] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3406] = "";
		lhsL[ART_A_JavaLexerImp_binary_exponent_3406] = ART_L_JavaLexerImp_binary_exponent;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3408] = "JavaLexerImp.binary_exponent ::= ( . `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3408] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3408] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3408] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_exponent_3408] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3409] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3409] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3409] = ART_L_JavaLexerImp_binary_exponent;
		popD[ART_L_JavaLexerImp_binary_exponent_3409] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3410] = "JavaLexerImp.binary_exponent ::= ( `p. | `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3410] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3410] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3410] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_binary_exponent_3410] = ART_L_JavaLexerImp_binary_exponent_3415;
		aL[ART_L_JavaLexerImp_binary_exponent_3410] = ART_L_JavaLexerImp_binary_exponent_3414;
		eoOPL[ART_L_JavaLexerImp_binary_exponent_3410] = true;
		popD[ART_L_JavaLexerImp_binary_exponent_3410] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3412] = "JavaLexerImp.binary_exponent ::= ( `p| . `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3412] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3412] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3412] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_exponent_3412] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3413] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3413] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3413] = ART_L_JavaLexerImp_binary_exponent;
		popD[ART_L_JavaLexerImp_binary_exponent_3413] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3414] = "JavaLexerImp.binary_exponent ::= ( `p| `P. ) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3414] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3414] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3414] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_binary_exponent_3414] = ART_L_JavaLexerImp_binary_exponent_3415;
		eoOPL[ART_L_JavaLexerImp_binary_exponent_3414] = true;
		popD[ART_L_JavaLexerImp_binary_exponent_3414] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3415] = "JavaLexerImp.binary_exponent ::= ( `p| `P) . ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3415] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3415] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3415] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3417] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3417] = "";
		lhsL[ART_A_JavaLexerImp_binary_exponent_3417] = ART_L_JavaLexerImp_binary_exponent;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3419] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( . `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3419] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3419] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3419] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_exponent_3419] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3420] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3420] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3420] = ART_L_JavaLexerImp_binary_exponent;
		popD[ART_L_JavaLexerImp_binary_exponent_3420] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3421] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+. | `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3421] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3421] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3421] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_binary_exponent_3421] = ART_L_JavaLexerImp_binary_exponent_3426;
		aL[ART_L_JavaLexerImp_binary_exponent_3421] = ART_L_JavaLexerImp_binary_exponent_3425;
		eoOPL[ART_L_JavaLexerImp_binary_exponent_3421] = true;
		popD[ART_L_JavaLexerImp_binary_exponent_3421] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3423] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| . `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3423] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3423] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3423] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_binary_exponent_3423] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3424] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3424] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3424] = ART_L_JavaLexerImp_binary_exponent;
		popD[ART_L_JavaLexerImp_binary_exponent_3424] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3425] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-. )? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3425] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3425] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3425] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_binary_exponent_3425] = ART_L_JavaLexerImp_binary_exponent_3426;
		eoOPL[ART_L_JavaLexerImp_binary_exponent_3425] = true;
		popD[ART_L_JavaLexerImp_binary_exponent_3425] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3426] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? . JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3426] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3426] = ART_L_JavaLexerImp_binary_exponent;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3426] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_binary_exponent_3428] = "JavaLexerImp.binary_exponent ::= ( `p| `P) ( `+| `-)? JavaLexerImp.digits . ";
		artLabelStrings[ART_L_JavaLexerImp_binary_exponent_3428] = "";
		lhsL[ART_L_JavaLexerImp_binary_exponent_3428] = ART_L_JavaLexerImp_binary_exponent;
		artSlotInstanceOfs[ART_L_JavaLexerImp_binary_exponent_3428] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_binary_exponent_3428] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_binary_exponent_3428] = true;
		eoR_pL[ART_L_JavaLexerImp_binary_exponent_3428] = true;
		popD[ART_L_JavaLexerImp_binary_exponent_3428] = true;
	}

	public void artTableInitialiser_123() {
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean] = "JavaLexerImp.boolean ";
		artLabelStrings[ART_L_JavaLexerImp_boolean] = "boolean";
		artKindOfs[ART_L_JavaLexerImp_boolean] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_289] = "JavaLexerImp.boolean ::= . `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_289] = "";
		lhsL[ART_L_JavaLexerImp_boolean_289] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_289] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_289] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_290] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_290] = "";
		lhsL[ART_L_JavaLexerImp_boolean_290] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_290] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_291] = "JavaLexerImp.boolean ::= `b. `o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_291] = "";
		lhsL[ART_L_JavaLexerImp_boolean_291] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_291] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_boolean_291] = true;
		popD[ART_L_JavaLexerImp_boolean_291] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_292] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_292] = "";
		lhsL[ART_L_JavaLexerImp_boolean_292] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_292] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_293] = "JavaLexerImp.boolean ::= `b`o. `o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_293] = "";
		lhsL[ART_L_JavaLexerImp_boolean_293] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_293] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_293] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_294] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_294] = "";
		lhsL[ART_L_JavaLexerImp_boolean_294] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_294] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_295] = "JavaLexerImp.boolean ::= `b`o`o. `l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_295] = "";
		lhsL[ART_L_JavaLexerImp_boolean_295] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_295] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_295] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_296] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_296] = "";
		lhsL[ART_L_JavaLexerImp_boolean_296] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_296] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_297] = "JavaLexerImp.boolean ::= `b`o`o`l. `e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_297] = "";
		lhsL[ART_L_JavaLexerImp_boolean_297] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_297] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_297] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_298] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_298] = "";
		lhsL[ART_L_JavaLexerImp_boolean_298] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_298] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_299] = "JavaLexerImp.boolean ::= `b`o`o`l`e. `a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_299] = "";
		lhsL[ART_L_JavaLexerImp_boolean_299] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_299] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_299] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_300] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_300] = "";
		lhsL[ART_L_JavaLexerImp_boolean_300] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_300] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_301] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a. `n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_301] = "";
		lhsL[ART_L_JavaLexerImp_boolean_301] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_301] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_boolean_301] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_302] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n";
		artLabelStrings[ART_L_JavaLexerImp_boolean_302] = "";
		lhsL[ART_L_JavaLexerImp_boolean_302] = ART_L_JavaLexerImp_boolean;
		popD[ART_L_JavaLexerImp_boolean_302] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_boolean_303] = "JavaLexerImp.boolean ::= `b`o`o`l`e`a`n. ";
		artLabelStrings[ART_L_JavaLexerImp_boolean_303] = "";
		lhsL[ART_L_JavaLexerImp_boolean_303] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_boolean_303] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_boolean_303] = true;
		eoR_pL[ART_L_JavaLexerImp_boolean_303] = true;
		popD[ART_L_JavaLexerImp_boolean_303] = true;
	}

	public void artTableInitialiser_124() {
		artLabelInternalStrings[ART_L_JavaLexerImp_break] = "JavaLexerImp.break ";
		artLabelStrings[ART_L_JavaLexerImp_break] = "break";
		artKindOfs[ART_L_JavaLexerImp_break] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_306] = "JavaLexerImp.break ::= . `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_306] = "";
		lhsL[ART_L_JavaLexerImp_break_306] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_306] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_break_306] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_307] = "JavaLexerImp.break ::= `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_307] = "";
		lhsL[ART_L_JavaLexerImp_break_307] = ART_L_JavaLexerImp_break;
		popD[ART_L_JavaLexerImp_break_307] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_308] = "JavaLexerImp.break ::= `b. `r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_308] = "";
		lhsL[ART_L_JavaLexerImp_break_308] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_308] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_break_308] = true;
		popD[ART_L_JavaLexerImp_break_308] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_309] = "JavaLexerImp.break ::= `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_309] = "";
		lhsL[ART_L_JavaLexerImp_break_309] = ART_L_JavaLexerImp_break;
		popD[ART_L_JavaLexerImp_break_309] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_310] = "JavaLexerImp.break ::= `b`r. `e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_310] = "";
		lhsL[ART_L_JavaLexerImp_break_310] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_310] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_break_310] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_311] = "JavaLexerImp.break ::= `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_311] = "";
		lhsL[ART_L_JavaLexerImp_break_311] = ART_L_JavaLexerImp_break;
		popD[ART_L_JavaLexerImp_break_311] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_312] = "JavaLexerImp.break ::= `b`r`e. `a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_312] = "";
		lhsL[ART_L_JavaLexerImp_break_312] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_312] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_break_312] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_313] = "JavaLexerImp.break ::= `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_313] = "";
		lhsL[ART_L_JavaLexerImp_break_313] = ART_L_JavaLexerImp_break;
		popD[ART_L_JavaLexerImp_break_313] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_314] = "JavaLexerImp.break ::= `b`r`e`a. `k";
		artLabelStrings[ART_L_JavaLexerImp_break_314] = "";
		lhsL[ART_L_JavaLexerImp_break_314] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_314] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_break_314] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_315] = "JavaLexerImp.break ::= `b`r`e`a`k";
		artLabelStrings[ART_L_JavaLexerImp_break_315] = "";
		lhsL[ART_L_JavaLexerImp_break_315] = ART_L_JavaLexerImp_break;
		popD[ART_L_JavaLexerImp_break_315] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_break_316] = "JavaLexerImp.break ::= `b`r`e`a`k. ";
		artLabelStrings[ART_L_JavaLexerImp_break_316] = "";
		lhsL[ART_L_JavaLexerImp_break_316] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_break_316] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_break_316] = true;
		eoR_pL[ART_L_JavaLexerImp_break_316] = true;
		popD[ART_L_JavaLexerImp_break_316] = true;
	}

	public void artTableInitialiser_125() {
		artLabelInternalStrings[ART_L_JavaLexerImp_byte] = "JavaLexerImp.byte ";
		artLabelStrings[ART_L_JavaLexerImp_byte] = "byte";
		artKindOfs[ART_L_JavaLexerImp_byte] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_319] = "JavaLexerImp.byte ::= . `b`y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_319] = "";
		lhsL[ART_L_JavaLexerImp_byte_319] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_byte_319] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_byte_319] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_320] = "JavaLexerImp.byte ::= `b`y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_320] = "";
		lhsL[ART_L_JavaLexerImp_byte_320] = ART_L_JavaLexerImp_byte;
		popD[ART_L_JavaLexerImp_byte_320] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_321] = "JavaLexerImp.byte ::= `b. `y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_321] = "";
		lhsL[ART_L_JavaLexerImp_byte_321] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_byte_321] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_byte_321] = true;
		popD[ART_L_JavaLexerImp_byte_321] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_322] = "JavaLexerImp.byte ::= `b`y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_322] = "";
		lhsL[ART_L_JavaLexerImp_byte_322] = ART_L_JavaLexerImp_byte;
		popD[ART_L_JavaLexerImp_byte_322] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_323] = "JavaLexerImp.byte ::= `b`y. `t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_323] = "";
		lhsL[ART_L_JavaLexerImp_byte_323] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_byte_323] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_byte_323] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_324] = "JavaLexerImp.byte ::= `b`y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_324] = "";
		lhsL[ART_L_JavaLexerImp_byte_324] = ART_L_JavaLexerImp_byte;
		popD[ART_L_JavaLexerImp_byte_324] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_325] = "JavaLexerImp.byte ::= `b`y`t. `e";
		artLabelStrings[ART_L_JavaLexerImp_byte_325] = "";
		lhsL[ART_L_JavaLexerImp_byte_325] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_byte_325] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_byte_325] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_326] = "JavaLexerImp.byte ::= `b`y`t`e";
		artLabelStrings[ART_L_JavaLexerImp_byte_326] = "";
		lhsL[ART_L_JavaLexerImp_byte_326] = ART_L_JavaLexerImp_byte;
		popD[ART_L_JavaLexerImp_byte_326] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_byte_327] = "JavaLexerImp.byte ::= `b`y`t`e. ";
		artLabelStrings[ART_L_JavaLexerImp_byte_327] = "";
		lhsL[ART_L_JavaLexerImp_byte_327] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_byte_327] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_byte_327] = true;
		eoR_pL[ART_L_JavaLexerImp_byte_327] = true;
		popD[ART_L_JavaLexerImp_byte_327] = true;
	}

	public void artTableInitialiser_126() {
		artLabelInternalStrings[ART_L_JavaLexerImp_case] = "JavaLexerImp.case ";
		artLabelStrings[ART_L_JavaLexerImp_case] = "case";
		artKindOfs[ART_L_JavaLexerImp_case] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_330] = "JavaLexerImp.case ::= . `c`a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_330] = "";
		lhsL[ART_L_JavaLexerImp_case_330] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_case_330] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_case_330] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_331] = "JavaLexerImp.case ::= `c`a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_331] = "";
		lhsL[ART_L_JavaLexerImp_case_331] = ART_L_JavaLexerImp_case;
		popD[ART_L_JavaLexerImp_case_331] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_332] = "JavaLexerImp.case ::= `c. `a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_332] = "";
		lhsL[ART_L_JavaLexerImp_case_332] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_case_332] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_case_332] = true;
		popD[ART_L_JavaLexerImp_case_332] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_333] = "JavaLexerImp.case ::= `c`a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_333] = "";
		lhsL[ART_L_JavaLexerImp_case_333] = ART_L_JavaLexerImp_case;
		popD[ART_L_JavaLexerImp_case_333] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_334] = "JavaLexerImp.case ::= `c`a. `s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_334] = "";
		lhsL[ART_L_JavaLexerImp_case_334] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_case_334] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_case_334] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_335] = "JavaLexerImp.case ::= `c`a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_335] = "";
		lhsL[ART_L_JavaLexerImp_case_335] = ART_L_JavaLexerImp_case;
		popD[ART_L_JavaLexerImp_case_335] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_336] = "JavaLexerImp.case ::= `c`a`s. `e";
		artLabelStrings[ART_L_JavaLexerImp_case_336] = "";
		lhsL[ART_L_JavaLexerImp_case_336] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_case_336] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_case_336] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_337] = "JavaLexerImp.case ::= `c`a`s`e";
		artLabelStrings[ART_L_JavaLexerImp_case_337] = "";
		lhsL[ART_L_JavaLexerImp_case_337] = ART_L_JavaLexerImp_case;
		popD[ART_L_JavaLexerImp_case_337] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_case_338] = "JavaLexerImp.case ::= `c`a`s`e. ";
		artLabelStrings[ART_L_JavaLexerImp_case_338] = "";
		lhsL[ART_L_JavaLexerImp_case_338] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_case_338] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_case_338] = true;
		eoR_pL[ART_L_JavaLexerImp_case_338] = true;
		popD[ART_L_JavaLexerImp_case_338] = true;
	}

	public void artTableInitialiser_127() {
		artLabelInternalStrings[ART_L_JavaLexerImp_catch] = "JavaLexerImp.catch ";
		artLabelStrings[ART_L_JavaLexerImp_catch] = "catch";
		artKindOfs[ART_L_JavaLexerImp_catch] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_341] = "JavaLexerImp.catch ::= . `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_341] = "";
		lhsL[ART_L_JavaLexerImp_catch_341] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_341] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_catch_341] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_342] = "JavaLexerImp.catch ::= `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_342] = "";
		lhsL[ART_L_JavaLexerImp_catch_342] = ART_L_JavaLexerImp_catch;
		popD[ART_L_JavaLexerImp_catch_342] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_343] = "JavaLexerImp.catch ::= `c. `a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_343] = "";
		lhsL[ART_L_JavaLexerImp_catch_343] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_343] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_catch_343] = true;
		popD[ART_L_JavaLexerImp_catch_343] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_344] = "JavaLexerImp.catch ::= `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_344] = "";
		lhsL[ART_L_JavaLexerImp_catch_344] = ART_L_JavaLexerImp_catch;
		popD[ART_L_JavaLexerImp_catch_344] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_345] = "JavaLexerImp.catch ::= `c`a. `t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_345] = "";
		lhsL[ART_L_JavaLexerImp_catch_345] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_345] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_catch_345] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_346] = "JavaLexerImp.catch ::= `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_346] = "";
		lhsL[ART_L_JavaLexerImp_catch_346] = ART_L_JavaLexerImp_catch;
		popD[ART_L_JavaLexerImp_catch_346] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_347] = "JavaLexerImp.catch ::= `c`a`t. `c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_347] = "";
		lhsL[ART_L_JavaLexerImp_catch_347] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_347] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_catch_347] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_348] = "JavaLexerImp.catch ::= `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_348] = "";
		lhsL[ART_L_JavaLexerImp_catch_348] = ART_L_JavaLexerImp_catch;
		popD[ART_L_JavaLexerImp_catch_348] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_349] = "JavaLexerImp.catch ::= `c`a`t`c. `h";
		artLabelStrings[ART_L_JavaLexerImp_catch_349] = "";
		lhsL[ART_L_JavaLexerImp_catch_349] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_349] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_catch_349] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_350] = "JavaLexerImp.catch ::= `c`a`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_catch_350] = "";
		lhsL[ART_L_JavaLexerImp_catch_350] = ART_L_JavaLexerImp_catch;
		popD[ART_L_JavaLexerImp_catch_350] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_catch_351] = "JavaLexerImp.catch ::= `c`a`t`c`h. ";
		artLabelStrings[ART_L_JavaLexerImp_catch_351] = "";
		lhsL[ART_L_JavaLexerImp_catch_351] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_catch_351] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_catch_351] = true;
		eoR_pL[ART_L_JavaLexerImp_catch_351] = true;
		popD[ART_L_JavaLexerImp_catch_351] = true;
	}

	public void artTableInitialiser_128() {
		artLabelInternalStrings[ART_L_JavaLexerImp_char] = "JavaLexerImp.char ";
		artLabelStrings[ART_L_JavaLexerImp_char] = "char";
		artKindOfs[ART_L_JavaLexerImp_char] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_354] = "JavaLexerImp.char ::= . `c`h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_354] = "";
		lhsL[ART_L_JavaLexerImp_char_354] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_char_354] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_char_354] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_355] = "JavaLexerImp.char ::= `c`h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_355] = "";
		lhsL[ART_L_JavaLexerImp_char_355] = ART_L_JavaLexerImp_char;
		popD[ART_L_JavaLexerImp_char_355] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_356] = "JavaLexerImp.char ::= `c. `h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_356] = "";
		lhsL[ART_L_JavaLexerImp_char_356] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_char_356] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_char_356] = true;
		popD[ART_L_JavaLexerImp_char_356] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_357] = "JavaLexerImp.char ::= `c`h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_357] = "";
		lhsL[ART_L_JavaLexerImp_char_357] = ART_L_JavaLexerImp_char;
		popD[ART_L_JavaLexerImp_char_357] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_358] = "JavaLexerImp.char ::= `c`h. `a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_358] = "";
		lhsL[ART_L_JavaLexerImp_char_358] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_char_358] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_char_358] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_359] = "JavaLexerImp.char ::= `c`h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_359] = "";
		lhsL[ART_L_JavaLexerImp_char_359] = ART_L_JavaLexerImp_char;
		popD[ART_L_JavaLexerImp_char_359] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_360] = "JavaLexerImp.char ::= `c`h`a. `r";
		artLabelStrings[ART_L_JavaLexerImp_char_360] = "";
		lhsL[ART_L_JavaLexerImp_char_360] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_char_360] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_char_360] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_361] = "JavaLexerImp.char ::= `c`h`a`r";
		artLabelStrings[ART_L_JavaLexerImp_char_361] = "";
		lhsL[ART_L_JavaLexerImp_char_361] = ART_L_JavaLexerImp_char;
		popD[ART_L_JavaLexerImp_char_361] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_char_362] = "JavaLexerImp.char ::= `c`h`a`r. ";
		artLabelStrings[ART_L_JavaLexerImp_char_362] = "";
		lhsL[ART_L_JavaLexerImp_char_362] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_char_362] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_char_362] = true;
		eoR_pL[ART_L_JavaLexerImp_char_362] = true;
		popD[ART_L_JavaLexerImp_char_362] = true;
	}

	public void artTableInitialiser_129() {
		artLabelInternalStrings[ART_L_JavaLexerImp_character] = "JavaLexerImp.character ";
		artLabelStrings[ART_L_JavaLexerImp_character] = "character";
		artKindOfs[ART_L_JavaLexerImp_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3463] = "JavaLexerImp.character ::= . JavaLexerImp.single_character ";
		artLabelStrings[ART_L_JavaLexerImp_character_3463] = "";
		lhsL[ART_L_JavaLexerImp_character_3463] = ART_L_JavaLexerImp_character;
		artKindOfs[ART_L_JavaLexerImp_character_3463] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3465] = "JavaLexerImp.character ::= JavaLexerImp.single_character . ";
		artLabelStrings[ART_L_JavaLexerImp_character_3465] = "";
		lhsL[ART_L_JavaLexerImp_character_3465] = ART_L_JavaLexerImp_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_character_3465] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_character_3465] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_character_3465] = true;
		eoR_pL[ART_L_JavaLexerImp_character_3465] = true;
		popD[ART_L_JavaLexerImp_character_3465] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3467] = "JavaLexerImp.character ::= . JavaLexerImp.simple_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_character_3467] = "";
		lhsL[ART_L_JavaLexerImp_character_3467] = ART_L_JavaLexerImp_character;
		artKindOfs[ART_L_JavaLexerImp_character_3467] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3469] = "JavaLexerImp.character ::= JavaLexerImp.simple_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_character_3469] = "";
		lhsL[ART_L_JavaLexerImp_character_3469] = ART_L_JavaLexerImp_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_character_3469] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_character_3469] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_character_3469] = true;
		eoR_pL[ART_L_JavaLexerImp_character_3469] = true;
		popD[ART_L_JavaLexerImp_character_3469] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3471] = "JavaLexerImp.character ::= . JavaLexerImp.hexadecimal_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_character_3471] = "";
		lhsL[ART_L_JavaLexerImp_character_3471] = ART_L_JavaLexerImp_character;
		artKindOfs[ART_L_JavaLexerImp_character_3471] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3473] = "JavaLexerImp.character ::= JavaLexerImp.hexadecimal_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_character_3473] = "";
		lhsL[ART_L_JavaLexerImp_character_3473] = ART_L_JavaLexerImp_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_character_3473] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_character_3473] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_character_3473] = true;
		eoR_pL[ART_L_JavaLexerImp_character_3473] = true;
		popD[ART_L_JavaLexerImp_character_3473] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3475] = "JavaLexerImp.character ::= . JavaLexerImp.unicode_character_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_character_3475] = "";
		lhsL[ART_L_JavaLexerImp_character_3475] = ART_L_JavaLexerImp_character;
		artKindOfs[ART_L_JavaLexerImp_character_3475] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_character_3477] = "JavaLexerImp.character ::= JavaLexerImp.unicode_character_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_character_3477] = "";
		lhsL[ART_L_JavaLexerImp_character_3477] = ART_L_JavaLexerImp_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_character_3477] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_character_3477] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_character_3477] = true;
		eoR_pL[ART_L_JavaLexerImp_character_3477] = true;
		popD[ART_L_JavaLexerImp_character_3477] = true;
	}

	public void artTableInitialiser_130() {
		artLabelInternalStrings[ART_L_JavaLexerImp_class] = "JavaLexerImp.class ";
		artLabelStrings[ART_L_JavaLexerImp_class] = "class";
		artKindOfs[ART_L_JavaLexerImp_class] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_365] = "JavaLexerImp.class ::= . `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_365] = "";
		lhsL[ART_L_JavaLexerImp_class_365] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_365] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_class_365] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_366] = "JavaLexerImp.class ::= `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_366] = "";
		lhsL[ART_L_JavaLexerImp_class_366] = ART_L_JavaLexerImp_class;
		popD[ART_L_JavaLexerImp_class_366] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_367] = "JavaLexerImp.class ::= `c. `l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_367] = "";
		lhsL[ART_L_JavaLexerImp_class_367] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_367] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_class_367] = true;
		popD[ART_L_JavaLexerImp_class_367] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_368] = "JavaLexerImp.class ::= `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_368] = "";
		lhsL[ART_L_JavaLexerImp_class_368] = ART_L_JavaLexerImp_class;
		popD[ART_L_JavaLexerImp_class_368] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_369] = "JavaLexerImp.class ::= `c`l. `a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_369] = "";
		lhsL[ART_L_JavaLexerImp_class_369] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_369] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_class_369] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_370] = "JavaLexerImp.class ::= `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_370] = "";
		lhsL[ART_L_JavaLexerImp_class_370] = ART_L_JavaLexerImp_class;
		popD[ART_L_JavaLexerImp_class_370] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_371] = "JavaLexerImp.class ::= `c`l`a. `s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_371] = "";
		lhsL[ART_L_JavaLexerImp_class_371] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_371] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_class_371] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_372] = "JavaLexerImp.class ::= `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_372] = "";
		lhsL[ART_L_JavaLexerImp_class_372] = ART_L_JavaLexerImp_class;
		popD[ART_L_JavaLexerImp_class_372] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_373] = "JavaLexerImp.class ::= `c`l`a`s. `s";
		artLabelStrings[ART_L_JavaLexerImp_class_373] = "";
		lhsL[ART_L_JavaLexerImp_class_373] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_373] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_class_373] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_374] = "JavaLexerImp.class ::= `c`l`a`s`s";
		artLabelStrings[ART_L_JavaLexerImp_class_374] = "";
		lhsL[ART_L_JavaLexerImp_class_374] = ART_L_JavaLexerImp_class;
		popD[ART_L_JavaLexerImp_class_374] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_class_375] = "JavaLexerImp.class ::= `c`l`a`s`s. ";
		artLabelStrings[ART_L_JavaLexerImp_class_375] = "";
		lhsL[ART_L_JavaLexerImp_class_375] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_class_375] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_class_375] = true;
		eoR_pL[ART_L_JavaLexerImp_class_375] = true;
		popD[ART_L_JavaLexerImp_class_375] = true;
	}

	public void artTableInitialiser_131() {
		artLabelInternalStrings[ART_L_JavaLexerImp_const] = "JavaLexerImp.const ";
		artLabelStrings[ART_L_JavaLexerImp_const] = "const";
		artKindOfs[ART_L_JavaLexerImp_const] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_378] = "JavaLexerImp.const ::= . `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_378] = "";
		lhsL[ART_L_JavaLexerImp_const_378] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_378] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_const_378] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_379] = "JavaLexerImp.const ::= `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_379] = "";
		lhsL[ART_L_JavaLexerImp_const_379] = ART_L_JavaLexerImp_const;
		popD[ART_L_JavaLexerImp_const_379] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_380] = "JavaLexerImp.const ::= `c. `o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_380] = "";
		lhsL[ART_L_JavaLexerImp_const_380] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_380] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_const_380] = true;
		popD[ART_L_JavaLexerImp_const_380] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_381] = "JavaLexerImp.const ::= `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_381] = "";
		lhsL[ART_L_JavaLexerImp_const_381] = ART_L_JavaLexerImp_const;
		popD[ART_L_JavaLexerImp_const_381] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_382] = "JavaLexerImp.const ::= `c`o. `n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_382] = "";
		lhsL[ART_L_JavaLexerImp_const_382] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_382] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_const_382] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_383] = "JavaLexerImp.const ::= `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_383] = "";
		lhsL[ART_L_JavaLexerImp_const_383] = ART_L_JavaLexerImp_const;
		popD[ART_L_JavaLexerImp_const_383] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_384] = "JavaLexerImp.const ::= `c`o`n. `s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_384] = "";
		lhsL[ART_L_JavaLexerImp_const_384] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_384] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_const_384] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_385] = "JavaLexerImp.const ::= `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_385] = "";
		lhsL[ART_L_JavaLexerImp_const_385] = ART_L_JavaLexerImp_const;
		popD[ART_L_JavaLexerImp_const_385] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_386] = "JavaLexerImp.const ::= `c`o`n`s. `t";
		artLabelStrings[ART_L_JavaLexerImp_const_386] = "";
		lhsL[ART_L_JavaLexerImp_const_386] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_386] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_const_386] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_387] = "JavaLexerImp.const ::= `c`o`n`s`t";
		artLabelStrings[ART_L_JavaLexerImp_const_387] = "";
		lhsL[ART_L_JavaLexerImp_const_387] = ART_L_JavaLexerImp_const;
		popD[ART_L_JavaLexerImp_const_387] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_const_388] = "JavaLexerImp.const ::= `c`o`n`s`t. ";
		artLabelStrings[ART_L_JavaLexerImp_const_388] = "";
		lhsL[ART_L_JavaLexerImp_const_388] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_const_388] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_const_388] = true;
		eoR_pL[ART_L_JavaLexerImp_const_388] = true;
		popD[ART_L_JavaLexerImp_const_388] = true;
	}

	public void artTableInitialiser_132() {
		artLabelInternalStrings[ART_L_JavaLexerImp_continue] = "JavaLexerImp.continue ";
		artLabelStrings[ART_L_JavaLexerImp_continue] = "continue";
		artKindOfs[ART_L_JavaLexerImp_continue] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_391] = "JavaLexerImp.continue ::= . `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_391] = "";
		lhsL[ART_L_JavaLexerImp_continue_391] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_391] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_391] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_392] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_392] = "";
		lhsL[ART_L_JavaLexerImp_continue_392] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_392] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_393] = "JavaLexerImp.continue ::= `c. `o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_393] = "";
		lhsL[ART_L_JavaLexerImp_continue_393] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_393] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_continue_393] = true;
		popD[ART_L_JavaLexerImp_continue_393] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_394] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_394] = "";
		lhsL[ART_L_JavaLexerImp_continue_394] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_394] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_395] = "JavaLexerImp.continue ::= `c`o. `n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_395] = "";
		lhsL[ART_L_JavaLexerImp_continue_395] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_395] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_395] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_396] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_396] = "";
		lhsL[ART_L_JavaLexerImp_continue_396] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_396] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_397] = "JavaLexerImp.continue ::= `c`o`n. `t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_397] = "";
		lhsL[ART_L_JavaLexerImp_continue_397] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_397] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_397] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_398] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_398] = "";
		lhsL[ART_L_JavaLexerImp_continue_398] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_398] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_399] = "JavaLexerImp.continue ::= `c`o`n`t. `i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_399] = "";
		lhsL[ART_L_JavaLexerImp_continue_399] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_399] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_399] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_400] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_400] = "";
		lhsL[ART_L_JavaLexerImp_continue_400] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_400] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_401] = "JavaLexerImp.continue ::= `c`o`n`t`i. `n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_401] = "";
		lhsL[ART_L_JavaLexerImp_continue_401] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_401] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_401] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_402] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_402] = "";
		lhsL[ART_L_JavaLexerImp_continue_402] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_402] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_403] = "JavaLexerImp.continue ::= `c`o`n`t`i`n. `u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_403] = "";
		lhsL[ART_L_JavaLexerImp_continue_403] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_403] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_403] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_404] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_404] = "";
		lhsL[ART_L_JavaLexerImp_continue_404] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_404] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_405] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u. `e";
		artLabelStrings[ART_L_JavaLexerImp_continue_405] = "";
		lhsL[ART_L_JavaLexerImp_continue_405] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_405] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_continue_405] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_406] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e";
		artLabelStrings[ART_L_JavaLexerImp_continue_406] = "";
		lhsL[ART_L_JavaLexerImp_continue_406] = ART_L_JavaLexerImp_continue;
		popD[ART_L_JavaLexerImp_continue_406] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_continue_407] = "JavaLexerImp.continue ::= `c`o`n`t`i`n`u`e. ";
		artLabelStrings[ART_L_JavaLexerImp_continue_407] = "";
		lhsL[ART_L_JavaLexerImp_continue_407] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_continue_407] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_continue_407] = true;
		eoR_pL[ART_L_JavaLexerImp_continue_407] = true;
		popD[ART_L_JavaLexerImp_continue_407] = true;
	}

	public void artTableInitialiser_133() {
		artLabelInternalStrings[ART_L_JavaLexerImp_default] = "JavaLexerImp.default ";
		artLabelStrings[ART_L_JavaLexerImp_default] = "default";
		artKindOfs[ART_L_JavaLexerImp_default] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_410] = "JavaLexerImp.default ::= . `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_410] = "";
		lhsL[ART_L_JavaLexerImp_default_410] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_410] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_410] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_411] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_411] = "";
		lhsL[ART_L_JavaLexerImp_default_411] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_411] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_412] = "JavaLexerImp.default ::= `d. `e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_412] = "";
		lhsL[ART_L_JavaLexerImp_default_412] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_412] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_default_412] = true;
		popD[ART_L_JavaLexerImp_default_412] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_413] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_413] = "";
		lhsL[ART_L_JavaLexerImp_default_413] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_413] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_414] = "JavaLexerImp.default ::= `d`e. `f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_414] = "";
		lhsL[ART_L_JavaLexerImp_default_414] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_414] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_414] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_415] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_415] = "";
		lhsL[ART_L_JavaLexerImp_default_415] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_415] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_416] = "JavaLexerImp.default ::= `d`e`f. `a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_416] = "";
		lhsL[ART_L_JavaLexerImp_default_416] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_416] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_416] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_417] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_417] = "";
		lhsL[ART_L_JavaLexerImp_default_417] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_417] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_418] = "JavaLexerImp.default ::= `d`e`f`a. `u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_418] = "";
		lhsL[ART_L_JavaLexerImp_default_418] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_418] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_418] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_419] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_419] = "";
		lhsL[ART_L_JavaLexerImp_default_419] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_419] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_420] = "JavaLexerImp.default ::= `d`e`f`a`u. `l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_420] = "";
		lhsL[ART_L_JavaLexerImp_default_420] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_420] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_420] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_421] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_421] = "";
		lhsL[ART_L_JavaLexerImp_default_421] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_421] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_422] = "JavaLexerImp.default ::= `d`e`f`a`u`l. `t";
		artLabelStrings[ART_L_JavaLexerImp_default_422] = "";
		lhsL[ART_L_JavaLexerImp_default_422] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_422] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_default_422] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_423] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t";
		artLabelStrings[ART_L_JavaLexerImp_default_423] = "";
		lhsL[ART_L_JavaLexerImp_default_423] = ART_L_JavaLexerImp_default;
		popD[ART_L_JavaLexerImp_default_423] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_default_424] = "JavaLexerImp.default ::= `d`e`f`a`u`l`t. ";
		artLabelStrings[ART_L_JavaLexerImp_default_424] = "";
		lhsL[ART_L_JavaLexerImp_default_424] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_default_424] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_default_424] = true;
		eoR_pL[ART_L_JavaLexerImp_default_424] = true;
		popD[ART_L_JavaLexerImp_default_424] = true;
	}

	public void artTableInitialiser_134() {
		artLabelInternalStrings[ART_L_JavaLexerImp_digit] = "JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digit] = "digit";
		artKindOfs[ART_L_JavaLexerImp_digit] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_2961] = "JavaLexerImp.digit ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_digit_2961] = "";
		lhsL[ART_L_JavaLexerImp_digit_2961] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digit_2961] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_digit_2961] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_2962] = "JavaLexerImp.digit ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_digit_2962] = "";
		lhsL[ART_L_JavaLexerImp_digit_2962] = ART_L_JavaLexerImp_digit;
		popD[ART_L_JavaLexerImp_digit_2962] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_2963] = "JavaLexerImp.digit ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_digit_2963] = "";
		lhsL[ART_L_JavaLexerImp_digit_2963] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digit_2963] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_2963] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_2963] = true;
		popD[ART_L_JavaLexerImp_digit_2963] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_2965] = "JavaLexerImp.digit ::= . JavaLexerImp.non_zero_digit ";
		artLabelStrings[ART_L_JavaLexerImp_digit_2965] = "";
		lhsL[ART_L_JavaLexerImp_digit_2965] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digit_2965] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_2967] = "JavaLexerImp.digit ::= JavaLexerImp.non_zero_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_digit_2967] = "";
		lhsL[ART_L_JavaLexerImp_digit_2967] = ART_L_JavaLexerImp_digit;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digit_2967] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_digit_2967] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_2967] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_2967] = true;
		popD[ART_L_JavaLexerImp_digit_2967] = true;
	}

	public void artTableInitialiser_135() {
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores] = "JavaLexerImp.digit_and_underscores ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores] = "digit_and_underscores";
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores_2970] = "JavaLexerImp.digit_and_underscores ::= . JavaLexerImp.digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores_2970] = "";
		lhsL[ART_L_JavaLexerImp_digit_and_underscores_2970] = ART_L_JavaLexerImp_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores_2970] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores_2972] = "JavaLexerImp.digit_and_underscores ::= JavaLexerImp.digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores_2972] = "";
		lhsL[ART_L_JavaLexerImp_digit_and_underscores_2972] = ART_L_JavaLexerImp_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digit_and_underscores_2972] = ART_L_JavaLexerImp_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores_2972] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_and_underscores_2972] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_and_underscores_2972] = true;
		popD[ART_L_JavaLexerImp_digit_and_underscores_2972] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores_2974] = "JavaLexerImp.digit_and_underscores ::= . JavaLexerImp.digit_and_underscores JavaLexerImp.digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores_2974] = "";
		lhsL[ART_L_JavaLexerImp_digit_and_underscores_2974] = ART_L_JavaLexerImp_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores_2974] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores_2976] = "JavaLexerImp.digit_and_underscores ::= JavaLexerImp.digit_and_underscores . JavaLexerImp.digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores_2976] = "";
		lhsL[ART_L_JavaLexerImp_digit_and_underscores_2976] = ART_L_JavaLexerImp_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digit_and_underscores_2976] = ART_L_JavaLexerImp_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores_2976] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_digit_and_underscores_2976] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_and_underscores_2978] = "JavaLexerImp.digit_and_underscores ::= JavaLexerImp.digit_and_underscores JavaLexerImp.digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_digit_and_underscores_2978] = "";
		lhsL[ART_L_JavaLexerImp_digit_and_underscores_2978] = ART_L_JavaLexerImp_digit_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digit_and_underscores_2978] = ART_L_JavaLexerImp_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_digit_and_underscores_2978] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_and_underscores_2978] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_and_underscores_2978] = true;
		popD[ART_L_JavaLexerImp_digit_and_underscores_2978] = true;
	}

	public void artTableInitialiser_136() {
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore] = "JavaLexerImp.digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore] = "digit_or_underscore";
		artKindOfs[ART_L_JavaLexerImp_digit_or_underscore] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore_2981] = "JavaLexerImp.digit_or_underscore ::= . JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore_2981] = "";
		lhsL[ART_L_JavaLexerImp_digit_or_underscore_2981] = ART_L_JavaLexerImp_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_digit_or_underscore_2981] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore_2983] = "JavaLexerImp.digit_or_underscore ::= JavaLexerImp.digit . ";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore_2983] = "";
		lhsL[ART_L_JavaLexerImp_digit_or_underscore_2983] = ART_L_JavaLexerImp_digit_or_underscore;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digit_or_underscore_2983] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digit_or_underscore_2983] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_or_underscore_2983] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_or_underscore_2983] = true;
		popD[ART_L_JavaLexerImp_digit_or_underscore_2983] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore_2985] = "JavaLexerImp.digit_or_underscore ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore_2985] = "";
		lhsL[ART_L_JavaLexerImp_digit_or_underscore_2985] = ART_L_JavaLexerImp_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_digit_or_underscore_2985] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_digit_or_underscore_2985] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore_2986] = "JavaLexerImp.digit_or_underscore ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore_2986] = "";
		lhsL[ART_L_JavaLexerImp_digit_or_underscore_2986] = ART_L_JavaLexerImp_digit_or_underscore;
		popD[ART_L_JavaLexerImp_digit_or_underscore_2986] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digit_or_underscore_2987] = "JavaLexerImp.digit_or_underscore ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_digit_or_underscore_2987] = "";
		lhsL[ART_L_JavaLexerImp_digit_or_underscore_2987] = ART_L_JavaLexerImp_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_digit_or_underscore_2987] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digit_or_underscore_2987] = true;
		eoR_pL[ART_L_JavaLexerImp_digit_or_underscore_2987] = true;
		popD[ART_L_JavaLexerImp_digit_or_underscore_2987] = true;
	}

	public void artTableInitialiser_137() {
		artLabelInternalStrings[ART_L_JavaLexerImp_digits] = "JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_digits] = "digits";
		artKindOfs[ART_L_JavaLexerImp_digits] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2944] = "JavaLexerImp.digits ::= . JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2944] = "";
		lhsL[ART_L_JavaLexerImp_digits_2944] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_digits_2944] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2946] = "JavaLexerImp.digits ::= JavaLexerImp.digit . ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2946] = "";
		lhsL[ART_L_JavaLexerImp_digits_2946] = ART_L_JavaLexerImp_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digits_2946] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digits_2946] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digits_2946] = true;
		eoR_pL[ART_L_JavaLexerImp_digits_2946] = true;
		popD[ART_L_JavaLexerImp_digits_2946] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2948] = "JavaLexerImp.digits ::= . JavaLexerImp.digit ( JavaLexerImp.digit_and_underscores )? JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2948] = "";
		lhsL[ART_L_JavaLexerImp_digits_2948] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_digits_2948] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2950] = "JavaLexerImp.digits ::= JavaLexerImp.digit . ( JavaLexerImp.digit_and_underscores )? JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2950] = "";
		lhsL[ART_L_JavaLexerImp_digits_2950] = ART_L_JavaLexerImp_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digits_2950] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digits_2950] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_digits_2950] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2955] = "JavaLexerImp.digits ::= JavaLexerImp.digit ( JavaLexerImp.digit_and_underscores . )? JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2955] = "";
		lhsL[ART_L_JavaLexerImp_digits_2955] = ART_L_JavaLexerImp_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digits_2955] = ART_L_JavaLexerImp_digit_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_digits_2955] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_digits_2955] = ART_L_JavaLexerImp_digits_2956;
		eoOPL[ART_L_JavaLexerImp_digits_2955] = true;
		popD[ART_L_JavaLexerImp_digits_2955] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2956] = "JavaLexerImp.digits ::= JavaLexerImp.digit ( JavaLexerImp.digit_and_underscores )? . JavaLexerImp.digit ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2956] = "";
		lhsL[ART_L_JavaLexerImp_digits_2956] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_digits_2956] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_digits_2958] = "JavaLexerImp.digits ::= JavaLexerImp.digit ( JavaLexerImp.digit_and_underscores )? JavaLexerImp.digit . ";
		artLabelStrings[ART_L_JavaLexerImp_digits_2958] = "";
		lhsL[ART_L_JavaLexerImp_digits_2958] = ART_L_JavaLexerImp_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_digits_2958] = ART_L_JavaLexerImp_digit;
		artKindOfs[ART_L_JavaLexerImp_digits_2958] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_digits_2958] = true;
		eoR_pL[ART_L_JavaLexerImp_digits_2958] = true;
		popD[ART_L_JavaLexerImp_digits_2958] = true;
	}

	public void artTableInitialiser_138() {
		artLabelInternalStrings[ART_L_JavaLexerImp_do] = "JavaLexerImp.do ";
		artLabelStrings[ART_L_JavaLexerImp_do] = "do";
		artKindOfs[ART_L_JavaLexerImp_do] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_do_427] = "JavaLexerImp.do ::= . `d`o";
		artLabelStrings[ART_L_JavaLexerImp_do_427] = "";
		lhsL[ART_L_JavaLexerImp_do_427] = ART_L_JavaLexerImp_do;
		artKindOfs[ART_L_JavaLexerImp_do_427] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_do_427] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_do_428] = "JavaLexerImp.do ::= `d`o";
		artLabelStrings[ART_L_JavaLexerImp_do_428] = "";
		lhsL[ART_L_JavaLexerImp_do_428] = ART_L_JavaLexerImp_do;
		popD[ART_L_JavaLexerImp_do_428] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_do_429] = "JavaLexerImp.do ::= `d. `o";
		artLabelStrings[ART_L_JavaLexerImp_do_429] = "";
		lhsL[ART_L_JavaLexerImp_do_429] = ART_L_JavaLexerImp_do;
		artKindOfs[ART_L_JavaLexerImp_do_429] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_do_429] = true;
		popD[ART_L_JavaLexerImp_do_429] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_do_430] = "JavaLexerImp.do ::= `d`o";
		artLabelStrings[ART_L_JavaLexerImp_do_430] = "";
		lhsL[ART_L_JavaLexerImp_do_430] = ART_L_JavaLexerImp_do;
		popD[ART_L_JavaLexerImp_do_430] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_do_431] = "JavaLexerImp.do ::= `d`o. ";
		artLabelStrings[ART_L_JavaLexerImp_do_431] = "";
		lhsL[ART_L_JavaLexerImp_do_431] = ART_L_JavaLexerImp_do;
		artKindOfs[ART_L_JavaLexerImp_do_431] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_do_431] = true;
		eoR_pL[ART_L_JavaLexerImp_do_431] = true;
		popD[ART_L_JavaLexerImp_do_431] = true;
	}

	public void artTableInitialiser_139() {
		artLabelInternalStrings[ART_L_JavaLexerImp_double] = "JavaLexerImp.double ";
		artLabelStrings[ART_L_JavaLexerImp_double] = "double";
		artKindOfs[ART_L_JavaLexerImp_double] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_434] = "JavaLexerImp.double ::= . `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_434] = "";
		lhsL[ART_L_JavaLexerImp_double_434] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_434] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_double_434] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_435] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_435] = "";
		lhsL[ART_L_JavaLexerImp_double_435] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_435] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_436] = "JavaLexerImp.double ::= `d. `o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_436] = "";
		lhsL[ART_L_JavaLexerImp_double_436] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_436] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_double_436] = true;
		popD[ART_L_JavaLexerImp_double_436] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_437] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_437] = "";
		lhsL[ART_L_JavaLexerImp_double_437] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_437] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_438] = "JavaLexerImp.double ::= `d`o. `u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_438] = "";
		lhsL[ART_L_JavaLexerImp_double_438] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_438] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_double_438] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_439] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_439] = "";
		lhsL[ART_L_JavaLexerImp_double_439] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_439] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_440] = "JavaLexerImp.double ::= `d`o`u. `b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_440] = "";
		lhsL[ART_L_JavaLexerImp_double_440] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_440] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_double_440] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_441] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_441] = "";
		lhsL[ART_L_JavaLexerImp_double_441] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_441] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_442] = "JavaLexerImp.double ::= `d`o`u`b. `l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_442] = "";
		lhsL[ART_L_JavaLexerImp_double_442] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_442] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_double_442] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_443] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_443] = "";
		lhsL[ART_L_JavaLexerImp_double_443] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_443] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_444] = "JavaLexerImp.double ::= `d`o`u`b`l. `e";
		artLabelStrings[ART_L_JavaLexerImp_double_444] = "";
		lhsL[ART_L_JavaLexerImp_double_444] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_444] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_double_444] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_445] = "JavaLexerImp.double ::= `d`o`u`b`l`e";
		artLabelStrings[ART_L_JavaLexerImp_double_445] = "";
		lhsL[ART_L_JavaLexerImp_double_445] = ART_L_JavaLexerImp_double;
		popD[ART_L_JavaLexerImp_double_445] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_double_446] = "JavaLexerImp.double ::= `d`o`u`b`l`e. ";
		artLabelStrings[ART_L_JavaLexerImp_double_446] = "";
		lhsL[ART_L_JavaLexerImp_double_446] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_double_446] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_double_446] = true;
		eoR_pL[ART_L_JavaLexerImp_double_446] = true;
		popD[ART_L_JavaLexerImp_double_446] = true;
	}

	public void artTableInitialiser_140() {
		artLabelInternalStrings[ART_L_JavaLexerImp_else] = "JavaLexerImp.else ";
		artLabelStrings[ART_L_JavaLexerImp_else] = "else";
		artKindOfs[ART_L_JavaLexerImp_else] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_449] = "JavaLexerImp.else ::= . `e`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_449] = "";
		lhsL[ART_L_JavaLexerImp_else_449] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_else_449] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_else_449] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_450] = "JavaLexerImp.else ::= `e`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_450] = "";
		lhsL[ART_L_JavaLexerImp_else_450] = ART_L_JavaLexerImp_else;
		popD[ART_L_JavaLexerImp_else_450] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_451] = "JavaLexerImp.else ::= `e. `l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_451] = "";
		lhsL[ART_L_JavaLexerImp_else_451] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_else_451] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_else_451] = true;
		popD[ART_L_JavaLexerImp_else_451] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_452] = "JavaLexerImp.else ::= `e`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_452] = "";
		lhsL[ART_L_JavaLexerImp_else_452] = ART_L_JavaLexerImp_else;
		popD[ART_L_JavaLexerImp_else_452] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_453] = "JavaLexerImp.else ::= `e`l. `s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_453] = "";
		lhsL[ART_L_JavaLexerImp_else_453] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_else_453] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_else_453] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_454] = "JavaLexerImp.else ::= `e`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_454] = "";
		lhsL[ART_L_JavaLexerImp_else_454] = ART_L_JavaLexerImp_else;
		popD[ART_L_JavaLexerImp_else_454] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_455] = "JavaLexerImp.else ::= `e`l`s. `e";
		artLabelStrings[ART_L_JavaLexerImp_else_455] = "";
		lhsL[ART_L_JavaLexerImp_else_455] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_else_455] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_else_455] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_456] = "JavaLexerImp.else ::= `e`l`s`e";
		artLabelStrings[ART_L_JavaLexerImp_else_456] = "";
		lhsL[ART_L_JavaLexerImp_else_456] = ART_L_JavaLexerImp_else;
		popD[ART_L_JavaLexerImp_else_456] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_else_457] = "JavaLexerImp.else ::= `e`l`s`e. ";
		artLabelStrings[ART_L_JavaLexerImp_else_457] = "";
		lhsL[ART_L_JavaLexerImp_else_457] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_else_457] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_else_457] = true;
		eoR_pL[ART_L_JavaLexerImp_else_457] = true;
		popD[ART_L_JavaLexerImp_else_457] = true;
	}

	public void artTableInitialiser_141() {
		artLabelInternalStrings[ART_L_JavaLexerImp_enum] = "JavaLexerImp.enum ";
		artLabelStrings[ART_L_JavaLexerImp_enum] = "enum";
		artKindOfs[ART_L_JavaLexerImp_enum] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_460] = "JavaLexerImp.enum ::= . `e`n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_460] = "";
		lhsL[ART_L_JavaLexerImp_enum_460] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_enum_460] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_enum_460] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_461] = "JavaLexerImp.enum ::= `e`n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_461] = "";
		lhsL[ART_L_JavaLexerImp_enum_461] = ART_L_JavaLexerImp_enum;
		popD[ART_L_JavaLexerImp_enum_461] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_462] = "JavaLexerImp.enum ::= `e. `n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_462] = "";
		lhsL[ART_L_JavaLexerImp_enum_462] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_enum_462] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_enum_462] = true;
		popD[ART_L_JavaLexerImp_enum_462] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_463] = "JavaLexerImp.enum ::= `e`n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_463] = "";
		lhsL[ART_L_JavaLexerImp_enum_463] = ART_L_JavaLexerImp_enum;
		popD[ART_L_JavaLexerImp_enum_463] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_464] = "JavaLexerImp.enum ::= `e`n. `u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_464] = "";
		lhsL[ART_L_JavaLexerImp_enum_464] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_enum_464] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_enum_464] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_465] = "JavaLexerImp.enum ::= `e`n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_465] = "";
		lhsL[ART_L_JavaLexerImp_enum_465] = ART_L_JavaLexerImp_enum;
		popD[ART_L_JavaLexerImp_enum_465] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_466] = "JavaLexerImp.enum ::= `e`n`u. `m";
		artLabelStrings[ART_L_JavaLexerImp_enum_466] = "";
		lhsL[ART_L_JavaLexerImp_enum_466] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_enum_466] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_enum_466] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_467] = "JavaLexerImp.enum ::= `e`n`u`m";
		artLabelStrings[ART_L_JavaLexerImp_enum_467] = "";
		lhsL[ART_L_JavaLexerImp_enum_467] = ART_L_JavaLexerImp_enum;
		popD[ART_L_JavaLexerImp_enum_467] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_enum_468] = "JavaLexerImp.enum ::= `e`n`u`m. ";
		artLabelStrings[ART_L_JavaLexerImp_enum_468] = "";
		lhsL[ART_L_JavaLexerImp_enum_468] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_enum_468] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_enum_468] = true;
		eoR_pL[ART_L_JavaLexerImp_enum_468] = true;
		popD[ART_L_JavaLexerImp_enum_468] = true;
	}

	public void artTableInitialiser_142() {
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part] = "JavaLexerImp.exponent_part ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part] = "exponent_part";
		artKindOfs[ART_L_JavaLexerImp_exponent_part] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3298] = "JavaLexerImp.exponent_part ::= . ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3298] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3298] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3298] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3300] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3300] = "";
		lhsL[ART_A_JavaLexerImp_exponent_part_3300] = ART_L_JavaLexerImp_exponent_part;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3302] = "JavaLexerImp.exponent_part ::= ( . `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3302] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3302] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3302] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_exponent_part_3302] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3303] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3303] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3303] = ART_L_JavaLexerImp_exponent_part;
		popD[ART_L_JavaLexerImp_exponent_part_3303] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3304] = "JavaLexerImp.exponent_part ::= ( `e. | `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3304] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3304] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3304] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_exponent_part_3304] = ART_L_JavaLexerImp_exponent_part_3309;
		aL[ART_L_JavaLexerImp_exponent_part_3304] = ART_L_JavaLexerImp_exponent_part_3308;
		eoOPL[ART_L_JavaLexerImp_exponent_part_3304] = true;
		popD[ART_L_JavaLexerImp_exponent_part_3304] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3306] = "JavaLexerImp.exponent_part ::= ( `e| . `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3306] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3306] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3306] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_exponent_part_3306] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3307] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3307] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3307] = ART_L_JavaLexerImp_exponent_part;
		popD[ART_L_JavaLexerImp_exponent_part_3307] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3308] = "JavaLexerImp.exponent_part ::= ( `e| `E. ) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3308] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3308] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3308] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_exponent_part_3308] = ART_L_JavaLexerImp_exponent_part_3309;
		eoOPL[ART_L_JavaLexerImp_exponent_part_3308] = true;
		popD[ART_L_JavaLexerImp_exponent_part_3308] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3309] = "JavaLexerImp.exponent_part ::= ( `e| `E) . ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3309] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3309] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3309] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3311] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3311] = "";
		lhsL[ART_A_JavaLexerImp_exponent_part_3311] = ART_L_JavaLexerImp_exponent_part;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3313] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( . `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3313] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3313] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3313] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_exponent_part_3313] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3314] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3314] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3314] = ART_L_JavaLexerImp_exponent_part;
		popD[ART_L_JavaLexerImp_exponent_part_3314] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3315] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+. | `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3315] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3315] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3315] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_exponent_part_3315] = ART_L_JavaLexerImp_exponent_part_3320;
		aL[ART_L_JavaLexerImp_exponent_part_3315] = ART_L_JavaLexerImp_exponent_part_3319;
		eoOPL[ART_L_JavaLexerImp_exponent_part_3315] = true;
		popD[ART_L_JavaLexerImp_exponent_part_3315] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3317] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| . `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3317] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3317] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3317] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_exponent_part_3317] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3318] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3318] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3318] = ART_L_JavaLexerImp_exponent_part;
		popD[ART_L_JavaLexerImp_exponent_part_3318] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3319] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-. )? JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3319] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3319] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3319] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_exponent_part_3319] = ART_L_JavaLexerImp_exponent_part_3320;
		eoOPL[ART_L_JavaLexerImp_exponent_part_3319] = true;
		popD[ART_L_JavaLexerImp_exponent_part_3319] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3320] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? . JavaLexerImp.digits ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3320] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3320] = ART_L_JavaLexerImp_exponent_part;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3320] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_exponent_part_3322] = "JavaLexerImp.exponent_part ::= ( `e| `E) ( `+| `-)? JavaLexerImp.digits . ";
		artLabelStrings[ART_L_JavaLexerImp_exponent_part_3322] = "";
		lhsL[ART_L_JavaLexerImp_exponent_part_3322] = ART_L_JavaLexerImp_exponent_part;
		artSlotInstanceOfs[ART_L_JavaLexerImp_exponent_part_3322] = ART_L_JavaLexerImp_digits;
		artKindOfs[ART_L_JavaLexerImp_exponent_part_3322] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_exponent_part_3322] = true;
		eoR_pL[ART_L_JavaLexerImp_exponent_part_3322] = true;
		popD[ART_L_JavaLexerImp_exponent_part_3322] = true;
	}

	public void artTableInitialiser_143() {
		artLabelInternalStrings[ART_L_JavaLexerImp_extends] = "JavaLexerImp.extends ";
		artLabelStrings[ART_L_JavaLexerImp_extends] = "extends";
		artKindOfs[ART_L_JavaLexerImp_extends] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_471] = "JavaLexerImp.extends ::= . `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_471] = "";
		lhsL[ART_L_JavaLexerImp_extends_471] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_471] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_471] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_472] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_472] = "";
		lhsL[ART_L_JavaLexerImp_extends_472] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_472] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_473] = "JavaLexerImp.extends ::= `e. `x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_473] = "";
		lhsL[ART_L_JavaLexerImp_extends_473] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_473] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_extends_473] = true;
		popD[ART_L_JavaLexerImp_extends_473] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_474] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_474] = "";
		lhsL[ART_L_JavaLexerImp_extends_474] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_474] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_475] = "JavaLexerImp.extends ::= `e`x. `t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_475] = "";
		lhsL[ART_L_JavaLexerImp_extends_475] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_475] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_475] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_476] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_476] = "";
		lhsL[ART_L_JavaLexerImp_extends_476] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_476] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_477] = "JavaLexerImp.extends ::= `e`x`t. `e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_477] = "";
		lhsL[ART_L_JavaLexerImp_extends_477] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_477] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_477] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_478] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_478] = "";
		lhsL[ART_L_JavaLexerImp_extends_478] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_478] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_479] = "JavaLexerImp.extends ::= `e`x`t`e. `n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_479] = "";
		lhsL[ART_L_JavaLexerImp_extends_479] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_479] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_479] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_480] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_480] = "";
		lhsL[ART_L_JavaLexerImp_extends_480] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_480] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_481] = "JavaLexerImp.extends ::= `e`x`t`e`n. `d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_481] = "";
		lhsL[ART_L_JavaLexerImp_extends_481] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_481] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_481] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_482] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_482] = "";
		lhsL[ART_L_JavaLexerImp_extends_482] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_482] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_483] = "JavaLexerImp.extends ::= `e`x`t`e`n`d. `s";
		artLabelStrings[ART_L_JavaLexerImp_extends_483] = "";
		lhsL[ART_L_JavaLexerImp_extends_483] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_483] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_extends_483] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_484] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s";
		artLabelStrings[ART_L_JavaLexerImp_extends_484] = "";
		lhsL[ART_L_JavaLexerImp_extends_484] = ART_L_JavaLexerImp_extends;
		popD[ART_L_JavaLexerImp_extends_484] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_extends_485] = "JavaLexerImp.extends ::= `e`x`t`e`n`d`s. ";
		artLabelStrings[ART_L_JavaLexerImp_extends_485] = "";
		lhsL[ART_L_JavaLexerImp_extends_485] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_extends_485] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_extends_485] = true;
		eoR_pL[ART_L_JavaLexerImp_extends_485] = true;
		popD[ART_L_JavaLexerImp_extends_485] = true;
	}

	public void artTableInitialiser_144() {
		artLabelInternalStrings[ART_L_JavaLexerImp_final] = "JavaLexerImp.final ";
		artLabelStrings[ART_L_JavaLexerImp_final] = "final";
		artKindOfs[ART_L_JavaLexerImp_final] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_488] = "JavaLexerImp.final ::= . `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_488] = "";
		lhsL[ART_L_JavaLexerImp_final_488] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_488] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_final_488] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_489] = "JavaLexerImp.final ::= `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_489] = "";
		lhsL[ART_L_JavaLexerImp_final_489] = ART_L_JavaLexerImp_final;
		popD[ART_L_JavaLexerImp_final_489] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_490] = "JavaLexerImp.final ::= `f. `i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_490] = "";
		lhsL[ART_L_JavaLexerImp_final_490] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_490] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_final_490] = true;
		popD[ART_L_JavaLexerImp_final_490] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_491] = "JavaLexerImp.final ::= `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_491] = "";
		lhsL[ART_L_JavaLexerImp_final_491] = ART_L_JavaLexerImp_final;
		popD[ART_L_JavaLexerImp_final_491] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_492] = "JavaLexerImp.final ::= `f`i. `n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_492] = "";
		lhsL[ART_L_JavaLexerImp_final_492] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_492] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_final_492] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_493] = "JavaLexerImp.final ::= `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_493] = "";
		lhsL[ART_L_JavaLexerImp_final_493] = ART_L_JavaLexerImp_final;
		popD[ART_L_JavaLexerImp_final_493] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_494] = "JavaLexerImp.final ::= `f`i`n. `a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_494] = "";
		lhsL[ART_L_JavaLexerImp_final_494] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_494] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_final_494] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_495] = "JavaLexerImp.final ::= `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_495] = "";
		lhsL[ART_L_JavaLexerImp_final_495] = ART_L_JavaLexerImp_final;
		popD[ART_L_JavaLexerImp_final_495] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_496] = "JavaLexerImp.final ::= `f`i`n`a. `l";
		artLabelStrings[ART_L_JavaLexerImp_final_496] = "";
		lhsL[ART_L_JavaLexerImp_final_496] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_496] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_final_496] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_497] = "JavaLexerImp.final ::= `f`i`n`a`l";
		artLabelStrings[ART_L_JavaLexerImp_final_497] = "";
		lhsL[ART_L_JavaLexerImp_final_497] = ART_L_JavaLexerImp_final;
		popD[ART_L_JavaLexerImp_final_497] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_final_498] = "JavaLexerImp.final ::= `f`i`n`a`l. ";
		artLabelStrings[ART_L_JavaLexerImp_final_498] = "";
		lhsL[ART_L_JavaLexerImp_final_498] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_final_498] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_final_498] = true;
		eoR_pL[ART_L_JavaLexerImp_final_498] = true;
		popD[ART_L_JavaLexerImp_final_498] = true;
	}

	public void artTableInitialiser_145() {
		artLabelInternalStrings[ART_L_JavaLexerImp_finally] = "JavaLexerImp.finally ";
		artLabelStrings[ART_L_JavaLexerImp_finally] = "finally";
		artKindOfs[ART_L_JavaLexerImp_finally] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_501] = "JavaLexerImp.finally ::= . `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_501] = "";
		lhsL[ART_L_JavaLexerImp_finally_501] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_501] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_501] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_502] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_502] = "";
		lhsL[ART_L_JavaLexerImp_finally_502] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_502] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_503] = "JavaLexerImp.finally ::= `f. `i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_503] = "";
		lhsL[ART_L_JavaLexerImp_finally_503] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_503] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_finally_503] = true;
		popD[ART_L_JavaLexerImp_finally_503] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_504] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_504] = "";
		lhsL[ART_L_JavaLexerImp_finally_504] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_504] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_505] = "JavaLexerImp.finally ::= `f`i. `n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_505] = "";
		lhsL[ART_L_JavaLexerImp_finally_505] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_505] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_505] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_506] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_506] = "";
		lhsL[ART_L_JavaLexerImp_finally_506] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_506] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_507] = "JavaLexerImp.finally ::= `f`i`n. `a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_507] = "";
		lhsL[ART_L_JavaLexerImp_finally_507] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_507] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_507] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_508] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_508] = "";
		lhsL[ART_L_JavaLexerImp_finally_508] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_508] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_509] = "JavaLexerImp.finally ::= `f`i`n`a. `l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_509] = "";
		lhsL[ART_L_JavaLexerImp_finally_509] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_509] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_509] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_510] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_510] = "";
		lhsL[ART_L_JavaLexerImp_finally_510] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_510] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_511] = "JavaLexerImp.finally ::= `f`i`n`a`l. `l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_511] = "";
		lhsL[ART_L_JavaLexerImp_finally_511] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_511] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_511] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_512] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_512] = "";
		lhsL[ART_L_JavaLexerImp_finally_512] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_512] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_513] = "JavaLexerImp.finally ::= `f`i`n`a`l`l. `y";
		artLabelStrings[ART_L_JavaLexerImp_finally_513] = "";
		lhsL[ART_L_JavaLexerImp_finally_513] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_513] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_finally_513] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_514] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y";
		artLabelStrings[ART_L_JavaLexerImp_finally_514] = "";
		lhsL[ART_L_JavaLexerImp_finally_514] = ART_L_JavaLexerImp_finally;
		popD[ART_L_JavaLexerImp_finally_514] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_finally_515] = "JavaLexerImp.finally ::= `f`i`n`a`l`l`y. ";
		artLabelStrings[ART_L_JavaLexerImp_finally_515] = "";
		lhsL[ART_L_JavaLexerImp_finally_515] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_finally_515] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_finally_515] = true;
		eoR_pL[ART_L_JavaLexerImp_finally_515] = true;
		popD[ART_L_JavaLexerImp_finally_515] = true;
	}

	public void artTableInitialiser_146() {
		artLabelInternalStrings[ART_L_JavaLexerImp_float] = "JavaLexerImp.float ";
		artLabelStrings[ART_L_JavaLexerImp_float] = "float";
		artKindOfs[ART_L_JavaLexerImp_float] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_518] = "JavaLexerImp.float ::= . `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_518] = "";
		lhsL[ART_L_JavaLexerImp_float_518] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_518] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_518] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_519] = "JavaLexerImp.float ::= `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_519] = "";
		lhsL[ART_L_JavaLexerImp_float_519] = ART_L_JavaLexerImp_float;
		popD[ART_L_JavaLexerImp_float_519] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_520] = "JavaLexerImp.float ::= `f. `l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_520] = "";
		lhsL[ART_L_JavaLexerImp_float_520] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_520] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_float_520] = true;
		popD[ART_L_JavaLexerImp_float_520] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_521] = "JavaLexerImp.float ::= `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_521] = "";
		lhsL[ART_L_JavaLexerImp_float_521] = ART_L_JavaLexerImp_float;
		popD[ART_L_JavaLexerImp_float_521] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_522] = "JavaLexerImp.float ::= `f`l. `o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_522] = "";
		lhsL[ART_L_JavaLexerImp_float_522] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_522] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_522] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_523] = "JavaLexerImp.float ::= `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_523] = "";
		lhsL[ART_L_JavaLexerImp_float_523] = ART_L_JavaLexerImp_float;
		popD[ART_L_JavaLexerImp_float_523] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_524] = "JavaLexerImp.float ::= `f`l`o. `a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_524] = "";
		lhsL[ART_L_JavaLexerImp_float_524] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_524] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_524] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_525] = "JavaLexerImp.float ::= `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_525] = "";
		lhsL[ART_L_JavaLexerImp_float_525] = ART_L_JavaLexerImp_float;
		popD[ART_L_JavaLexerImp_float_525] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_526] = "JavaLexerImp.float ::= `f`l`o`a. `t";
		artLabelStrings[ART_L_JavaLexerImp_float_526] = "";
		lhsL[ART_L_JavaLexerImp_float_526] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_526] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_526] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_527] = "JavaLexerImp.float ::= `f`l`o`a`t";
		artLabelStrings[ART_L_JavaLexerImp_float_527] = "";
		lhsL[ART_L_JavaLexerImp_float_527] = ART_L_JavaLexerImp_float;
		popD[ART_L_JavaLexerImp_float_527] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_528] = "JavaLexerImp.float ::= `f`l`o`a`t. ";
		artLabelStrings[ART_L_JavaLexerImp_float_528] = "";
		lhsL[ART_L_JavaLexerImp_float_528] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_float_528] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_float_528] = true;
		eoR_pL[ART_L_JavaLexerImp_float_528] = true;
		popD[ART_L_JavaLexerImp_float_528] = true;
	}

	public void artTableInitialiser_147() {
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix] = "JavaLexerImp.float_type_suffix ";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix] = "float_type_suffix";
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3325] = "JavaLexerImp.float_type_suffix ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3325] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3325] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3325] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_type_suffix_3325] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3326] = "JavaLexerImp.float_type_suffix ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3326] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3326] = ART_L_JavaLexerImp_float_type_suffix;
		popD[ART_L_JavaLexerImp_float_type_suffix_3326] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3327] = "JavaLexerImp.float_type_suffix ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3327] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3327] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3327] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_float_type_suffix_3327] = true;
		eoR_pL[ART_L_JavaLexerImp_float_type_suffix_3327] = true;
		popD[ART_L_JavaLexerImp_float_type_suffix_3327] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3329] = "JavaLexerImp.float_type_suffix ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3329] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3329] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3329] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_type_suffix_3329] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3330] = "JavaLexerImp.float_type_suffix ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3330] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3330] = ART_L_JavaLexerImp_float_type_suffix;
		popD[ART_L_JavaLexerImp_float_type_suffix_3330] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3331] = "JavaLexerImp.float_type_suffix ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3331] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3331] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3331] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_float_type_suffix_3331] = true;
		eoR_pL[ART_L_JavaLexerImp_float_type_suffix_3331] = true;
		popD[ART_L_JavaLexerImp_float_type_suffix_3331] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3333] = "JavaLexerImp.float_type_suffix ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3333] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3333] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3333] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_type_suffix_3333] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3334] = "JavaLexerImp.float_type_suffix ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3334] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3334] = ART_L_JavaLexerImp_float_type_suffix;
		popD[ART_L_JavaLexerImp_float_type_suffix_3334] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3335] = "JavaLexerImp.float_type_suffix ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3335] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3335] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3335] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_float_type_suffix_3335] = true;
		eoR_pL[ART_L_JavaLexerImp_float_type_suffix_3335] = true;
		popD[ART_L_JavaLexerImp_float_type_suffix_3335] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3337] = "JavaLexerImp.float_type_suffix ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3337] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3337] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3337] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_float_type_suffix_3337] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3338] = "JavaLexerImp.float_type_suffix ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3338] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3338] = ART_L_JavaLexerImp_float_type_suffix;
		popD[ART_L_JavaLexerImp_float_type_suffix_3338] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_float_type_suffix_3339] = "JavaLexerImp.float_type_suffix ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_float_type_suffix_3339] = "";
		lhsL[ART_L_JavaLexerImp_float_type_suffix_3339] = ART_L_JavaLexerImp_float_type_suffix;
		artKindOfs[ART_L_JavaLexerImp_float_type_suffix_3339] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_float_type_suffix_3339] = true;
		eoR_pL[ART_L_JavaLexerImp_float_type_suffix_3339] = true;
		popD[ART_L_JavaLexerImp_float_type_suffix_3339] = true;
	}

	public void artTableInitialiser_148() {
		artLabelInternalStrings[ART_L_JavaLexerImp_for] = "JavaLexerImp.for ";
		artLabelStrings[ART_L_JavaLexerImp_for] = "for";
		artKindOfs[ART_L_JavaLexerImp_for] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_531] = "JavaLexerImp.for ::= . `f`o`r";
		artLabelStrings[ART_L_JavaLexerImp_for_531] = "";
		lhsL[ART_L_JavaLexerImp_for_531] = ART_L_JavaLexerImp_for;
		artKindOfs[ART_L_JavaLexerImp_for_531] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_for_531] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_532] = "JavaLexerImp.for ::= `f`o`r";
		artLabelStrings[ART_L_JavaLexerImp_for_532] = "";
		lhsL[ART_L_JavaLexerImp_for_532] = ART_L_JavaLexerImp_for;
		popD[ART_L_JavaLexerImp_for_532] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_533] = "JavaLexerImp.for ::= `f. `o`r";
		artLabelStrings[ART_L_JavaLexerImp_for_533] = "";
		lhsL[ART_L_JavaLexerImp_for_533] = ART_L_JavaLexerImp_for;
		artKindOfs[ART_L_JavaLexerImp_for_533] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_for_533] = true;
		popD[ART_L_JavaLexerImp_for_533] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_534] = "JavaLexerImp.for ::= `f`o`r";
		artLabelStrings[ART_L_JavaLexerImp_for_534] = "";
		lhsL[ART_L_JavaLexerImp_for_534] = ART_L_JavaLexerImp_for;
		popD[ART_L_JavaLexerImp_for_534] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_535] = "JavaLexerImp.for ::= `f`o. `r";
		artLabelStrings[ART_L_JavaLexerImp_for_535] = "";
		lhsL[ART_L_JavaLexerImp_for_535] = ART_L_JavaLexerImp_for;
		artKindOfs[ART_L_JavaLexerImp_for_535] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_for_535] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_536] = "JavaLexerImp.for ::= `f`o`r";
		artLabelStrings[ART_L_JavaLexerImp_for_536] = "";
		lhsL[ART_L_JavaLexerImp_for_536] = ART_L_JavaLexerImp_for;
		popD[ART_L_JavaLexerImp_for_536] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_for_537] = "JavaLexerImp.for ::= `f`o`r. ";
		artLabelStrings[ART_L_JavaLexerImp_for_537] = "";
		lhsL[ART_L_JavaLexerImp_for_537] = ART_L_JavaLexerImp_for;
		artKindOfs[ART_L_JavaLexerImp_for_537] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_for_537] = true;
		eoR_pL[ART_L_JavaLexerImp_for_537] = true;
		popD[ART_L_JavaLexerImp_for_537] = true;
	}

	public void artTableInitialiser_149() {
		artLabelInternalStrings[ART_L_JavaLexerImp_goto] = "JavaLexerImp.goto ";
		artLabelStrings[ART_L_JavaLexerImp_goto] = "goto";
		artKindOfs[ART_L_JavaLexerImp_goto] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_547] = "JavaLexerImp.goto ::= . `g`o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_547] = "";
		lhsL[ART_L_JavaLexerImp_goto_547] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_goto_547] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_goto_547] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_548] = "JavaLexerImp.goto ::= `g`o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_548] = "";
		lhsL[ART_L_JavaLexerImp_goto_548] = ART_L_JavaLexerImp_goto;
		popD[ART_L_JavaLexerImp_goto_548] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_549] = "JavaLexerImp.goto ::= `g. `o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_549] = "";
		lhsL[ART_L_JavaLexerImp_goto_549] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_goto_549] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_goto_549] = true;
		popD[ART_L_JavaLexerImp_goto_549] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_550] = "JavaLexerImp.goto ::= `g`o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_550] = "";
		lhsL[ART_L_JavaLexerImp_goto_550] = ART_L_JavaLexerImp_goto;
		popD[ART_L_JavaLexerImp_goto_550] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_551] = "JavaLexerImp.goto ::= `g`o. `t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_551] = "";
		lhsL[ART_L_JavaLexerImp_goto_551] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_goto_551] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_goto_551] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_552] = "JavaLexerImp.goto ::= `g`o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_552] = "";
		lhsL[ART_L_JavaLexerImp_goto_552] = ART_L_JavaLexerImp_goto;
		popD[ART_L_JavaLexerImp_goto_552] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_553] = "JavaLexerImp.goto ::= `g`o`t. `o";
		artLabelStrings[ART_L_JavaLexerImp_goto_553] = "";
		lhsL[ART_L_JavaLexerImp_goto_553] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_goto_553] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_goto_553] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_554] = "JavaLexerImp.goto ::= `g`o`t`o";
		artLabelStrings[ART_L_JavaLexerImp_goto_554] = "";
		lhsL[ART_L_JavaLexerImp_goto_554] = ART_L_JavaLexerImp_goto;
		popD[ART_L_JavaLexerImp_goto_554] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_goto_555] = "JavaLexerImp.goto ::= `g`o`t`o. ";
		artLabelStrings[ART_L_JavaLexerImp_goto_555] = "";
		lhsL[ART_L_JavaLexerImp_goto_555] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_goto_555] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_goto_555] = true;
		eoR_pL[ART_L_JavaLexerImp_goto_555] = true;
		popD[ART_L_JavaLexerImp_goto_555] = true;
	}

	public void artTableInitialiser_150() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit] = "JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit] = "hex_digit";
		artKindOfs[ART_L_JavaLexerImp_hex_digit] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3018] = "JavaLexerImp.hex_digit ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3018] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3018] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3018] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3018] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3019] = "JavaLexerImp.hex_digit ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3019] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3019] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3019] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3020] = "JavaLexerImp.hex_digit ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3020] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3020] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3020] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3020] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3020] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3020] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3022] = "JavaLexerImp.hex_digit ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3022] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3022] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3022] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3022] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3023] = "JavaLexerImp.hex_digit ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3023] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3023] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3023] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3024] = "JavaLexerImp.hex_digit ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3024] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3024] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3024] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3024] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3024] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3024] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3026] = "JavaLexerImp.hex_digit ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3026] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3026] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3026] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3026] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3027] = "JavaLexerImp.hex_digit ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3027] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3027] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3027] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3028] = "JavaLexerImp.hex_digit ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3028] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3028] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3028] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3028] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3028] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3028] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3030] = "JavaLexerImp.hex_digit ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3030] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3030] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3030] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3030] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3031] = "JavaLexerImp.hex_digit ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3031] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3031] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3031] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3032] = "JavaLexerImp.hex_digit ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3032] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3032] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3032] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3032] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3032] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3032] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3034] = "JavaLexerImp.hex_digit ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3034] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3034] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3034] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3034] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3035] = "JavaLexerImp.hex_digit ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3035] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3035] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3035] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3036] = "JavaLexerImp.hex_digit ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3036] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3036] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3036] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3036] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3036] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3036] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3038] = "JavaLexerImp.hex_digit ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3038] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3038] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3038] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3038] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3039] = "JavaLexerImp.hex_digit ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3039] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3039] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3039] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3040] = "JavaLexerImp.hex_digit ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3040] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3040] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3040] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3040] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3040] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3040] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3042] = "JavaLexerImp.hex_digit ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3042] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3042] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3042] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3042] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3043] = "JavaLexerImp.hex_digit ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3043] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3043] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3043] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3044] = "JavaLexerImp.hex_digit ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3044] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3044] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3044] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3044] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3044] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3044] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3046] = "JavaLexerImp.hex_digit ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3046] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3046] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3046] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3046] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3047] = "JavaLexerImp.hex_digit ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3047] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3047] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3047] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3048] = "JavaLexerImp.hex_digit ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3048] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3048] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3048] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3048] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3048] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3048] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3050] = "JavaLexerImp.hex_digit ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3050] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3050] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3050] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3050] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3051] = "JavaLexerImp.hex_digit ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3051] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3051] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3051] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3052] = "JavaLexerImp.hex_digit ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3052] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3052] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3052] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3052] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3052] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3052] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3054] = "JavaLexerImp.hex_digit ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3054] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3054] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3054] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3054] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3055] = "JavaLexerImp.hex_digit ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3055] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3055] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3055] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3056] = "JavaLexerImp.hex_digit ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3056] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3056] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3056] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3056] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3056] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3056] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3058] = "JavaLexerImp.hex_digit ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3058] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3058] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3058] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3058] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3059] = "JavaLexerImp.hex_digit ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3059] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3059] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3059] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3060] = "JavaLexerImp.hex_digit ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3060] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3060] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3060] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3060] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3060] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3060] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3062] = "JavaLexerImp.hex_digit ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3062] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3062] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3062] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3062] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3063] = "JavaLexerImp.hex_digit ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3063] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3063] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3063] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3064] = "JavaLexerImp.hex_digit ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3064] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3064] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3064] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3064] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3064] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3064] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3066] = "JavaLexerImp.hex_digit ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3066] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3066] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3066] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3066] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3067] = "JavaLexerImp.hex_digit ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3067] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3067] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3067] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3068] = "JavaLexerImp.hex_digit ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3068] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3068] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3068] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3068] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3068] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3068] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3070] = "JavaLexerImp.hex_digit ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3070] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3070] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3070] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3070] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3071] = "JavaLexerImp.hex_digit ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3071] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3071] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3071] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3072] = "JavaLexerImp.hex_digit ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3072] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3072] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3072] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3072] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3072] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3072] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3074] = "JavaLexerImp.hex_digit ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3074] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3074] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3074] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3074] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3075] = "JavaLexerImp.hex_digit ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3075] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3075] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3075] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3076] = "JavaLexerImp.hex_digit ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3076] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3076] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3076] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3076] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3076] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3076] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3078] = "JavaLexerImp.hex_digit ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3078] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3078] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3078] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digit_3078] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3079] = "JavaLexerImp.hex_digit ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3079] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3079] = ART_L_JavaLexerImp_hex_digit;
		popD[ART_L_JavaLexerImp_hex_digit_3079] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digit_3080] = "JavaLexerImp.hex_digit ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digit_3080] = "";
		lhsL[ART_L_JavaLexerImp_hex_digit_3080] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digit_3080] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digit_3080] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digit_3080] = true;
		popD[ART_L_JavaLexerImp_hex_digit_3080] = true;
	}

	public void artTableInitialiser_151() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits] = "JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits] = "hex_digits";
		artKindOfs[ART_L_JavaLexerImp_hex_digits] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3001] = "JavaLexerImp.hex_digits ::= . JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3001] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3001] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3001] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3003] = "JavaLexerImp.hex_digits ::= JavaLexerImp.hex_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3003] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3003] = ART_L_JavaLexerImp_hex_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_3003] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3003] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_3003] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_3003] = true;
		popD[ART_L_JavaLexerImp_hex_digits_3003] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3005] = "JavaLexerImp.hex_digits ::= . JavaLexerImp.hex_digit ( JavaLexerImp.hex_digits_and_underscores )? JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3005] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3005] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3005] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3007] = "JavaLexerImp.hex_digits ::= JavaLexerImp.hex_digit . ( JavaLexerImp.hex_digits_and_underscores )? JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3007] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3007] = ART_L_JavaLexerImp_hex_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_3007] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3007] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hex_digits_3007] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3012] = "JavaLexerImp.hex_digits ::= JavaLexerImp.hex_digit ( JavaLexerImp.hex_digits_and_underscores . )? JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3012] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3012] = ART_L_JavaLexerImp_hex_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_3012] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3012] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_digits_3012] = ART_L_JavaLexerImp_hex_digits_3013;
		eoOPL[ART_L_JavaLexerImp_hex_digits_3012] = true;
		popD[ART_L_JavaLexerImp_hex_digits_3012] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3013] = "JavaLexerImp.hex_digits ::= JavaLexerImp.hex_digit ( JavaLexerImp.hex_digits_and_underscores )? . JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3013] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3013] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3013] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_3015] = "JavaLexerImp.hex_digits ::= JavaLexerImp.hex_digit ( JavaLexerImp.hex_digits_and_underscores )? JavaLexerImp.hex_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_3015] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_3015] = ART_L_JavaLexerImp_hex_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_3015] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_3015] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_3015] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_3015] = true;
		popD[ART_L_JavaLexerImp_hex_digits_3015] = true;
	}

	public void artTableInitialiser_152() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores] = "JavaLexerImp.hex_digits_and_underscores ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores] = "hex_digits_and_underscores";
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3083] = "JavaLexerImp.hex_digits_and_underscores ::= . JavaLexerImp.hex_digits_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3083] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_and_underscores_3083] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3083] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = "JavaLexerImp.hex_digits_and_underscores ::= JavaLexerImp.hex_digits_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = true;
		popD[ART_L_JavaLexerImp_hex_digits_and_underscores_3085] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3087] = "JavaLexerImp.hex_digits_and_underscores ::= . JavaLexerImp.hex_digits_and_underscores JavaLexerImp.hex_digits_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3087] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_and_underscores_3087] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3087] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = "JavaLexerImp.hex_digits_and_underscores ::= JavaLexerImp.hex_digits_and_underscores . JavaLexerImp.hex_digits_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hex_digits_and_underscores_3089] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = "JavaLexerImp.hex_digits_and_underscores ::= JavaLexerImp.hex_digits_and_underscores JavaLexerImp.hex_digits_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = ART_L_JavaLexerImp_hex_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = true;
		popD[ART_L_JavaLexerImp_hex_digits_and_underscores_3091] = true;
	}

	public void artTableInitialiser_153() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore] = "JavaLexerImp.hex_digits_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore] = "hex_digits_or_underscore";
		artKindOfs[ART_L_JavaLexerImp_hex_digits_or_underscore] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3094] = "JavaLexerImp.hex_digits_or_underscore ::= . JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3094] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_or_underscore_3094] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_or_underscore_3094] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = "JavaLexerImp.hex_digits_or_underscore ::= JavaLexerImp.hex_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = true;
		popD[ART_L_JavaLexerImp_hex_digits_or_underscore_3096] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3098] = "JavaLexerImp.hex_digits_or_underscore ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3098] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_or_underscore_3098] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_or_underscore_3098] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_digits_or_underscore_3098] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3099] = "JavaLexerImp.hex_digits_or_underscore ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3099] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_or_underscore_3099] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		popD[ART_L_JavaLexerImp_hex_digits_or_underscore_3099] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = "JavaLexerImp.hex_digits_or_underscore ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = "";
		lhsL[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = ART_L_JavaLexerImp_hex_digits_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = true;
		popD[ART_L_JavaLexerImp_hex_digits_or_underscore_3100] = true;
	}

	public void artTableInitialiser_154() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand] = "JavaLexerImp.hex_significand ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand] = "hex_significand";
		artKindOfs[ART_L_JavaLexerImp_hex_significand] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3342] = "JavaLexerImp.hex_significand ::= . `0( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3342] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3342] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3342] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3343] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3343] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3343] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3344] = "JavaLexerImp.hex_significand ::= `0. ( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3344] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3344] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3344] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hex_significand_3344] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3346] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3346] = "";
		lhsL[ART_A_JavaLexerImp_hex_significand_3346] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3348] = "JavaLexerImp.hex_significand ::= `0( . `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3348] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3348] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3348] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3348] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3349] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3349] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3349] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3349] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3350] = "JavaLexerImp.hex_significand ::= `0( `x. | `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3350] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3350] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3350] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3350] = ART_L_JavaLexerImp_hex_significand_3355;
		aL[ART_L_JavaLexerImp_hex_significand_3350] = ART_L_JavaLexerImp_hex_significand_3354;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3350] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3350] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3352] = "JavaLexerImp.hex_significand ::= `0( `x| . `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3352] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3352] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3352] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3352] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3353] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3353] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3353] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3353] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3354] = "JavaLexerImp.hex_significand ::= `0( `x| `X. ) JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3354] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3354] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3354] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3354] = ART_L_JavaLexerImp_hex_significand_3355;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3354] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3354] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3355] = "JavaLexerImp.hex_significand ::= `0( `x| `X) . JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3355] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3355] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3355] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3357] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3357] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3357] = ART_L_JavaLexerImp_hex_significand;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_significand_3357] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3357] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_significand_3357] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_significand_3357] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3357] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3359] = "JavaLexerImp.hex_significand ::= . `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3359] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3359] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3359] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3360] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3360] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3360] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3361] = "JavaLexerImp.hex_significand ::= `0. ( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3361] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3361] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3361] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hex_significand_3361] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3363] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3363] = "";
		lhsL[ART_A_JavaLexerImp_hex_significand_3363] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3365] = "JavaLexerImp.hex_significand ::= `0( . `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3365] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3365] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3365] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3365] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3366] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3366] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3366] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3366] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3367] = "JavaLexerImp.hex_significand ::= `0( `x. | `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3367] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3367] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3367] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3367] = ART_L_JavaLexerImp_hex_significand_3372;
		aL[ART_L_JavaLexerImp_hex_significand_3367] = ART_L_JavaLexerImp_hex_significand_3371;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3367] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3367] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3369] = "JavaLexerImp.hex_significand ::= `0( `x| . `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3369] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3369] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3369] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3369] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3370] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3370] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3370] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3370] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3371] = "JavaLexerImp.hex_significand ::= `0( `x| `X. ) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3371] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3371] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3371] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3371] = ART_L_JavaLexerImp_hex_significand_3372;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3371] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3371] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3372] = "JavaLexerImp.hex_significand ::= `0( `x| `X) . JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3372] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3372] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3372] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3374] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits . `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3374] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3374] = ART_L_JavaLexerImp_hex_significand;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_significand_3374] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3374] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3374] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3375] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3375] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3375] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3375] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3376] = "JavaLexerImp.hex_significand ::= `0( `x| `X) JavaLexerImp.hex_digits `.. ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3376] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3376] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3376] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_significand_3376] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_significand_3376] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3376] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3378] = "JavaLexerImp.hex_significand ::= . `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3378] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3378] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3378] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3379] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3379] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3379] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3380] = "JavaLexerImp.hex_significand ::= `0. ( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3380] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3380] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3380] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hex_significand_3380] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3382] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3382] = "";
		lhsL[ART_A_JavaLexerImp_hex_significand_3382] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3384] = "JavaLexerImp.hex_significand ::= `0( . `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3384] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3384] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3384] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3384] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3385] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3385] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3385] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3385] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3386] = "JavaLexerImp.hex_significand ::= `0( `x. | `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3386] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3386] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3386] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3386] = ART_L_JavaLexerImp_hex_significand_3391;
		aL[ART_L_JavaLexerImp_hex_significand_3386] = ART_L_JavaLexerImp_hex_significand_3390;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3386] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3386] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3388] = "JavaLexerImp.hex_significand ::= `0( `x| . `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3388] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3388] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3388] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_hex_significand_3388] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3389] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3389] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3389] = ART_L_JavaLexerImp_hex_significand;
		popD[ART_L_JavaLexerImp_hex_significand_3389] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3390] = "JavaLexerImp.hex_significand ::= `0( `x| `X. ) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3390] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3390] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3390] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3390] = ART_L_JavaLexerImp_hex_significand_3391;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3390] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3390] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3391] = "JavaLexerImp.hex_significand ::= `0( `x| `X) . ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3391] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3391] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3391] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3396] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits . )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3396] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3396] = ART_L_JavaLexerImp_hex_significand;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_significand_3396] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3396] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hex_significand_3396] = ART_L_JavaLexerImp_hex_significand_3397;
		eoOPL[ART_L_JavaLexerImp_hex_significand_3396] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3396] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3397] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? . `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3397] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3397] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3397] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3398] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3398] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3398] = ART_L_JavaLexerImp_hex_significand;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3399] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.. JavaLexerImp.hex_digits ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3399] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3399] = ART_L_JavaLexerImp_hex_significand;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3399] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hex_significand_3401] = "JavaLexerImp.hex_significand ::= `0( `x| `X) ( JavaLexerImp.hex_digits )? `.JavaLexerImp.hex_digits . ";
		artLabelStrings[ART_L_JavaLexerImp_hex_significand_3401] = "";
		lhsL[ART_L_JavaLexerImp_hex_significand_3401] = ART_L_JavaLexerImp_hex_significand;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hex_significand_3401] = ART_L_JavaLexerImp_hex_digits;
		artKindOfs[ART_L_JavaLexerImp_hex_significand_3401] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hex_significand_3401] = true;
		eoR_pL[ART_L_JavaLexerImp_hex_significand_3401] = true;
		popD[ART_L_JavaLexerImp_hex_significand_3401] = true;
	}

	public void artTableInitialiser_155() {
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence] = "JavaLexerImp.hexadecimal_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence] = "hexadecimal_escape_sequence";
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944] = "JavaLexerImp.hexadecimal_escape_sequence ::= . `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3944] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3945] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3945] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3945] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\. `xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3946] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3947] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3947] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3947] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`x. JavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3948] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit . ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3950] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit . )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956;
		eoOPL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = true;
		popD[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3955] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? . ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3956] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit . )? ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962;
		eoOPL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = true;
		popD[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3961] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? . ( JavaLexerImp.hex_digit )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3962] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit . )? ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968;
		eoOPL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = true;
		eoR_pL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = true;
		popD[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3967] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = "JavaLexerImp.hexadecimal_escape_sequence ::= `\\\\\\\\`xJavaLexerImp.hex_digit ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? ( JavaLexerImp.hex_digit )? . ";
		artLabelStrings[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = "";
		lhsL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = true;
		eoR_pL[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = true;
		popD[ART_L_JavaLexerImp_hexadecimal_escape_sequence_3968] = true;
	}

	public void artTableInitialiser_156() {
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character] = "JavaLexerImp.identifier_part_character ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character] = "identifier_part_character";
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2552] = "JavaLexerImp.identifier_part_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2552] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2552] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2552] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2552] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2553] = "JavaLexerImp.identifier_part_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2553] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2553] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2553] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2554] = "JavaLexerImp.identifier_part_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2554] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2554] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2554] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2554] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2554] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2554] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2556] = "JavaLexerImp.identifier_part_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2556] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2556] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2556] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2556] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2557] = "JavaLexerImp.identifier_part_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2557] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2557] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2557] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2558] = "JavaLexerImp.identifier_part_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2558] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2558] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2558] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2558] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2558] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2558] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2560] = "JavaLexerImp.identifier_part_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2560] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2560] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2560] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2560] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2561] = "JavaLexerImp.identifier_part_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2561] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2561] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2561] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2562] = "JavaLexerImp.identifier_part_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2562] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2562] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2562] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2562] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2562] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2562] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2564] = "JavaLexerImp.identifier_part_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2564] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2564] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2564] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2564] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2565] = "JavaLexerImp.identifier_part_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2565] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2565] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2565] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2566] = "JavaLexerImp.identifier_part_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2566] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2566] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2566] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2566] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2566] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2566] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2568] = "JavaLexerImp.identifier_part_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2568] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2568] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2568] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2568] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2569] = "JavaLexerImp.identifier_part_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2569] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2569] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2569] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2570] = "JavaLexerImp.identifier_part_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2570] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2570] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2570] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2570] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2570] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2570] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2572] = "JavaLexerImp.identifier_part_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2572] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2572] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2572] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2572] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2573] = "JavaLexerImp.identifier_part_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2573] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2573] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2573] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2574] = "JavaLexerImp.identifier_part_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2574] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2574] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2574] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2574] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2574] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2574] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2576] = "JavaLexerImp.identifier_part_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2576] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2576] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2576] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2576] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2577] = "JavaLexerImp.identifier_part_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2577] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2577] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2577] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2578] = "JavaLexerImp.identifier_part_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2578] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2578] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2578] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2578] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2578] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2578] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2580] = "JavaLexerImp.identifier_part_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2580] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2580] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2580] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2580] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2581] = "JavaLexerImp.identifier_part_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2581] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2581] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2581] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2582] = "JavaLexerImp.identifier_part_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2582] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2582] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2582] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2582] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2582] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2582] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2584] = "JavaLexerImp.identifier_part_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2584] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2584] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2584] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2584] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2585] = "JavaLexerImp.identifier_part_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2585] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2585] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2585] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2586] = "JavaLexerImp.identifier_part_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2586] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2586] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2586] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2586] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2586] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2586] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2588] = "JavaLexerImp.identifier_part_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2588] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2588] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2588] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2588] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2589] = "JavaLexerImp.identifier_part_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2589] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2589] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2589] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2590] = "JavaLexerImp.identifier_part_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2590] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2590] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2590] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2590] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2590] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2590] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2592] = "JavaLexerImp.identifier_part_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2592] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2592] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2592] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2592] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2593] = "JavaLexerImp.identifier_part_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2593] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2593] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2593] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2594] = "JavaLexerImp.identifier_part_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2594] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2594] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2594] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2594] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2594] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2594] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2596] = "JavaLexerImp.identifier_part_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2596] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2596] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2596] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2596] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2597] = "JavaLexerImp.identifier_part_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2597] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2597] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2597] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2598] = "JavaLexerImp.identifier_part_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2598] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2598] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2598] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2598] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2598] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2598] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2600] = "JavaLexerImp.identifier_part_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2600] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2600] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2600] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2600] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2601] = "JavaLexerImp.identifier_part_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2601] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2601] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2601] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2602] = "JavaLexerImp.identifier_part_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2602] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2602] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2602] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2602] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2602] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2602] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2604] = "JavaLexerImp.identifier_part_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2604] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2604] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2604] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2604] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2605] = "JavaLexerImp.identifier_part_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2605] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2605] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2605] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2606] = "JavaLexerImp.identifier_part_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2606] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2606] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2606] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2606] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2606] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2606] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2608] = "JavaLexerImp.identifier_part_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2608] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2608] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2608] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2608] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2609] = "JavaLexerImp.identifier_part_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2609] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2609] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2609] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2610] = "JavaLexerImp.identifier_part_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2610] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2610] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2610] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2610] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2610] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2610] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2612] = "JavaLexerImp.identifier_part_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2612] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2612] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2612] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2612] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2613] = "JavaLexerImp.identifier_part_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2613] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2613] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2613] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2614] = "JavaLexerImp.identifier_part_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2614] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2614] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2614] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2614] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2614] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2614] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2616] = "JavaLexerImp.identifier_part_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2616] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2616] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2616] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2616] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2617] = "JavaLexerImp.identifier_part_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2617] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2617] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2617] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2618] = "JavaLexerImp.identifier_part_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2618] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2618] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2618] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2618] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2618] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2618] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2620] = "JavaLexerImp.identifier_part_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2620] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2620] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2620] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2620] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2621] = "JavaLexerImp.identifier_part_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2621] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2621] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2621] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2622] = "JavaLexerImp.identifier_part_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2622] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2622] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2622] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2622] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2622] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2622] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2624] = "JavaLexerImp.identifier_part_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2624] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2624] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2624] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2624] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2625] = "JavaLexerImp.identifier_part_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2625] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2625] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2625] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2626] = "JavaLexerImp.identifier_part_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2626] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2626] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2626] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2626] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2626] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2626] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2628] = "JavaLexerImp.identifier_part_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2628] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2628] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2628] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2628] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2629] = "JavaLexerImp.identifier_part_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2629] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2629] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2629] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2630] = "JavaLexerImp.identifier_part_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2630] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2630] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2630] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2630] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2630] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2630] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2632] = "JavaLexerImp.identifier_part_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2632] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2632] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2632] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2632] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2633] = "JavaLexerImp.identifier_part_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2633] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2633] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2633] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2634] = "JavaLexerImp.identifier_part_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2634] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2634] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2634] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2634] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2634] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2634] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2636] = "JavaLexerImp.identifier_part_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2636] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2636] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2636] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2636] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2637] = "JavaLexerImp.identifier_part_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2637] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2637] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2637] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2638] = "JavaLexerImp.identifier_part_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2638] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2638] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2638] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2638] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2638] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2638] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2640] = "JavaLexerImp.identifier_part_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2640] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2640] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2640] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2640] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2641] = "JavaLexerImp.identifier_part_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2641] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2641] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2641] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2642] = "JavaLexerImp.identifier_part_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2642] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2642] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2642] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2642] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2642] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2642] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2644] = "JavaLexerImp.identifier_part_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2644] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2644] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2644] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2644] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2645] = "JavaLexerImp.identifier_part_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2645] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2645] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2645] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2646] = "JavaLexerImp.identifier_part_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2646] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2646] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2646] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2646] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2646] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2646] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2648] = "JavaLexerImp.identifier_part_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2648] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2648] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2648] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2648] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2649] = "JavaLexerImp.identifier_part_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2649] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2649] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2649] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2650] = "JavaLexerImp.identifier_part_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2650] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2650] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2650] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2650] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2650] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2650] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2652] = "JavaLexerImp.identifier_part_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2652] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2652] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2652] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2652] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2653] = "JavaLexerImp.identifier_part_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2653] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2653] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2653] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2654] = "JavaLexerImp.identifier_part_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2654] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2654] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2654] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2654] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2654] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2654] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2656] = "JavaLexerImp.identifier_part_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2656] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2656] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2656] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2656] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2657] = "JavaLexerImp.identifier_part_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2657] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2657] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2657] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2658] = "JavaLexerImp.identifier_part_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2658] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2658] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2658] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2658] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2658] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2658] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2660] = "JavaLexerImp.identifier_part_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2660] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2660] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2660] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2660] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2661] = "JavaLexerImp.identifier_part_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2661] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2661] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2661] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2662] = "JavaLexerImp.identifier_part_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2662] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2662] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2662] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2662] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2662] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2662] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2664] = "JavaLexerImp.identifier_part_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2664] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2664] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2664] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2664] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2665] = "JavaLexerImp.identifier_part_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2665] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2665] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2665] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2666] = "JavaLexerImp.identifier_part_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2666] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2666] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2666] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2666] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2666] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2666] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2668] = "JavaLexerImp.identifier_part_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2668] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2668] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2668] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2668] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2669] = "JavaLexerImp.identifier_part_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2669] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2669] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2669] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2670] = "JavaLexerImp.identifier_part_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2670] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2670] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2670] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2670] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2670] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2670] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2672] = "JavaLexerImp.identifier_part_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2672] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2672] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2672] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2672] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2673] = "JavaLexerImp.identifier_part_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2673] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2673] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2673] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2674] = "JavaLexerImp.identifier_part_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2674] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2674] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2674] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2674] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2674] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2674] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2676] = "JavaLexerImp.identifier_part_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2676] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2676] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2676] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2676] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2677] = "JavaLexerImp.identifier_part_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2677] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2677] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2677] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2678] = "JavaLexerImp.identifier_part_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2678] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2678] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2678] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2678] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2678] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2678] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2680] = "JavaLexerImp.identifier_part_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2680] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2680] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2680] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2680] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2681] = "JavaLexerImp.identifier_part_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2681] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2681] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2681] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2682] = "JavaLexerImp.identifier_part_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2682] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2682] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2682] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2682] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2682] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2682] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2684] = "JavaLexerImp.identifier_part_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2684] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2684] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2684] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2684] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2685] = "JavaLexerImp.identifier_part_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2685] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2685] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2685] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2686] = "JavaLexerImp.identifier_part_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2686] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2686] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2686] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2686] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2686] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2686] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2688] = "JavaLexerImp.identifier_part_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2688] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2688] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2688] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2688] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2689] = "JavaLexerImp.identifier_part_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2689] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2689] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2689] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2690] = "JavaLexerImp.identifier_part_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2690] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2690] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2690] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2690] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2690] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2690] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2692] = "JavaLexerImp.identifier_part_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2692] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2692] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2692] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2692] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2693] = "JavaLexerImp.identifier_part_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2693] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2693] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2693] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2694] = "JavaLexerImp.identifier_part_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2694] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2694] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2694] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2694] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2694] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2694] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2696] = "JavaLexerImp.identifier_part_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2696] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2696] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2696] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2696] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2697] = "JavaLexerImp.identifier_part_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2697] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2697] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2697] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2698] = "JavaLexerImp.identifier_part_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2698] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2698] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2698] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2698] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2698] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2698] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2700] = "JavaLexerImp.identifier_part_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2700] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2700] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2700] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2700] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2701] = "JavaLexerImp.identifier_part_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2701] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2701] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2701] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2702] = "JavaLexerImp.identifier_part_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2702] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2702] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2702] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2702] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2702] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2702] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2704] = "JavaLexerImp.identifier_part_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2704] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2704] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2704] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2704] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2705] = "JavaLexerImp.identifier_part_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2705] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2705] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2705] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2706] = "JavaLexerImp.identifier_part_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2706] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2706] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2706] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2706] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2706] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2706] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2708] = "JavaLexerImp.identifier_part_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2708] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2708] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2708] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2708] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2709] = "JavaLexerImp.identifier_part_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2709] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2709] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2709] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2710] = "JavaLexerImp.identifier_part_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2710] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2710] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2710] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2710] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2710] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2710] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2712] = "JavaLexerImp.identifier_part_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2712] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2712] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2712] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2712] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2713] = "JavaLexerImp.identifier_part_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2713] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2713] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2713] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2714] = "JavaLexerImp.identifier_part_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2714] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2714] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2714] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2714] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2714] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2714] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2716] = "JavaLexerImp.identifier_part_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2716] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2716] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2716] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2716] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2717] = "JavaLexerImp.identifier_part_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2717] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2717] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2717] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2718] = "JavaLexerImp.identifier_part_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2718] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2718] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2718] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2718] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2718] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2718] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2720] = "JavaLexerImp.identifier_part_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2720] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2720] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2720] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2720] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2721] = "JavaLexerImp.identifier_part_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2721] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2721] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2721] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2722] = "JavaLexerImp.identifier_part_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2722] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2722] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2722] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2722] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2722] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2722] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2724] = "JavaLexerImp.identifier_part_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2724] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2724] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2724] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2724] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2725] = "JavaLexerImp.identifier_part_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2725] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2725] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2725] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2726] = "JavaLexerImp.identifier_part_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2726] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2726] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2726] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2726] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2726] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2726] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2728] = "JavaLexerImp.identifier_part_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2728] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2728] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2728] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2728] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2729] = "JavaLexerImp.identifier_part_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2729] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2729] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2729] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2730] = "JavaLexerImp.identifier_part_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2730] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2730] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2730] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2730] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2730] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2730] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2732] = "JavaLexerImp.identifier_part_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2732] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2732] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2732] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2732] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2733] = "JavaLexerImp.identifier_part_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2733] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2733] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2733] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2734] = "JavaLexerImp.identifier_part_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2734] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2734] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2734] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2734] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2734] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2734] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2736] = "JavaLexerImp.identifier_part_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2736] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2736] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2736] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2736] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2737] = "JavaLexerImp.identifier_part_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2737] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2737] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2737] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2738] = "JavaLexerImp.identifier_part_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2738] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2738] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2738] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2738] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2738] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2738] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2740] = "JavaLexerImp.identifier_part_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2740] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2740] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2740] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2740] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2741] = "JavaLexerImp.identifier_part_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2741] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2741] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2741] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2742] = "JavaLexerImp.identifier_part_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2742] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2742] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2742] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2742] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2742] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2742] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2744] = "JavaLexerImp.identifier_part_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2744] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2744] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2744] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2744] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2745] = "JavaLexerImp.identifier_part_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2745] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2745] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2745] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2746] = "JavaLexerImp.identifier_part_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2746] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2746] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2746] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2746] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2746] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2746] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2748] = "JavaLexerImp.identifier_part_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2748] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2748] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2748] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2748] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2749] = "JavaLexerImp.identifier_part_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2749] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2749] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2749] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2750] = "JavaLexerImp.identifier_part_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2750] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2750] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2750] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2750] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2750] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2750] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2752] = "JavaLexerImp.identifier_part_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2752] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2752] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2752] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2752] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2753] = "JavaLexerImp.identifier_part_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2753] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2753] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2753] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2754] = "JavaLexerImp.identifier_part_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2754] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2754] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2754] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2754] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2754] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2754] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2756] = "JavaLexerImp.identifier_part_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2756] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2756] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2756] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2756] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2757] = "JavaLexerImp.identifier_part_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2757] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2757] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2757] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2758] = "JavaLexerImp.identifier_part_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2758] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2758] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2758] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2758] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2758] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2758] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2760] = "JavaLexerImp.identifier_part_character ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2760] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2760] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2760] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2760] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2761] = "JavaLexerImp.identifier_part_character ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2761] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2761] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2761] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2762] = "JavaLexerImp.identifier_part_character ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2762] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2762] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2762] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2762] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2762] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2762] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2764] = "JavaLexerImp.identifier_part_character ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2764] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2764] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2764] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2764] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2765] = "JavaLexerImp.identifier_part_character ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2765] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2765] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2765] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2766] = "JavaLexerImp.identifier_part_character ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2766] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2766] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2766] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2766] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2766] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2766] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2768] = "JavaLexerImp.identifier_part_character ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2768] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2768] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2768] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2768] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2769] = "JavaLexerImp.identifier_part_character ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2769] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2769] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2769] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2770] = "JavaLexerImp.identifier_part_character ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2770] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2770] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2770] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2770] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2770] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2770] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2772] = "JavaLexerImp.identifier_part_character ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2772] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2772] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2772] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2772] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2773] = "JavaLexerImp.identifier_part_character ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2773] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2773] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2773] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2774] = "JavaLexerImp.identifier_part_character ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2774] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2774] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2774] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2774] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2774] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2774] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2776] = "JavaLexerImp.identifier_part_character ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2776] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2776] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2776] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2776] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2777] = "JavaLexerImp.identifier_part_character ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2777] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2777] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2777] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2778] = "JavaLexerImp.identifier_part_character ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2778] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2778] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2778] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2778] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2778] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2778] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2780] = "JavaLexerImp.identifier_part_character ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2780] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2780] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2780] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2780] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2781] = "JavaLexerImp.identifier_part_character ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2781] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2781] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2781] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2782] = "JavaLexerImp.identifier_part_character ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2782] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2782] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2782] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2782] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2782] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2782] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2784] = "JavaLexerImp.identifier_part_character ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2784] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2784] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2784] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2784] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2785] = "JavaLexerImp.identifier_part_character ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2785] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2785] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2785] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2786] = "JavaLexerImp.identifier_part_character ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2786] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2786] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2786] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2786] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2786] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2786] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2788] = "JavaLexerImp.identifier_part_character ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2788] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2788] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2788] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2788] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2789] = "JavaLexerImp.identifier_part_character ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2789] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2789] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2789] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2790] = "JavaLexerImp.identifier_part_character ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2790] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2790] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2790] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2790] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2790] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2790] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2792] = "JavaLexerImp.identifier_part_character ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2792] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2792] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2792] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2792] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2793] = "JavaLexerImp.identifier_part_character ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2793] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2793] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2793] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2794] = "JavaLexerImp.identifier_part_character ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2794] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2794] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2794] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2794] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2794] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2794] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2796] = "JavaLexerImp.identifier_part_character ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2796] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2796] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2796] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2796] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2797] = "JavaLexerImp.identifier_part_character ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2797] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2797] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2797] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2798] = "JavaLexerImp.identifier_part_character ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2798] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2798] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2798] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2798] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2798] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2798] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2800] = "JavaLexerImp.identifier_part_character ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2800] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2800] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2800] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_identifier_part_character_2800] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2801] = "JavaLexerImp.identifier_part_character ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2801] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2801] = ART_L_JavaLexerImp_identifier_part_character;
		popD[ART_L_JavaLexerImp_identifier_part_character_2801] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2802] = "JavaLexerImp.identifier_part_character ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2802] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2802] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2802] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2802] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2802] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2802] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2804] = "JavaLexerImp.identifier_part_character ::= . JavaLexerImp.unicode_character_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2804] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2804] = ART_L_JavaLexerImp_identifier_part_character;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2804] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_identifier_part_character_2806] = "JavaLexerImp.identifier_part_character ::= JavaLexerImp.unicode_character_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_identifier_part_character_2806] = "";
		lhsL[ART_L_JavaLexerImp_identifier_part_character_2806] = ART_L_JavaLexerImp_identifier_part_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_identifier_part_character_2806] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_identifier_part_character_2806] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_identifier_part_character_2806] = true;
		eoR_pL[ART_L_JavaLexerImp_identifier_part_character_2806] = true;
		popD[ART_L_JavaLexerImp_identifier_part_character_2806] = true;
	}

	public void artTableInitialiser_157() {
		artLabelInternalStrings[ART_L_JavaLexerImp_if] = "JavaLexerImp.if ";
		artLabelStrings[ART_L_JavaLexerImp_if] = "if";
		artKindOfs[ART_L_JavaLexerImp_if] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_if_540] = "JavaLexerImp.if ::= . `i`f";
		artLabelStrings[ART_L_JavaLexerImp_if_540] = "";
		lhsL[ART_L_JavaLexerImp_if_540] = ART_L_JavaLexerImp_if;
		artKindOfs[ART_L_JavaLexerImp_if_540] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_if_540] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_if_541] = "JavaLexerImp.if ::= `i`f";
		artLabelStrings[ART_L_JavaLexerImp_if_541] = "";
		lhsL[ART_L_JavaLexerImp_if_541] = ART_L_JavaLexerImp_if;
		popD[ART_L_JavaLexerImp_if_541] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_if_542] = "JavaLexerImp.if ::= `i. `f";
		artLabelStrings[ART_L_JavaLexerImp_if_542] = "";
		lhsL[ART_L_JavaLexerImp_if_542] = ART_L_JavaLexerImp_if;
		artKindOfs[ART_L_JavaLexerImp_if_542] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_if_542] = true;
		popD[ART_L_JavaLexerImp_if_542] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_if_543] = "JavaLexerImp.if ::= `i`f";
		artLabelStrings[ART_L_JavaLexerImp_if_543] = "";
		lhsL[ART_L_JavaLexerImp_if_543] = ART_L_JavaLexerImp_if;
		popD[ART_L_JavaLexerImp_if_543] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_if_544] = "JavaLexerImp.if ::= `i`f. ";
		artLabelStrings[ART_L_JavaLexerImp_if_544] = "";
		lhsL[ART_L_JavaLexerImp_if_544] = ART_L_JavaLexerImp_if;
		artKindOfs[ART_L_JavaLexerImp_if_544] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_if_544] = true;
		eoR_pL[ART_L_JavaLexerImp_if_544] = true;
		popD[ART_L_JavaLexerImp_if_544] = true;
	}

	public void artTableInitialiser_158() {
		artLabelInternalStrings[ART_L_JavaLexerImp_implements] = "JavaLexerImp.implements ";
		artLabelStrings[ART_L_JavaLexerImp_implements] = "implements";
		artKindOfs[ART_L_JavaLexerImp_implements] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_558] = "JavaLexerImp.implements ::= . `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_558] = "";
		lhsL[ART_L_JavaLexerImp_implements_558] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_558] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_558] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_559] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_559] = "";
		lhsL[ART_L_JavaLexerImp_implements_559] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_559] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_560] = "JavaLexerImp.implements ::= `i. `m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_560] = "";
		lhsL[ART_L_JavaLexerImp_implements_560] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_560] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_implements_560] = true;
		popD[ART_L_JavaLexerImp_implements_560] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_561] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_561] = "";
		lhsL[ART_L_JavaLexerImp_implements_561] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_561] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_562] = "JavaLexerImp.implements ::= `i`m. `p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_562] = "";
		lhsL[ART_L_JavaLexerImp_implements_562] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_562] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_562] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_563] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_563] = "";
		lhsL[ART_L_JavaLexerImp_implements_563] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_563] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_564] = "JavaLexerImp.implements ::= `i`m`p. `l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_564] = "";
		lhsL[ART_L_JavaLexerImp_implements_564] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_564] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_564] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_565] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_565] = "";
		lhsL[ART_L_JavaLexerImp_implements_565] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_565] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_566] = "JavaLexerImp.implements ::= `i`m`p`l. `e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_566] = "";
		lhsL[ART_L_JavaLexerImp_implements_566] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_566] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_566] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_567] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_567] = "";
		lhsL[ART_L_JavaLexerImp_implements_567] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_567] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_568] = "JavaLexerImp.implements ::= `i`m`p`l`e. `m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_568] = "";
		lhsL[ART_L_JavaLexerImp_implements_568] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_568] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_568] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_569] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_569] = "";
		lhsL[ART_L_JavaLexerImp_implements_569] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_569] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_570] = "JavaLexerImp.implements ::= `i`m`p`l`e`m. `e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_570] = "";
		lhsL[ART_L_JavaLexerImp_implements_570] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_570] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_570] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_571] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_571] = "";
		lhsL[ART_L_JavaLexerImp_implements_571] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_571] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_572] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e. `n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_572] = "";
		lhsL[ART_L_JavaLexerImp_implements_572] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_572] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_572] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_573] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_573] = "";
		lhsL[ART_L_JavaLexerImp_implements_573] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_573] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_574] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n. `t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_574] = "";
		lhsL[ART_L_JavaLexerImp_implements_574] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_574] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_574] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_575] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_575] = "";
		lhsL[ART_L_JavaLexerImp_implements_575] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_575] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_576] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t. `s";
		artLabelStrings[ART_L_JavaLexerImp_implements_576] = "";
		lhsL[ART_L_JavaLexerImp_implements_576] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_576] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_implements_576] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_577] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s";
		artLabelStrings[ART_L_JavaLexerImp_implements_577] = "";
		lhsL[ART_L_JavaLexerImp_implements_577] = ART_L_JavaLexerImp_implements;
		popD[ART_L_JavaLexerImp_implements_577] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_implements_578] = "JavaLexerImp.implements ::= `i`m`p`l`e`m`e`n`t`s. ";
		artLabelStrings[ART_L_JavaLexerImp_implements_578] = "";
		lhsL[ART_L_JavaLexerImp_implements_578] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_implements_578] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_implements_578] = true;
		eoR_pL[ART_L_JavaLexerImp_implements_578] = true;
		popD[ART_L_JavaLexerImp_implements_578] = true;
	}

	public void artTableInitialiser_159() {
		artLabelInternalStrings[ART_L_JavaLexerImp_import] = "JavaLexerImp.import ";
		artLabelStrings[ART_L_JavaLexerImp_import] = "import";
		artKindOfs[ART_L_JavaLexerImp_import] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_581] = "JavaLexerImp.import ::= . `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_581] = "";
		lhsL[ART_L_JavaLexerImp_import_581] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_581] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_import_581] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_582] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_582] = "";
		lhsL[ART_L_JavaLexerImp_import_582] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_582] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_583] = "JavaLexerImp.import ::= `i. `m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_583] = "";
		lhsL[ART_L_JavaLexerImp_import_583] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_583] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_import_583] = true;
		popD[ART_L_JavaLexerImp_import_583] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_584] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_584] = "";
		lhsL[ART_L_JavaLexerImp_import_584] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_584] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_585] = "JavaLexerImp.import ::= `i`m. `p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_585] = "";
		lhsL[ART_L_JavaLexerImp_import_585] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_585] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_import_585] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_586] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_586] = "";
		lhsL[ART_L_JavaLexerImp_import_586] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_586] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_587] = "JavaLexerImp.import ::= `i`m`p. `o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_587] = "";
		lhsL[ART_L_JavaLexerImp_import_587] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_587] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_import_587] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_588] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_588] = "";
		lhsL[ART_L_JavaLexerImp_import_588] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_588] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_589] = "JavaLexerImp.import ::= `i`m`p`o. `r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_589] = "";
		lhsL[ART_L_JavaLexerImp_import_589] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_589] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_import_589] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_590] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_590] = "";
		lhsL[ART_L_JavaLexerImp_import_590] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_590] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_591] = "JavaLexerImp.import ::= `i`m`p`o`r. `t";
		artLabelStrings[ART_L_JavaLexerImp_import_591] = "";
		lhsL[ART_L_JavaLexerImp_import_591] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_591] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_import_591] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_592] = "JavaLexerImp.import ::= `i`m`p`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_import_592] = "";
		lhsL[ART_L_JavaLexerImp_import_592] = ART_L_JavaLexerImp_import;
		popD[ART_L_JavaLexerImp_import_592] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_import_593] = "JavaLexerImp.import ::= `i`m`p`o`r`t. ";
		artLabelStrings[ART_L_JavaLexerImp_import_593] = "";
		lhsL[ART_L_JavaLexerImp_import_593] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_import_593] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_import_593] = true;
		eoR_pL[ART_L_JavaLexerImp_import_593] = true;
		popD[ART_L_JavaLexerImp_import_593] = true;
	}

	public void artTableInitialiser_160() {
		artLabelInternalStrings[ART_L_JavaLexerImp_input] = "JavaLexerImp.input ";
		artLabelStrings[ART_L_JavaLexerImp_input] = "input";
		artKindOfs[ART_L_JavaLexerImp_input] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_5] = "JavaLexerImp.input ::= . ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_5] = "";
		lhsL[ART_L_JavaLexerImp_input_5] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_5] = ART_K_INTERMEDIATE;
		lhsL[ART_C_JavaLexerImp_input_6] = ART_L_JavaLexerImp_input;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_7] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_7] = "";
		lhsL[ART_A_JavaLexerImp_input_7] = ART_L_JavaLexerImp_input;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_9] = "JavaLexerImp.input ::= ( . JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_9] = "";
		lhsL[ART_L_JavaLexerImp_input_9] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_9] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_11] = "JavaLexerImp.input ::= ( JavaLexerImp.WS . | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_11] = "";
		lhsL[ART_L_JavaLexerImp_input_11] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_11] = ART_L_JavaLexerImp_WS;
		artKindOfs[ART_L_JavaLexerImp_input_11] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_11] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_11] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_11] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_13] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | . JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_13] = "";
		lhsL[ART_L_JavaLexerImp_input_13] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_13] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_15] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT . | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_15] = "";
		lhsL[ART_L_JavaLexerImp_input_15] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_15] = ART_L_JavaLexerImp_COMMENT;
		artKindOfs[ART_L_JavaLexerImp_input_15] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_15] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_15] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_15] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_17] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | . JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_17] = "";
		lhsL[ART_L_JavaLexerImp_input_17] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_17] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_19] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract . | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_19] = "";
		lhsL[ART_L_JavaLexerImp_input_19] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_19] = ART_L_JavaLexerImp_abstract;
		artKindOfs[ART_L_JavaLexerImp_input_19] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_19] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_19] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_19] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_21] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | . JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_21] = "";
		lhsL[ART_L_JavaLexerImp_input_21] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_21] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_23] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert . | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_23] = "";
		lhsL[ART_L_JavaLexerImp_input_23] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_23] = ART_L_JavaLexerImp_assert;
		artKindOfs[ART_L_JavaLexerImp_input_23] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_23] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_23] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_23] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_25] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | . JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_25] = "";
		lhsL[ART_L_JavaLexerImp_input_25] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_25] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_27] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean . | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_27] = "";
		lhsL[ART_L_JavaLexerImp_input_27] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_27] = ART_L_JavaLexerImp_boolean;
		artKindOfs[ART_L_JavaLexerImp_input_27] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_27] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_27] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_27] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_29] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | . JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_29] = "";
		lhsL[ART_L_JavaLexerImp_input_29] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_29] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_31] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break . | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_31] = "";
		lhsL[ART_L_JavaLexerImp_input_31] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_31] = ART_L_JavaLexerImp_break;
		artKindOfs[ART_L_JavaLexerImp_input_31] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_31] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_31] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_31] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_33] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | . JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_33] = "";
		lhsL[ART_L_JavaLexerImp_input_33] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_33] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_35] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte . | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_35] = "";
		lhsL[ART_L_JavaLexerImp_input_35] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_35] = ART_L_JavaLexerImp_byte;
		artKindOfs[ART_L_JavaLexerImp_input_35] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_35] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_35] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_35] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_37] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | . JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_37] = "";
		lhsL[ART_L_JavaLexerImp_input_37] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_37] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_39] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case . | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_39] = "";
		lhsL[ART_L_JavaLexerImp_input_39] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_39] = ART_L_JavaLexerImp_case;
		artKindOfs[ART_L_JavaLexerImp_input_39] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_39] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_39] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_39] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_41] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | . JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_41] = "";
		lhsL[ART_L_JavaLexerImp_input_41] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_41] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_43] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch . | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_43] = "";
		lhsL[ART_L_JavaLexerImp_input_43] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_43] = ART_L_JavaLexerImp_catch;
		artKindOfs[ART_L_JavaLexerImp_input_43] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_43] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_43] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_43] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_45] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | . JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_45] = "";
		lhsL[ART_L_JavaLexerImp_input_45] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_45] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_47] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char . | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_47] = "";
		lhsL[ART_L_JavaLexerImp_input_47] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_47] = ART_L_JavaLexerImp_char;
		artKindOfs[ART_L_JavaLexerImp_input_47] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_47] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_47] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_47] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_49] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | . JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_49] = "";
		lhsL[ART_L_JavaLexerImp_input_49] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_49] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_51] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class . | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_51] = "";
		lhsL[ART_L_JavaLexerImp_input_51] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_51] = ART_L_JavaLexerImp_class;
		artKindOfs[ART_L_JavaLexerImp_input_51] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_51] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_51] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_51] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_53] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | . JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_53] = "";
		lhsL[ART_L_JavaLexerImp_input_53] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_53] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_55] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const . | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_55] = "";
		lhsL[ART_L_JavaLexerImp_input_55] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_55] = ART_L_JavaLexerImp_const;
		artKindOfs[ART_L_JavaLexerImp_input_55] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_55] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_55] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_55] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_57] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | . JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_57] = "";
		lhsL[ART_L_JavaLexerImp_input_57] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_57] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_59] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue . | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_59] = "";
		lhsL[ART_L_JavaLexerImp_input_59] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_59] = ART_L_JavaLexerImp_continue;
		artKindOfs[ART_L_JavaLexerImp_input_59] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_59] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_59] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_59] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_61] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | . JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_61] = "";
		lhsL[ART_L_JavaLexerImp_input_61] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_61] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_63] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default . | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_63] = "";
		lhsL[ART_L_JavaLexerImp_input_63] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_63] = ART_L_JavaLexerImp_default;
		artKindOfs[ART_L_JavaLexerImp_input_63] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_63] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_63] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_63] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_65] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | . JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_65] = "";
		lhsL[ART_L_JavaLexerImp_input_65] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_65] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_67] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do . | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_67] = "";
		lhsL[ART_L_JavaLexerImp_input_67] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_67] = ART_L_JavaLexerImp_do;
		artKindOfs[ART_L_JavaLexerImp_input_67] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_67] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_67] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_67] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_69] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | . JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_69] = "";
		lhsL[ART_L_JavaLexerImp_input_69] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_69] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_71] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double . | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_71] = "";
		lhsL[ART_L_JavaLexerImp_input_71] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_71] = ART_L_JavaLexerImp_double;
		artKindOfs[ART_L_JavaLexerImp_input_71] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_71] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_71] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_71] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_73] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | . JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_73] = "";
		lhsL[ART_L_JavaLexerImp_input_73] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_73] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_75] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else . | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_75] = "";
		lhsL[ART_L_JavaLexerImp_input_75] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_75] = ART_L_JavaLexerImp_else;
		artKindOfs[ART_L_JavaLexerImp_input_75] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_75] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_75] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_75] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_77] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | . JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_77] = "";
		lhsL[ART_L_JavaLexerImp_input_77] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_77] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_79] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum . | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_79] = "";
		lhsL[ART_L_JavaLexerImp_input_79] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_79] = ART_L_JavaLexerImp_enum;
		artKindOfs[ART_L_JavaLexerImp_input_79] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_79] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_79] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_79] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_81] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | . JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_81] = "";
		lhsL[ART_L_JavaLexerImp_input_81] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_81] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_83] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends . | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_83] = "";
		lhsL[ART_L_JavaLexerImp_input_83] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_83] = ART_L_JavaLexerImp_extends;
		artKindOfs[ART_L_JavaLexerImp_input_83] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_83] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_83] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_83] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_85] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | . JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_85] = "";
		lhsL[ART_L_JavaLexerImp_input_85] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_85] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_87] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final . | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_87] = "";
		lhsL[ART_L_JavaLexerImp_input_87] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_87] = ART_L_JavaLexerImp_final;
		artKindOfs[ART_L_JavaLexerImp_input_87] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_87] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_87] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_87] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_89] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | . JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_89] = "";
		lhsL[ART_L_JavaLexerImp_input_89] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_89] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_91] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally . | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_91] = "";
		lhsL[ART_L_JavaLexerImp_input_91] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_91] = ART_L_JavaLexerImp_finally;
		artKindOfs[ART_L_JavaLexerImp_input_91] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_91] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_91] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_91] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_93] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | . JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_93] = "";
		lhsL[ART_L_JavaLexerImp_input_93] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_93] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_95] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float . | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_95] = "";
		lhsL[ART_L_JavaLexerImp_input_95] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_95] = ART_L_JavaLexerImp_float;
		artKindOfs[ART_L_JavaLexerImp_input_95] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_95] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_95] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_95] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_97] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | . JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_97] = "";
		lhsL[ART_L_JavaLexerImp_input_97] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_97] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_99] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for . | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_99] = "";
		lhsL[ART_L_JavaLexerImp_input_99] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_99] = ART_L_JavaLexerImp_for;
		artKindOfs[ART_L_JavaLexerImp_input_99] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_99] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_99] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_99] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_101] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | . JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_101] = "";
		lhsL[ART_L_JavaLexerImp_input_101] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_101] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_103] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if . | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_103] = "";
		lhsL[ART_L_JavaLexerImp_input_103] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_103] = ART_L_JavaLexerImp_if;
		artKindOfs[ART_L_JavaLexerImp_input_103] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_103] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_103] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_103] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_105] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | . JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_105] = "";
		lhsL[ART_L_JavaLexerImp_input_105] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_105] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_107] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto . | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_107] = "";
		lhsL[ART_L_JavaLexerImp_input_107] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_107] = ART_L_JavaLexerImp_goto;
		artKindOfs[ART_L_JavaLexerImp_input_107] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_107] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_107] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_107] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_109] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | . JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_109] = "";
		lhsL[ART_L_JavaLexerImp_input_109] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_109] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_111] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements . | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_111] = "";
		lhsL[ART_L_JavaLexerImp_input_111] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_111] = ART_L_JavaLexerImp_implements;
		artKindOfs[ART_L_JavaLexerImp_input_111] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_111] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_111] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_111] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_113] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | . JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_113] = "";
		lhsL[ART_L_JavaLexerImp_input_113] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_113] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_115] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import . | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_115] = "";
		lhsL[ART_L_JavaLexerImp_input_115] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_115] = ART_L_JavaLexerImp_import;
		artKindOfs[ART_L_JavaLexerImp_input_115] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_115] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_115] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_115] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_117] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | . JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_117] = "";
		lhsL[ART_L_JavaLexerImp_input_117] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_117] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_119] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof . | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_119] = "";
		lhsL[ART_L_JavaLexerImp_input_119] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_119] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_input_119] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_119] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_119] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_119] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_121] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | . JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_121] = "";
		lhsL[ART_L_JavaLexerImp_input_121] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_121] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_123] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int . | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_123] = "";
		lhsL[ART_L_JavaLexerImp_input_123] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_123] = ART_L_JavaLexerImp_int;
		artKindOfs[ART_L_JavaLexerImp_input_123] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_123] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_123] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_123] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_125] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | . JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_125] = "";
		lhsL[ART_L_JavaLexerImp_input_125] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_125] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_127] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface . | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_127] = "";
		lhsL[ART_L_JavaLexerImp_input_127] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_127] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_input_127] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_127] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_127] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_127] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_129] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | . JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_129] = "";
		lhsL[ART_L_JavaLexerImp_input_129] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_129] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_131] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long . | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_131] = "";
		lhsL[ART_L_JavaLexerImp_input_131] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_131] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_input_131] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_131] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_131] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_131] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_133] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | . JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_133] = "";
		lhsL[ART_L_JavaLexerImp_input_133] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_133] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_135] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native . | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_135] = "";
		lhsL[ART_L_JavaLexerImp_input_135] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_135] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_input_135] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_135] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_135] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_135] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_137] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | . JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_137] = "";
		lhsL[ART_L_JavaLexerImp_input_137] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_137] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_139] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new . | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_139] = "";
		lhsL[ART_L_JavaLexerImp_input_139] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_139] = ART_L_JavaLexerImp_new;
		artKindOfs[ART_L_JavaLexerImp_input_139] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_139] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_139] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_139] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_141] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | . JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_141] = "";
		lhsL[ART_L_JavaLexerImp_input_141] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_141] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_143] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package . | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_143] = "";
		lhsL[ART_L_JavaLexerImp_input_143] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_143] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_input_143] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_143] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_143] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_143] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_145] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | . JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_145] = "";
		lhsL[ART_L_JavaLexerImp_input_145] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_145] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_147] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private . | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_147] = "";
		lhsL[ART_L_JavaLexerImp_input_147] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_147] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_input_147] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_147] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_147] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_147] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_149] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | . JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_149] = "";
		lhsL[ART_L_JavaLexerImp_input_149] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_149] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_151] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected . | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_151] = "";
		lhsL[ART_L_JavaLexerImp_input_151] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_151] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_input_151] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_151] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_151] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_151] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_153] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | . JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_153] = "";
		lhsL[ART_L_JavaLexerImp_input_153] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_153] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_155] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public . | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_155] = "";
		lhsL[ART_L_JavaLexerImp_input_155] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_155] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_input_155] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_155] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_155] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_155] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_157] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | . JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_157] = "";
		lhsL[ART_L_JavaLexerImp_input_157] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_157] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_159] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return . | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_159] = "";
		lhsL[ART_L_JavaLexerImp_input_159] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_159] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_input_159] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_159] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_159] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_159] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_161] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | . JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_161] = "";
		lhsL[ART_L_JavaLexerImp_input_161] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_161] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_163] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short . | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_163] = "";
		lhsL[ART_L_JavaLexerImp_input_163] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_163] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_input_163] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_163] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_163] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_163] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_165] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | . JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_165] = "";
		lhsL[ART_L_JavaLexerImp_input_165] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_165] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_167] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static . | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_167] = "";
		lhsL[ART_L_JavaLexerImp_input_167] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_167] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_input_167] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_167] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_167] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_167] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_169] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | . JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_169] = "";
		lhsL[ART_L_JavaLexerImp_input_169] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_169] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_171] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp . | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_171] = "";
		lhsL[ART_L_JavaLexerImp_input_171] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_171] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_input_171] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_171] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_171] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_171] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_173] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | . JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_173] = "";
		lhsL[ART_L_JavaLexerImp_input_173] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_173] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_175] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super . | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_175] = "";
		lhsL[ART_L_JavaLexerImp_input_175] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_175] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_input_175] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_175] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_175] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_175] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_177] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | . JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_177] = "";
		lhsL[ART_L_JavaLexerImp_input_177] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_177] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_179] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch . | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_179] = "";
		lhsL[ART_L_JavaLexerImp_input_179] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_179] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_input_179] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_179] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_179] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_179] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_181] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | . JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_181] = "";
		lhsL[ART_L_JavaLexerImp_input_181] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_181] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_183] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized . | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_183] = "";
		lhsL[ART_L_JavaLexerImp_input_183] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_183] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_input_183] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_183] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_183] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_183] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_185] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | . JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_185] = "";
		lhsL[ART_L_JavaLexerImp_input_185] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_185] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_187] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this . | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_187] = "";
		lhsL[ART_L_JavaLexerImp_input_187] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_187] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_input_187] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_187] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_187] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_187] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_189] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | . JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_189] = "";
		lhsL[ART_L_JavaLexerImp_input_189] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_189] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_191] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw . | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_191] = "";
		lhsL[ART_L_JavaLexerImp_input_191] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_191] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_input_191] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_191] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_191] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_191] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_193] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | . JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_193] = "";
		lhsL[ART_L_JavaLexerImp_input_193] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_193] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_195] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws . | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_195] = "";
		lhsL[ART_L_JavaLexerImp_input_195] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_195] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_input_195] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_195] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_195] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_195] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_197] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | . JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_197] = "";
		lhsL[ART_L_JavaLexerImp_input_197] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_197] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_199] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient . | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_199] = "";
		lhsL[ART_L_JavaLexerImp_input_199] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_199] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_input_199] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_199] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_199] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_199] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_201] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | . JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_201] = "";
		lhsL[ART_L_JavaLexerImp_input_201] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_201] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_203] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try . | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_203] = "";
		lhsL[ART_L_JavaLexerImp_input_203] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_203] = ART_L_JavaLexerImp_try;
		artKindOfs[ART_L_JavaLexerImp_input_203] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_203] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_203] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_203] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_205] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | . JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_205] = "";
		lhsL[ART_L_JavaLexerImp_input_205] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_205] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_207] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void . | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_207] = "";
		lhsL[ART_L_JavaLexerImp_input_207] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_207] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_input_207] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_207] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_207] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_207] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_209] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | . JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_209] = "";
		lhsL[ART_L_JavaLexerImp_input_209] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_209] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_211] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile . | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_211] = "";
		lhsL[ART_L_JavaLexerImp_input_211] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_211] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_input_211] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_211] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_211] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_211] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_213] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | . JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_213] = "";
		lhsL[ART_L_JavaLexerImp_input_213] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_213] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_215] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while . | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_215] = "";
		lhsL[ART_L_JavaLexerImp_input_215] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_215] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_input_215] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_215] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_215] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_215] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_217] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | . JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_217] = "";
		lhsL[ART_L_JavaLexerImp_input_217] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_217] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_219] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID . | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_219] = "";
		lhsL[ART_L_JavaLexerImp_input_219] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_219] = ART_L_JavaLexerImp_ID;
		artKindOfs[ART_L_JavaLexerImp_input_219] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_219] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_219] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_219] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_221] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | . JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_221] = "";
		lhsL[ART_L_JavaLexerImp_input_221] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_221] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_223] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT . | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_223] = "";
		lhsL[ART_L_JavaLexerImp_input_223] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_223] = ART_L_JavaLexerImp_INT;
		artKindOfs[ART_L_JavaLexerImp_input_223] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_223] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_223] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_223] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_225] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | . JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_225] = "";
		lhsL[ART_L_JavaLexerImp_input_225] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_225] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_227] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT . | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_227] = "";
		lhsL[ART_L_JavaLexerImp_input_227] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_227] = ART_L_JavaLexerImp_FLOAT;
		artKindOfs[ART_L_JavaLexerImp_input_227] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_227] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_227] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_227] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_229] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | . JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_229] = "";
		lhsL[ART_L_JavaLexerImp_input_229] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_229] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_231] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL . | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_231] = "";
		lhsL[ART_L_JavaLexerImp_input_231] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_231] = ART_L_JavaLexerImp_BOOL;
		artKindOfs[ART_L_JavaLexerImp_input_231] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_231] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_231] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_231] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_233] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | . JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_233] = "";
		lhsL[ART_L_JavaLexerImp_input_233] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_233] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_235] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR . | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_235] = "";
		lhsL[ART_L_JavaLexerImp_input_235] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_235] = ART_L_JavaLexerImp_CHAR;
		artKindOfs[ART_L_JavaLexerImp_input_235] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_235] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_235] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_235] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_237] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | . JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_237] = "";
		lhsL[ART_L_JavaLexerImp_input_237] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_237] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_239] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING . | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_239] = "";
		lhsL[ART_L_JavaLexerImp_input_239] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_239] = ART_L_JavaLexerImp_STRING;
		artKindOfs[ART_L_JavaLexerImp_input_239] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_239] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_239] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_239] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_241] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | . JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_241] = "";
		lhsL[ART_L_JavaLexerImp_input_241] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_241] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_243] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL . | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_243] = "";
		lhsL[ART_L_JavaLexerImp_input_243] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_243] = ART_L_JavaLexerImp_NULL;
		artKindOfs[ART_L_JavaLexerImp_input_243] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_243] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_243] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_243] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_245] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | . JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_245] = "";
		lhsL[ART_L_JavaLexerImp_input_245] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_245] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_247] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS . | JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_247] = "";
		lhsL[ART_L_JavaLexerImp_input_247] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_247] = ART_L_JavaLexerImp_SEPARATORS;
		artKindOfs[ART_L_JavaLexerImp_input_247] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_input_247] = ART_L_JavaLexerImp_input_251;
		aL[ART_L_JavaLexerImp_input_247] = ART_L_JavaLexerImp_input_251;
		popD[ART_L_JavaLexerImp_input_247] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_249] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | . JavaLexerImp.OP )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_249] = "";
		lhsL[ART_L_JavaLexerImp_input_249] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_249] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_251] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP . )* ";
		artLabelStrings[ART_L_JavaLexerImp_input_251] = "";
		lhsL[ART_L_JavaLexerImp_input_251] = ART_L_JavaLexerImp_input;
		artSlotInstanceOfs[ART_L_JavaLexerImp_input_251] = ART_L_JavaLexerImp_OP;
		artKindOfs[ART_L_JavaLexerImp_input_251] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_251] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_252] = "JavaLexerImp.input ::= ( JavaLexerImp.WS | JavaLexerImp.COMMENT | JavaLexerImp.abstract | JavaLexerImp.assert | JavaLexerImp.boolean | JavaLexerImp.break | JavaLexerImp.byte | JavaLexerImp.case | JavaLexerImp.catch | JavaLexerImp.char | JavaLexerImp.class | JavaLexerImp.const | JavaLexerImp.continue | JavaLexerImp.default | JavaLexerImp.do | JavaLexerImp.double | JavaLexerImp.else | JavaLexerImp.enum | JavaLexerImp.extends | JavaLexerImp.final | JavaLexerImp.finally | JavaLexerImp.float | JavaLexerImp.for | JavaLexerImp.if | JavaLexerImp.goto | JavaLexerImp.implements | JavaLexerImp.import | JavaLexerImp.instanceof | JavaLexerImp.int | JavaLexerImp.interface | JavaLexerImp.long | JavaLexerImp.native | JavaLexerImp.new | JavaLexerImp.package | JavaLexerImp.private | JavaLexerImp.protected | JavaLexerImp.public | JavaLexerImp.return | JavaLexerImp.short | JavaLexerImp.static | JavaLexerImp.strictfp | JavaLexerImp.super | JavaLexerImp.switch | JavaLexerImp.synchronized | JavaLexerImp.this | JavaLexerImp.throw | JavaLexerImp.throws | JavaLexerImp.transient | JavaLexerImp.try | JavaLexerImp.void | JavaLexerImp.volatile | JavaLexerImp.while | JavaLexerImp.ID | JavaLexerImp.INT | JavaLexerImp.FLOAT | JavaLexerImp.BOOL | JavaLexerImp.CHAR | JavaLexerImp.STRING | JavaLexerImp.NULL | JavaLexerImp.SEPARATORS | JavaLexerImp.OP )* . ";
		artLabelStrings[ART_L_JavaLexerImp_input_252] = "";
		lhsL[ART_L_JavaLexerImp_input_252] = ART_L_JavaLexerImp_input;
		artKindOfs[ART_L_JavaLexerImp_input_252] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_252] = true;
		eoR_pL[ART_L_JavaLexerImp_input_252] = true;
		popD[ART_L_JavaLexerImp_input_252] = true;
	}

	public void artTableInitialiser_161() {
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character] = "JavaLexerImp.input_character ";
		artLabelStrings[ART_L_JavaLexerImp_input_character] = "input_character";
		artKindOfs[ART_L_JavaLexerImp_input_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1054] = "JavaLexerImp.input_character ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1054] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1054] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1054] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1054] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1055] = "JavaLexerImp.input_character ::= `";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1055] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1055] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1055] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1056] = "JavaLexerImp.input_character ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1056] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1056] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1056] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1056] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1056] = true;
		popD[ART_L_JavaLexerImp_input_character_1056] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1058] = "JavaLexerImp.input_character ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1058] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1058] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1058] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1058] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1059] = "JavaLexerImp.input_character ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1059] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1059] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1059] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1060] = "JavaLexerImp.input_character ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1060] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1060] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1060] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1060] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1060] = true;
		popD[ART_L_JavaLexerImp_input_character_1060] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1062] = "JavaLexerImp.input_character ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1062] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1062] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1062] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1062] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1063] = "JavaLexerImp.input_character ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1063] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1063] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1063] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1064] = "JavaLexerImp.input_character ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1064] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1064] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1064] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1064] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1064] = true;
		popD[ART_L_JavaLexerImp_input_character_1064] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1066] = "JavaLexerImp.input_character ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1066] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1066] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1066] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1066] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1067] = "JavaLexerImp.input_character ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1067] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1067] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1067] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1068] = "JavaLexerImp.input_character ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1068] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1068] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1068] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1068] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1068] = true;
		popD[ART_L_JavaLexerImp_input_character_1068] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1070] = "JavaLexerImp.input_character ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1070] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1070] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1070] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1070] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1071] = "JavaLexerImp.input_character ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1071] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1071] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1071] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1072] = "JavaLexerImp.input_character ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1072] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1072] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1072] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1072] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1072] = true;
		popD[ART_L_JavaLexerImp_input_character_1072] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1074] = "JavaLexerImp.input_character ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1074] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1074] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1074] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1074] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1075] = "JavaLexerImp.input_character ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1075] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1075] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1075] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1076] = "JavaLexerImp.input_character ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1076] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1076] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1076] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1076] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1076] = true;
		popD[ART_L_JavaLexerImp_input_character_1076] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1078] = "JavaLexerImp.input_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1078] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1078] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1078] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1078] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1079] = "JavaLexerImp.input_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1079] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1079] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1079] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1080] = "JavaLexerImp.input_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1080] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1080] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1080] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1080] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1080] = true;
		popD[ART_L_JavaLexerImp_input_character_1080] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1082] = "JavaLexerImp.input_character ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1082] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1082] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1082] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1082] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1083] = "JavaLexerImp.input_character ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1083] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1083] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1083] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1084] = "JavaLexerImp.input_character ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1084] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1084] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1084] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1084] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1084] = true;
		popD[ART_L_JavaLexerImp_input_character_1084] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1086] = "JavaLexerImp.input_character ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1086] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1086] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1086] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1086] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1087] = "JavaLexerImp.input_character ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1087] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1087] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1087] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1088] = "JavaLexerImp.input_character ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1088] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1088] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1088] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1088] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1088] = true;
		popD[ART_L_JavaLexerImp_input_character_1088] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1090] = "JavaLexerImp.input_character ::= . `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1090] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1090] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1090] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1090] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1091] = "JavaLexerImp.input_character ::= `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1091] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1091] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1091] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1092] = "JavaLexerImp.input_character ::= `\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1092] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1092] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1092] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1092] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1092] = true;
		popD[ART_L_JavaLexerImp_input_character_1092] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1094] = "JavaLexerImp.input_character ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1094] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1094] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1094] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1094] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1095] = "JavaLexerImp.input_character ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1095] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1095] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1095] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1096] = "JavaLexerImp.input_character ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1096] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1096] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1096] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1096] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1096] = true;
		popD[ART_L_JavaLexerImp_input_character_1096] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1098] = "JavaLexerImp.input_character ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1098] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1098] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1098] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1098] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1099] = "JavaLexerImp.input_character ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1099] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1099] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1099] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1100] = "JavaLexerImp.input_character ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1100] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1100] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1100] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1100] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1100] = true;
		popD[ART_L_JavaLexerImp_input_character_1100] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1102] = "JavaLexerImp.input_character ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1102] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1102] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1102] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1102] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1103] = "JavaLexerImp.input_character ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1103] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1103] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1103] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1104] = "JavaLexerImp.input_character ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1104] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1104] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1104] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1104] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1104] = true;
		popD[ART_L_JavaLexerImp_input_character_1104] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1106] = "JavaLexerImp.input_character ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1106] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1106] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1106] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1106] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1107] = "JavaLexerImp.input_character ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1107] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1107] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1107] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1108] = "JavaLexerImp.input_character ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1108] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1108] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1108] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1108] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1108] = true;
		popD[ART_L_JavaLexerImp_input_character_1108] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1110] = "JavaLexerImp.input_character ::= . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1110] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1110] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1110] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1110] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1111] = "JavaLexerImp.input_character ::= `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1111] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1111] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1111] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1112] = "JavaLexerImp.input_character ::= `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1112] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1112] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1112] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1112] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1112] = true;
		popD[ART_L_JavaLexerImp_input_character_1112] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1114] = "JavaLexerImp.input_character ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1114] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1114] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1114] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1114] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1115] = "JavaLexerImp.input_character ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1115] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1115] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1115] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1116] = "JavaLexerImp.input_character ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1116] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1116] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1116] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1116] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1116] = true;
		popD[ART_L_JavaLexerImp_input_character_1116] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1118] = "JavaLexerImp.input_character ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1118] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1118] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1118] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1118] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1119] = "JavaLexerImp.input_character ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1119] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1119] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1119] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1120] = "JavaLexerImp.input_character ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1120] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1120] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1120] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1120] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1120] = true;
		popD[ART_L_JavaLexerImp_input_character_1120] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1122] = "JavaLexerImp.input_character ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1122] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1122] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1122] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1122] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1123] = "JavaLexerImp.input_character ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1123] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1123] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1123] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1124] = "JavaLexerImp.input_character ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1124] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1124] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1124] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1124] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1124] = true;
		popD[ART_L_JavaLexerImp_input_character_1124] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1126] = "JavaLexerImp.input_character ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1126] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1126] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1126] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1126] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1127] = "JavaLexerImp.input_character ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1127] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1127] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1127] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1128] = "JavaLexerImp.input_character ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1128] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1128] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1128] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1128] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1128] = true;
		popD[ART_L_JavaLexerImp_input_character_1128] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1130] = "JavaLexerImp.input_character ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1130] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1130] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1130] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1130] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1131] = "JavaLexerImp.input_character ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1131] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1131] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1131] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1132] = "JavaLexerImp.input_character ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1132] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1132] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1132] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1132] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1132] = true;
		popD[ART_L_JavaLexerImp_input_character_1132] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1134] = "JavaLexerImp.input_character ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1134] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1134] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1134] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1134] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1135] = "JavaLexerImp.input_character ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1135] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1135] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1135] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1136] = "JavaLexerImp.input_character ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1136] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1136] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1136] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1136] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1136] = true;
		popD[ART_L_JavaLexerImp_input_character_1136] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1138] = "JavaLexerImp.input_character ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1138] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1138] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1138] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1138] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1139] = "JavaLexerImp.input_character ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1139] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1139] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1139] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1140] = "JavaLexerImp.input_character ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1140] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1140] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1140] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1140] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1140] = true;
		popD[ART_L_JavaLexerImp_input_character_1140] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1142] = "JavaLexerImp.input_character ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1142] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1142] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1142] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1142] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1143] = "JavaLexerImp.input_character ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1143] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1143] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1143] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1144] = "JavaLexerImp.input_character ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1144] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1144] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1144] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1144] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1144] = true;
		popD[ART_L_JavaLexerImp_input_character_1144] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1146] = "JavaLexerImp.input_character ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1146] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1146] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1146] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1146] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1147] = "JavaLexerImp.input_character ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1147] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1147] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1147] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1148] = "JavaLexerImp.input_character ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1148] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1148] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1148] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1148] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1148] = true;
		popD[ART_L_JavaLexerImp_input_character_1148] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1150] = "JavaLexerImp.input_character ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1150] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1150] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1150] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1150] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1151] = "JavaLexerImp.input_character ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1151] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1151] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1151] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1152] = "JavaLexerImp.input_character ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1152] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1152] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1152] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1152] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1152] = true;
		popD[ART_L_JavaLexerImp_input_character_1152] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1154] = "JavaLexerImp.input_character ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1154] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1154] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1154] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1154] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1155] = "JavaLexerImp.input_character ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1155] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1155] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1155] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1156] = "JavaLexerImp.input_character ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1156] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1156] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1156] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1156] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1156] = true;
		popD[ART_L_JavaLexerImp_input_character_1156] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1158] = "JavaLexerImp.input_character ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1158] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1158] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1158] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1158] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1159] = "JavaLexerImp.input_character ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1159] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1159] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1159] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1160] = "JavaLexerImp.input_character ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1160] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1160] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1160] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1160] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1160] = true;
		popD[ART_L_JavaLexerImp_input_character_1160] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1162] = "JavaLexerImp.input_character ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1162] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1162] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1162] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1162] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1163] = "JavaLexerImp.input_character ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1163] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1163] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1163] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1164] = "JavaLexerImp.input_character ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1164] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1164] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1164] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1164] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1164] = true;
		popD[ART_L_JavaLexerImp_input_character_1164] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1166] = "JavaLexerImp.input_character ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1166] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1166] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1166] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1166] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1167] = "JavaLexerImp.input_character ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1167] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1167] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1167] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1168] = "JavaLexerImp.input_character ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1168] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1168] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1168] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1168] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1168] = true;
		popD[ART_L_JavaLexerImp_input_character_1168] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1170] = "JavaLexerImp.input_character ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1170] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1170] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1170] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1170] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1171] = "JavaLexerImp.input_character ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1171] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1171] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1171] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1172] = "JavaLexerImp.input_character ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1172] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1172] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1172] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1172] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1172] = true;
		popD[ART_L_JavaLexerImp_input_character_1172] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1174] = "JavaLexerImp.input_character ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1174] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1174] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1174] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1174] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1175] = "JavaLexerImp.input_character ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1175] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1175] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1175] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1176] = "JavaLexerImp.input_character ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1176] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1176] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1176] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1176] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1176] = true;
		popD[ART_L_JavaLexerImp_input_character_1176] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1178] = "JavaLexerImp.input_character ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1178] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1178] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1178] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1178] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1179] = "JavaLexerImp.input_character ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1179] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1179] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1179] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1180] = "JavaLexerImp.input_character ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1180] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1180] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1180] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1180] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1180] = true;
		popD[ART_L_JavaLexerImp_input_character_1180] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1182] = "JavaLexerImp.input_character ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1182] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1182] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1182] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1182] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1183] = "JavaLexerImp.input_character ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1183] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1183] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1183] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1184] = "JavaLexerImp.input_character ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1184] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1184] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1184] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1184] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1184] = true;
		popD[ART_L_JavaLexerImp_input_character_1184] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1186] = "JavaLexerImp.input_character ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1186] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1186] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1186] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1186] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1187] = "JavaLexerImp.input_character ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1187] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1187] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1187] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1188] = "JavaLexerImp.input_character ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1188] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1188] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1188] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1188] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1188] = true;
		popD[ART_L_JavaLexerImp_input_character_1188] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1190] = "JavaLexerImp.input_character ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1190] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1190] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1190] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1190] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1191] = "JavaLexerImp.input_character ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1191] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1191] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1191] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1192] = "JavaLexerImp.input_character ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1192] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1192] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1192] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1192] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1192] = true;
		popD[ART_L_JavaLexerImp_input_character_1192] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1194] = "JavaLexerImp.input_character ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1194] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1194] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1194] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1194] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1195] = "JavaLexerImp.input_character ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1195] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1195] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1195] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1196] = "JavaLexerImp.input_character ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1196] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1196] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1196] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1196] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1196] = true;
		popD[ART_L_JavaLexerImp_input_character_1196] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1198] = "JavaLexerImp.input_character ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1198] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1198] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1198] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1198] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1199] = "JavaLexerImp.input_character ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1199] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1199] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1199] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1200] = "JavaLexerImp.input_character ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1200] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1200] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1200] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1200] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1200] = true;
		popD[ART_L_JavaLexerImp_input_character_1200] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1202] = "JavaLexerImp.input_character ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1202] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1202] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1202] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1202] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1203] = "JavaLexerImp.input_character ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1203] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1203] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1203] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1204] = "JavaLexerImp.input_character ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1204] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1204] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1204] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1204] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1204] = true;
		popD[ART_L_JavaLexerImp_input_character_1204] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1206] = "JavaLexerImp.input_character ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1206] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1206] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1206] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1206] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1207] = "JavaLexerImp.input_character ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1207] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1207] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1207] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1208] = "JavaLexerImp.input_character ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1208] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1208] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1208] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1208] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1208] = true;
		popD[ART_L_JavaLexerImp_input_character_1208] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1210] = "JavaLexerImp.input_character ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1210] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1210] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1210] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1210] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1211] = "JavaLexerImp.input_character ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1211] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1211] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1211] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1212] = "JavaLexerImp.input_character ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1212] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1212] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1212] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1212] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1212] = true;
		popD[ART_L_JavaLexerImp_input_character_1212] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1214] = "JavaLexerImp.input_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1214] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1214] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1214] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1214] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1215] = "JavaLexerImp.input_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1215] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1215] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1215] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1216] = "JavaLexerImp.input_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1216] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1216] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1216] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1216] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1216] = true;
		popD[ART_L_JavaLexerImp_input_character_1216] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1218] = "JavaLexerImp.input_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1218] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1218] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1218] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1218] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1219] = "JavaLexerImp.input_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1219] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1219] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1219] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1220] = "JavaLexerImp.input_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1220] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1220] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1220] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1220] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1220] = true;
		popD[ART_L_JavaLexerImp_input_character_1220] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1222] = "JavaLexerImp.input_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1222] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1222] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1222] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1222] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1223] = "JavaLexerImp.input_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1223] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1223] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1223] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1224] = "JavaLexerImp.input_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1224] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1224] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1224] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1224] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1224] = true;
		popD[ART_L_JavaLexerImp_input_character_1224] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1226] = "JavaLexerImp.input_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1226] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1226] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1226] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1226] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1227] = "JavaLexerImp.input_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1227] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1227] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1227] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1228] = "JavaLexerImp.input_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1228] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1228] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1228] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1228] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1228] = true;
		popD[ART_L_JavaLexerImp_input_character_1228] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1230] = "JavaLexerImp.input_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1230] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1230] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1230] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1230] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1231] = "JavaLexerImp.input_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1231] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1231] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1231] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1232] = "JavaLexerImp.input_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1232] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1232] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1232] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1232] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1232] = true;
		popD[ART_L_JavaLexerImp_input_character_1232] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1234] = "JavaLexerImp.input_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1234] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1234] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1234] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1234] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1235] = "JavaLexerImp.input_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1235] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1235] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1235] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1236] = "JavaLexerImp.input_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1236] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1236] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1236] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1236] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1236] = true;
		popD[ART_L_JavaLexerImp_input_character_1236] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1238] = "JavaLexerImp.input_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1238] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1238] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1238] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1238] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1239] = "JavaLexerImp.input_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1239] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1239] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1239] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1240] = "JavaLexerImp.input_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1240] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1240] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1240] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1240] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1240] = true;
		popD[ART_L_JavaLexerImp_input_character_1240] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1242] = "JavaLexerImp.input_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1242] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1242] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1242] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1242] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1243] = "JavaLexerImp.input_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1243] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1243] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1243] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1244] = "JavaLexerImp.input_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1244] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1244] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1244] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1244] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1244] = true;
		popD[ART_L_JavaLexerImp_input_character_1244] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1246] = "JavaLexerImp.input_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1246] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1246] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1246] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1246] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1247] = "JavaLexerImp.input_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1247] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1247] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1247] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1248] = "JavaLexerImp.input_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1248] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1248] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1248] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1248] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1248] = true;
		popD[ART_L_JavaLexerImp_input_character_1248] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1250] = "JavaLexerImp.input_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1250] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1250] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1250] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1250] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1251] = "JavaLexerImp.input_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1251] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1251] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1251] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1252] = "JavaLexerImp.input_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1252] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1252] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1252] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1252] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1252] = true;
		popD[ART_L_JavaLexerImp_input_character_1252] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1254] = "JavaLexerImp.input_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1254] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1254] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1254] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1254] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1255] = "JavaLexerImp.input_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1255] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1255] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1255] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1256] = "JavaLexerImp.input_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1256] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1256] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1256] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1256] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1256] = true;
		popD[ART_L_JavaLexerImp_input_character_1256] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1258] = "JavaLexerImp.input_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1258] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1258] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1258] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1258] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1259] = "JavaLexerImp.input_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1259] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1259] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1259] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1260] = "JavaLexerImp.input_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1260] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1260] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1260] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1260] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1260] = true;
		popD[ART_L_JavaLexerImp_input_character_1260] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1262] = "JavaLexerImp.input_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1262] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1262] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1262] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1262] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1263] = "JavaLexerImp.input_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1263] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1263] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1263] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1264] = "JavaLexerImp.input_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1264] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1264] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1264] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1264] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1264] = true;
		popD[ART_L_JavaLexerImp_input_character_1264] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1266] = "JavaLexerImp.input_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1266] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1266] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1266] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1266] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1267] = "JavaLexerImp.input_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1267] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1267] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1267] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1268] = "JavaLexerImp.input_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1268] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1268] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1268] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1268] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1268] = true;
		popD[ART_L_JavaLexerImp_input_character_1268] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1270] = "JavaLexerImp.input_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1270] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1270] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1270] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1270] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1271] = "JavaLexerImp.input_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1271] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1271] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1271] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1272] = "JavaLexerImp.input_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1272] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1272] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1272] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1272] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1272] = true;
		popD[ART_L_JavaLexerImp_input_character_1272] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1274] = "JavaLexerImp.input_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1274] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1274] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1274] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1274] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1275] = "JavaLexerImp.input_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1275] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1275] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1275] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1276] = "JavaLexerImp.input_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1276] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1276] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1276] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1276] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1276] = true;
		popD[ART_L_JavaLexerImp_input_character_1276] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1278] = "JavaLexerImp.input_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1278] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1278] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1278] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1278] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1279] = "JavaLexerImp.input_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1279] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1279] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1279] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1280] = "JavaLexerImp.input_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1280] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1280] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1280] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1280] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1280] = true;
		popD[ART_L_JavaLexerImp_input_character_1280] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1282] = "JavaLexerImp.input_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1282] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1282] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1282] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1282] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1283] = "JavaLexerImp.input_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1283] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1283] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1283] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1284] = "JavaLexerImp.input_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1284] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1284] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1284] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1284] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1284] = true;
		popD[ART_L_JavaLexerImp_input_character_1284] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1286] = "JavaLexerImp.input_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1286] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1286] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1286] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1286] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1287] = "JavaLexerImp.input_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1287] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1287] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1287] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1288] = "JavaLexerImp.input_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1288] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1288] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1288] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1288] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1288] = true;
		popD[ART_L_JavaLexerImp_input_character_1288] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1290] = "JavaLexerImp.input_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1290] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1290] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1290] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1290] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1291] = "JavaLexerImp.input_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1291] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1291] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1291] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1292] = "JavaLexerImp.input_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1292] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1292] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1292] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1292] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1292] = true;
		popD[ART_L_JavaLexerImp_input_character_1292] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1294] = "JavaLexerImp.input_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1294] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1294] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1294] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1294] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1295] = "JavaLexerImp.input_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1295] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1295] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1295] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1296] = "JavaLexerImp.input_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1296] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1296] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1296] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1296] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1296] = true;
		popD[ART_L_JavaLexerImp_input_character_1296] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1298] = "JavaLexerImp.input_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1298] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1298] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1298] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1298] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1299] = "JavaLexerImp.input_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1299] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1299] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1299] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1300] = "JavaLexerImp.input_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1300] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1300] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1300] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1300] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1300] = true;
		popD[ART_L_JavaLexerImp_input_character_1300] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1302] = "JavaLexerImp.input_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1302] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1302] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1302] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1302] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1303] = "JavaLexerImp.input_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1303] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1303] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1303] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1304] = "JavaLexerImp.input_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1304] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1304] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1304] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1304] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1304] = true;
		popD[ART_L_JavaLexerImp_input_character_1304] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1306] = "JavaLexerImp.input_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1306] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1306] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1306] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1306] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1307] = "JavaLexerImp.input_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1307] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1307] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1307] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1308] = "JavaLexerImp.input_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1308] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1308] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1308] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1308] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1308] = true;
		popD[ART_L_JavaLexerImp_input_character_1308] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1310] = "JavaLexerImp.input_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1310] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1310] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1310] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1310] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1311] = "JavaLexerImp.input_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1311] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1311] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1311] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1312] = "JavaLexerImp.input_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1312] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1312] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1312] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1312] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1312] = true;
		popD[ART_L_JavaLexerImp_input_character_1312] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1314] = "JavaLexerImp.input_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1314] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1314] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1314] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1314] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1315] = "JavaLexerImp.input_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1315] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1315] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1315] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1316] = "JavaLexerImp.input_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1316] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1316] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1316] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1316] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1316] = true;
		popD[ART_L_JavaLexerImp_input_character_1316] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1318] = "JavaLexerImp.input_character ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1318] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1318] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1318] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1318] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1319] = "JavaLexerImp.input_character ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1319] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1319] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1319] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1320] = "JavaLexerImp.input_character ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1320] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1320] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1320] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1320] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1320] = true;
		popD[ART_L_JavaLexerImp_input_character_1320] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1322] = "JavaLexerImp.input_character ::= . `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1322] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1322] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1322] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1322] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1323] = "JavaLexerImp.input_character ::= `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1323] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1323] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1323] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1324] = "JavaLexerImp.input_character ::= `\\\\\\\\. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1324] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1324] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1324] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1324] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1324] = true;
		popD[ART_L_JavaLexerImp_input_character_1324] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1326] = "JavaLexerImp.input_character ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1326] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1326] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1326] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1326] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1327] = "JavaLexerImp.input_character ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1327] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1327] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1327] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1328] = "JavaLexerImp.input_character ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1328] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1328] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1328] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1328] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1328] = true;
		popD[ART_L_JavaLexerImp_input_character_1328] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1330] = "JavaLexerImp.input_character ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1330] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1330] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1330] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1330] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1331] = "JavaLexerImp.input_character ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1331] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1331] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1331] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1332] = "JavaLexerImp.input_character ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1332] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1332] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1332] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1332] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1332] = true;
		popD[ART_L_JavaLexerImp_input_character_1332] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1334] = "JavaLexerImp.input_character ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1334] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1334] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1334] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1334] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1335] = "JavaLexerImp.input_character ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1335] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1335] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1335] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1336] = "JavaLexerImp.input_character ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1336] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1336] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1336] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1336] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1336] = true;
		popD[ART_L_JavaLexerImp_input_character_1336] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1338] = "JavaLexerImp.input_character ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1338] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1338] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1338] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1338] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1339] = "JavaLexerImp.input_character ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1339] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1339] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1339] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1340] = "JavaLexerImp.input_character ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1340] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1340] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1340] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1340] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1340] = true;
		popD[ART_L_JavaLexerImp_input_character_1340] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1342] = "JavaLexerImp.input_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1342] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1342] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1342] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1342] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1343] = "JavaLexerImp.input_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1343] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1343] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1343] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1344] = "JavaLexerImp.input_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1344] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1344] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1344] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1344] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1344] = true;
		popD[ART_L_JavaLexerImp_input_character_1344] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1346] = "JavaLexerImp.input_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1346] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1346] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1346] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1346] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1347] = "JavaLexerImp.input_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1347] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1347] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1347] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1348] = "JavaLexerImp.input_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1348] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1348] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1348] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1348] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1348] = true;
		popD[ART_L_JavaLexerImp_input_character_1348] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1350] = "JavaLexerImp.input_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1350] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1350] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1350] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1350] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1351] = "JavaLexerImp.input_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1351] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1351] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1351] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1352] = "JavaLexerImp.input_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1352] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1352] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1352] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1352] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1352] = true;
		popD[ART_L_JavaLexerImp_input_character_1352] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1354] = "JavaLexerImp.input_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1354] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1354] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1354] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1354] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1355] = "JavaLexerImp.input_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1355] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1355] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1355] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1356] = "JavaLexerImp.input_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1356] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1356] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1356] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1356] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1356] = true;
		popD[ART_L_JavaLexerImp_input_character_1356] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1358] = "JavaLexerImp.input_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1358] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1358] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1358] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1358] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1359] = "JavaLexerImp.input_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1359] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1359] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1359] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1360] = "JavaLexerImp.input_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1360] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1360] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1360] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1360] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1360] = true;
		popD[ART_L_JavaLexerImp_input_character_1360] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1362] = "JavaLexerImp.input_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1362] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1362] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1362] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1362] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1363] = "JavaLexerImp.input_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1363] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1363] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1363] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1364] = "JavaLexerImp.input_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1364] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1364] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1364] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1364] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1364] = true;
		popD[ART_L_JavaLexerImp_input_character_1364] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1366] = "JavaLexerImp.input_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1366] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1366] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1366] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1366] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1367] = "JavaLexerImp.input_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1367] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1367] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1367] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1368] = "JavaLexerImp.input_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1368] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1368] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1368] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1368] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1368] = true;
		popD[ART_L_JavaLexerImp_input_character_1368] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1370] = "JavaLexerImp.input_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1370] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1370] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1370] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1370] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1371] = "JavaLexerImp.input_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1371] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1371] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1371] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1372] = "JavaLexerImp.input_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1372] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1372] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1372] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1372] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1372] = true;
		popD[ART_L_JavaLexerImp_input_character_1372] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1374] = "JavaLexerImp.input_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1374] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1374] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1374] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1374] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1375] = "JavaLexerImp.input_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1375] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1375] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1375] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1376] = "JavaLexerImp.input_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1376] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1376] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1376] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1376] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1376] = true;
		popD[ART_L_JavaLexerImp_input_character_1376] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1378] = "JavaLexerImp.input_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1378] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1378] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1378] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1378] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1379] = "JavaLexerImp.input_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1379] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1379] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1379] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1380] = "JavaLexerImp.input_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1380] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1380] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1380] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1380] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1380] = true;
		popD[ART_L_JavaLexerImp_input_character_1380] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1382] = "JavaLexerImp.input_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1382] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1382] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1382] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1382] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1383] = "JavaLexerImp.input_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1383] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1383] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1383] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1384] = "JavaLexerImp.input_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1384] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1384] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1384] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1384] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1384] = true;
		popD[ART_L_JavaLexerImp_input_character_1384] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1386] = "JavaLexerImp.input_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1386] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1386] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1386] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1386] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1387] = "JavaLexerImp.input_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1387] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1387] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1387] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1388] = "JavaLexerImp.input_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1388] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1388] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1388] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1388] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1388] = true;
		popD[ART_L_JavaLexerImp_input_character_1388] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1390] = "JavaLexerImp.input_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1390] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1390] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1390] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1390] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1391] = "JavaLexerImp.input_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1391] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1391] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1391] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1392] = "JavaLexerImp.input_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1392] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1392] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1392] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1392] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1392] = true;
		popD[ART_L_JavaLexerImp_input_character_1392] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1394] = "JavaLexerImp.input_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1394] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1394] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1394] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1394] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1395] = "JavaLexerImp.input_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1395] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1395] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1395] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1396] = "JavaLexerImp.input_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1396] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1396] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1396] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1396] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1396] = true;
		popD[ART_L_JavaLexerImp_input_character_1396] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1398] = "JavaLexerImp.input_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1398] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1398] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1398] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1398] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1399] = "JavaLexerImp.input_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1399] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1399] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1399] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1400] = "JavaLexerImp.input_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1400] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1400] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1400] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1400] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1400] = true;
		popD[ART_L_JavaLexerImp_input_character_1400] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1402] = "JavaLexerImp.input_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1402] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1402] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1402] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1402] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1403] = "JavaLexerImp.input_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1403] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1403] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1403] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1404] = "JavaLexerImp.input_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1404] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1404] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1404] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1404] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1404] = true;
		popD[ART_L_JavaLexerImp_input_character_1404] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1406] = "JavaLexerImp.input_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1406] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1406] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1406] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1406] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1407] = "JavaLexerImp.input_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1407] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1407] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1407] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1408] = "JavaLexerImp.input_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1408] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1408] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1408] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1408] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1408] = true;
		popD[ART_L_JavaLexerImp_input_character_1408] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1410] = "JavaLexerImp.input_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1410] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1410] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1410] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1410] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1411] = "JavaLexerImp.input_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1411] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1411] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1411] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1412] = "JavaLexerImp.input_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1412] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1412] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1412] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1412] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1412] = true;
		popD[ART_L_JavaLexerImp_input_character_1412] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1414] = "JavaLexerImp.input_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1414] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1414] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1414] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1414] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1415] = "JavaLexerImp.input_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1415] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1415] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1415] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1416] = "JavaLexerImp.input_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1416] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1416] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1416] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1416] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1416] = true;
		popD[ART_L_JavaLexerImp_input_character_1416] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1418] = "JavaLexerImp.input_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1418] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1418] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1418] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1418] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1419] = "JavaLexerImp.input_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1419] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1419] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1419] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1420] = "JavaLexerImp.input_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1420] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1420] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1420] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1420] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1420] = true;
		popD[ART_L_JavaLexerImp_input_character_1420] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1422] = "JavaLexerImp.input_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1422] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1422] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1422] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1422] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1423] = "JavaLexerImp.input_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1423] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1423] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1423] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1424] = "JavaLexerImp.input_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1424] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1424] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1424] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1424] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1424] = true;
		popD[ART_L_JavaLexerImp_input_character_1424] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1426] = "JavaLexerImp.input_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1426] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1426] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1426] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1426] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1427] = "JavaLexerImp.input_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1427] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1427] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1427] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1428] = "JavaLexerImp.input_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1428] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1428] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1428] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1428] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1428] = true;
		popD[ART_L_JavaLexerImp_input_character_1428] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1430] = "JavaLexerImp.input_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1430] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1430] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1430] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1430] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1431] = "JavaLexerImp.input_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1431] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1431] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1431] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1432] = "JavaLexerImp.input_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1432] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1432] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1432] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1432] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1432] = true;
		popD[ART_L_JavaLexerImp_input_character_1432] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1434] = "JavaLexerImp.input_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1434] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1434] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1434] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1434] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1435] = "JavaLexerImp.input_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1435] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1435] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1435] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1436] = "JavaLexerImp.input_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1436] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1436] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1436] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1436] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1436] = true;
		popD[ART_L_JavaLexerImp_input_character_1436] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1438] = "JavaLexerImp.input_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1438] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1438] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1438] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1438] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1439] = "JavaLexerImp.input_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1439] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1439] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1439] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1440] = "JavaLexerImp.input_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1440] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1440] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1440] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1440] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1440] = true;
		popD[ART_L_JavaLexerImp_input_character_1440] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1442] = "JavaLexerImp.input_character ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1442] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1442] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1442] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1442] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1443] = "JavaLexerImp.input_character ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1443] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1443] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1443] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1444] = "JavaLexerImp.input_character ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1444] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1444] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1444] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1444] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1444] = true;
		popD[ART_L_JavaLexerImp_input_character_1444] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1446] = "JavaLexerImp.input_character ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1446] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1446] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1446] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1446] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1447] = "JavaLexerImp.input_character ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1447] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1447] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1447] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1448] = "JavaLexerImp.input_character ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1448] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1448] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1448] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1448] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1448] = true;
		popD[ART_L_JavaLexerImp_input_character_1448] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1450] = "JavaLexerImp.input_character ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1450] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1450] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1450] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1450] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1451] = "JavaLexerImp.input_character ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1451] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1451] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1451] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1452] = "JavaLexerImp.input_character ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1452] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1452] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1452] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1452] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1452] = true;
		popD[ART_L_JavaLexerImp_input_character_1452] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1454] = "JavaLexerImp.input_character ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1454] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1454] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1454] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_input_character_1454] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1455] = "JavaLexerImp.input_character ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1455] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1455] = ART_L_JavaLexerImp_input_character;
		popD[ART_L_JavaLexerImp_input_character_1455] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_input_character_1456] = "JavaLexerImp.input_character ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_input_character_1456] = "";
		lhsL[ART_L_JavaLexerImp_input_character_1456] = ART_L_JavaLexerImp_input_character;
		artKindOfs[ART_L_JavaLexerImp_input_character_1456] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_input_character_1456] = true;
		eoR_pL[ART_L_JavaLexerImp_input_character_1456] = true;
		popD[ART_L_JavaLexerImp_input_character_1456] = true;
	}

	public void artTableInitialiser_162() {
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof] = "JavaLexerImp.instanceof ";
		artLabelStrings[ART_L_JavaLexerImp_instanceof] = "instanceof";
		artKindOfs[ART_L_JavaLexerImp_instanceof] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_596] = "JavaLexerImp.instanceof ::= . `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_596] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_596] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_596] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_596] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_597] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_597] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_597] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_597] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_598] = "JavaLexerImp.instanceof ::= `i. `n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_598] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_598] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_598] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_instanceof_598] = true;
		popD[ART_L_JavaLexerImp_instanceof_598] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_599] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_599] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_599] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_599] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_600] = "JavaLexerImp.instanceof ::= `i`n. `s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_600] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_600] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_600] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_600] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_601] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_601] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_601] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_601] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_602] = "JavaLexerImp.instanceof ::= `i`n`s. `t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_602] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_602] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_602] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_602] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_603] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_603] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_603] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_603] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_604] = "JavaLexerImp.instanceof ::= `i`n`s`t. `a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_604] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_604] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_604] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_604] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_605] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_605] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_605] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_605] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_606] = "JavaLexerImp.instanceof ::= `i`n`s`t`a. `n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_606] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_606] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_606] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_606] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_607] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_607] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_607] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_607] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_608] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n. `c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_608] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_608] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_608] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_608] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_609] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_609] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_609] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_609] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_610] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c. `e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_610] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_610] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_610] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_610] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_611] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_611] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_611] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_611] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_612] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e. `o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_612] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_612] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_612] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_612] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_613] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_613] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_613] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_613] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_614] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o. `f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_614] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_614] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_614] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_instanceof_614] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_615] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_615] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_615] = ART_L_JavaLexerImp_instanceof;
		popD[ART_L_JavaLexerImp_instanceof_615] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_instanceof_616] = "JavaLexerImp.instanceof ::= `i`n`s`t`a`n`c`e`o`f. ";
		artLabelStrings[ART_L_JavaLexerImp_instanceof_616] = "";
		lhsL[ART_L_JavaLexerImp_instanceof_616] = ART_L_JavaLexerImp_instanceof;
		artKindOfs[ART_L_JavaLexerImp_instanceof_616] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_instanceof_616] = true;
		eoR_pL[ART_L_JavaLexerImp_instanceof_616] = true;
		popD[ART_L_JavaLexerImp_instanceof_616] = true;
	}

	public void artTableInitialiser_163() {
		artLabelInternalStrings[ART_L_JavaLexerImp_int] = "JavaLexerImp.int ";
		artLabelStrings[ART_L_JavaLexerImp_int] = "int";
		artKindOfs[ART_L_JavaLexerImp_int] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_619] = "JavaLexerImp.int ::= . `i`n`t";
		artLabelStrings[ART_L_JavaLexerImp_int_619] = "";
		lhsL[ART_L_JavaLexerImp_int_619] = ART_L_JavaLexerImp_int;
		artKindOfs[ART_L_JavaLexerImp_int_619] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_int_619] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_620] = "JavaLexerImp.int ::= `i`n`t";
		artLabelStrings[ART_L_JavaLexerImp_int_620] = "";
		lhsL[ART_L_JavaLexerImp_int_620] = ART_L_JavaLexerImp_int;
		popD[ART_L_JavaLexerImp_int_620] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_621] = "JavaLexerImp.int ::= `i. `n`t";
		artLabelStrings[ART_L_JavaLexerImp_int_621] = "";
		lhsL[ART_L_JavaLexerImp_int_621] = ART_L_JavaLexerImp_int;
		artKindOfs[ART_L_JavaLexerImp_int_621] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_int_621] = true;
		popD[ART_L_JavaLexerImp_int_621] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_622] = "JavaLexerImp.int ::= `i`n`t";
		artLabelStrings[ART_L_JavaLexerImp_int_622] = "";
		lhsL[ART_L_JavaLexerImp_int_622] = ART_L_JavaLexerImp_int;
		popD[ART_L_JavaLexerImp_int_622] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_623] = "JavaLexerImp.int ::= `i`n. `t";
		artLabelStrings[ART_L_JavaLexerImp_int_623] = "";
		lhsL[ART_L_JavaLexerImp_int_623] = ART_L_JavaLexerImp_int;
		artKindOfs[ART_L_JavaLexerImp_int_623] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_int_623] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_624] = "JavaLexerImp.int ::= `i`n`t";
		artLabelStrings[ART_L_JavaLexerImp_int_624] = "";
		lhsL[ART_L_JavaLexerImp_int_624] = ART_L_JavaLexerImp_int;
		popD[ART_L_JavaLexerImp_int_624] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_int_625] = "JavaLexerImp.int ::= `i`n`t. ";
		artLabelStrings[ART_L_JavaLexerImp_int_625] = "";
		lhsL[ART_L_JavaLexerImp_int_625] = ART_L_JavaLexerImp_int;
		artKindOfs[ART_L_JavaLexerImp_int_625] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_int_625] = true;
		eoR_pL[ART_L_JavaLexerImp_int_625] = true;
		popD[ART_L_JavaLexerImp_int_625] = true;
	}

	public void artTableInitialiser_164() {
		artLabelInternalStrings[ART_L_JavaLexerImp_interface] = "JavaLexerImp.interface ";
		artLabelStrings[ART_L_JavaLexerImp_interface] = "interface";
		artKindOfs[ART_L_JavaLexerImp_interface] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_628] = "JavaLexerImp.interface ::= . `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_628] = "";
		lhsL[ART_L_JavaLexerImp_interface_628] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_628] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_628] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_629] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_629] = "";
		lhsL[ART_L_JavaLexerImp_interface_629] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_629] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_630] = "JavaLexerImp.interface ::= `i. `n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_630] = "";
		lhsL[ART_L_JavaLexerImp_interface_630] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_630] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_interface_630] = true;
		popD[ART_L_JavaLexerImp_interface_630] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_631] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_631] = "";
		lhsL[ART_L_JavaLexerImp_interface_631] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_631] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_632] = "JavaLexerImp.interface ::= `i`n. `t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_632] = "";
		lhsL[ART_L_JavaLexerImp_interface_632] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_632] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_632] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_633] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_633] = "";
		lhsL[ART_L_JavaLexerImp_interface_633] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_633] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_634] = "JavaLexerImp.interface ::= `i`n`t. `e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_634] = "";
		lhsL[ART_L_JavaLexerImp_interface_634] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_634] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_634] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_635] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_635] = "";
		lhsL[ART_L_JavaLexerImp_interface_635] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_635] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_636] = "JavaLexerImp.interface ::= `i`n`t`e. `r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_636] = "";
		lhsL[ART_L_JavaLexerImp_interface_636] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_636] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_636] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_637] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_637] = "";
		lhsL[ART_L_JavaLexerImp_interface_637] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_637] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_638] = "JavaLexerImp.interface ::= `i`n`t`e`r. `f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_638] = "";
		lhsL[ART_L_JavaLexerImp_interface_638] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_638] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_638] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_639] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_639] = "";
		lhsL[ART_L_JavaLexerImp_interface_639] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_639] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_640] = "JavaLexerImp.interface ::= `i`n`t`e`r`f. `a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_640] = "";
		lhsL[ART_L_JavaLexerImp_interface_640] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_640] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_640] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_641] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_641] = "";
		lhsL[ART_L_JavaLexerImp_interface_641] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_641] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_642] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a. `c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_642] = "";
		lhsL[ART_L_JavaLexerImp_interface_642] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_642] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_642] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_643] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_643] = "";
		lhsL[ART_L_JavaLexerImp_interface_643] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_643] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_644] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c. `e";
		artLabelStrings[ART_L_JavaLexerImp_interface_644] = "";
		lhsL[ART_L_JavaLexerImp_interface_644] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_644] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_interface_644] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_645] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e";
		artLabelStrings[ART_L_JavaLexerImp_interface_645] = "";
		lhsL[ART_L_JavaLexerImp_interface_645] = ART_L_JavaLexerImp_interface;
		popD[ART_L_JavaLexerImp_interface_645] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_interface_646] = "JavaLexerImp.interface ::= `i`n`t`e`r`f`a`c`e. ";
		artLabelStrings[ART_L_JavaLexerImp_interface_646] = "";
		lhsL[ART_L_JavaLexerImp_interface_646] = ART_L_JavaLexerImp_interface;
		artKindOfs[ART_L_JavaLexerImp_interface_646] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_interface_646] = true;
		eoR_pL[ART_L_JavaLexerImp_interface_646] = true;
		popD[ART_L_JavaLexerImp_interface_646] = true;
	}

	public void artTableInitialiser_165() {
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character] = "JavaLexerImp.letter_character ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character] = "letter_character";
		artKindOfs[ART_L_JavaLexerImp_letter_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2343] = "JavaLexerImp.letter_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2343] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2343] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2343] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2343] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2344] = "JavaLexerImp.letter_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2344] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2344] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2344] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2345] = "JavaLexerImp.letter_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2345] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2345] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2345] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2345] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2345] = true;
		popD[ART_L_JavaLexerImp_letter_character_2345] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2347] = "JavaLexerImp.letter_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2347] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2347] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2347] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2347] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2348] = "JavaLexerImp.letter_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2348] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2348] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2348] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2349] = "JavaLexerImp.letter_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2349] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2349] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2349] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2349] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2349] = true;
		popD[ART_L_JavaLexerImp_letter_character_2349] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2351] = "JavaLexerImp.letter_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2351] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2351] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2351] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2351] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2352] = "JavaLexerImp.letter_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2352] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2352] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2352] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2353] = "JavaLexerImp.letter_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2353] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2353] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2353] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2353] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2353] = true;
		popD[ART_L_JavaLexerImp_letter_character_2353] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2355] = "JavaLexerImp.letter_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2355] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2355] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2355] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2355] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2356] = "JavaLexerImp.letter_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2356] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2356] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2356] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2357] = "JavaLexerImp.letter_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2357] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2357] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2357] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2357] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2357] = true;
		popD[ART_L_JavaLexerImp_letter_character_2357] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2359] = "JavaLexerImp.letter_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2359] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2359] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2359] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2359] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2360] = "JavaLexerImp.letter_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2360] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2360] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2360] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2361] = "JavaLexerImp.letter_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2361] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2361] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2361] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2361] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2361] = true;
		popD[ART_L_JavaLexerImp_letter_character_2361] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2363] = "JavaLexerImp.letter_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2363] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2363] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2363] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2363] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2364] = "JavaLexerImp.letter_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2364] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2364] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2364] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2365] = "JavaLexerImp.letter_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2365] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2365] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2365] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2365] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2365] = true;
		popD[ART_L_JavaLexerImp_letter_character_2365] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2367] = "JavaLexerImp.letter_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2367] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2367] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2367] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2367] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2368] = "JavaLexerImp.letter_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2368] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2368] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2368] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2369] = "JavaLexerImp.letter_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2369] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2369] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2369] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2369] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2369] = true;
		popD[ART_L_JavaLexerImp_letter_character_2369] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2371] = "JavaLexerImp.letter_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2371] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2371] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2371] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2371] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2372] = "JavaLexerImp.letter_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2372] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2372] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2372] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2373] = "JavaLexerImp.letter_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2373] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2373] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2373] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2373] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2373] = true;
		popD[ART_L_JavaLexerImp_letter_character_2373] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2375] = "JavaLexerImp.letter_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2375] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2375] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2375] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2375] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2376] = "JavaLexerImp.letter_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2376] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2376] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2376] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2377] = "JavaLexerImp.letter_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2377] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2377] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2377] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2377] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2377] = true;
		popD[ART_L_JavaLexerImp_letter_character_2377] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2379] = "JavaLexerImp.letter_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2379] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2379] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2379] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2379] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2380] = "JavaLexerImp.letter_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2380] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2380] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2380] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2381] = "JavaLexerImp.letter_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2381] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2381] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2381] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2381] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2381] = true;
		popD[ART_L_JavaLexerImp_letter_character_2381] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2383] = "JavaLexerImp.letter_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2383] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2383] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2383] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2383] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2384] = "JavaLexerImp.letter_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2384] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2384] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2384] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2385] = "JavaLexerImp.letter_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2385] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2385] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2385] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2385] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2385] = true;
		popD[ART_L_JavaLexerImp_letter_character_2385] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2387] = "JavaLexerImp.letter_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2387] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2387] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2387] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2387] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2388] = "JavaLexerImp.letter_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2388] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2388] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2388] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2389] = "JavaLexerImp.letter_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2389] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2389] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2389] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2389] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2389] = true;
		popD[ART_L_JavaLexerImp_letter_character_2389] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2391] = "JavaLexerImp.letter_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2391] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2391] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2391] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2391] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2392] = "JavaLexerImp.letter_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2392] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2392] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2392] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2393] = "JavaLexerImp.letter_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2393] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2393] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2393] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2393] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2393] = true;
		popD[ART_L_JavaLexerImp_letter_character_2393] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2395] = "JavaLexerImp.letter_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2395] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2395] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2395] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2395] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2396] = "JavaLexerImp.letter_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2396] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2396] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2396] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2397] = "JavaLexerImp.letter_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2397] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2397] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2397] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2397] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2397] = true;
		popD[ART_L_JavaLexerImp_letter_character_2397] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2399] = "JavaLexerImp.letter_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2399] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2399] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2399] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2399] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2400] = "JavaLexerImp.letter_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2400] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2400] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2400] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2401] = "JavaLexerImp.letter_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2401] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2401] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2401] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2401] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2401] = true;
		popD[ART_L_JavaLexerImp_letter_character_2401] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2403] = "JavaLexerImp.letter_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2403] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2403] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2403] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2403] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2404] = "JavaLexerImp.letter_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2404] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2404] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2404] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2405] = "JavaLexerImp.letter_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2405] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2405] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2405] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2405] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2405] = true;
		popD[ART_L_JavaLexerImp_letter_character_2405] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2407] = "JavaLexerImp.letter_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2407] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2407] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2407] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2407] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2408] = "JavaLexerImp.letter_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2408] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2408] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2408] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2409] = "JavaLexerImp.letter_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2409] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2409] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2409] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2409] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2409] = true;
		popD[ART_L_JavaLexerImp_letter_character_2409] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2411] = "JavaLexerImp.letter_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2411] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2411] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2411] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2411] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2412] = "JavaLexerImp.letter_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2412] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2412] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2412] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2413] = "JavaLexerImp.letter_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2413] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2413] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2413] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2413] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2413] = true;
		popD[ART_L_JavaLexerImp_letter_character_2413] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2415] = "JavaLexerImp.letter_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2415] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2415] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2415] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2415] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2416] = "JavaLexerImp.letter_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2416] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2416] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2416] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2417] = "JavaLexerImp.letter_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2417] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2417] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2417] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2417] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2417] = true;
		popD[ART_L_JavaLexerImp_letter_character_2417] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2419] = "JavaLexerImp.letter_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2419] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2419] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2419] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2419] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2420] = "JavaLexerImp.letter_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2420] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2420] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2420] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2421] = "JavaLexerImp.letter_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2421] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2421] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2421] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2421] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2421] = true;
		popD[ART_L_JavaLexerImp_letter_character_2421] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2423] = "JavaLexerImp.letter_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2423] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2423] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2423] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2423] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2424] = "JavaLexerImp.letter_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2424] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2424] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2424] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2425] = "JavaLexerImp.letter_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2425] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2425] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2425] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2425] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2425] = true;
		popD[ART_L_JavaLexerImp_letter_character_2425] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2427] = "JavaLexerImp.letter_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2427] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2427] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2427] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2427] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2428] = "JavaLexerImp.letter_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2428] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2428] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2428] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2429] = "JavaLexerImp.letter_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2429] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2429] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2429] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2429] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2429] = true;
		popD[ART_L_JavaLexerImp_letter_character_2429] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2431] = "JavaLexerImp.letter_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2431] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2431] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2431] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2431] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2432] = "JavaLexerImp.letter_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2432] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2432] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2432] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2433] = "JavaLexerImp.letter_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2433] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2433] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2433] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2433] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2433] = true;
		popD[ART_L_JavaLexerImp_letter_character_2433] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2435] = "JavaLexerImp.letter_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2435] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2435] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2435] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2435] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2436] = "JavaLexerImp.letter_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2436] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2436] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2436] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2437] = "JavaLexerImp.letter_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2437] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2437] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2437] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2437] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2437] = true;
		popD[ART_L_JavaLexerImp_letter_character_2437] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2439] = "JavaLexerImp.letter_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2439] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2439] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2439] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2439] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2440] = "JavaLexerImp.letter_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2440] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2440] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2440] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2441] = "JavaLexerImp.letter_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2441] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2441] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2441] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2441] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2441] = true;
		popD[ART_L_JavaLexerImp_letter_character_2441] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2443] = "JavaLexerImp.letter_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2443] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2443] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2443] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2443] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2444] = "JavaLexerImp.letter_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2444] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2444] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2444] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2445] = "JavaLexerImp.letter_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2445] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2445] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2445] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2445] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2445] = true;
		popD[ART_L_JavaLexerImp_letter_character_2445] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2447] = "JavaLexerImp.letter_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2447] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2447] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2447] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2447] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2448] = "JavaLexerImp.letter_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2448] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2448] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2448] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2449] = "JavaLexerImp.letter_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2449] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2449] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2449] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2449] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2449] = true;
		popD[ART_L_JavaLexerImp_letter_character_2449] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2451] = "JavaLexerImp.letter_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2451] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2451] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2451] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2451] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2452] = "JavaLexerImp.letter_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2452] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2452] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2452] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2453] = "JavaLexerImp.letter_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2453] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2453] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2453] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2453] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2453] = true;
		popD[ART_L_JavaLexerImp_letter_character_2453] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2455] = "JavaLexerImp.letter_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2455] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2455] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2455] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2455] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2456] = "JavaLexerImp.letter_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2456] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2456] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2456] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2457] = "JavaLexerImp.letter_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2457] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2457] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2457] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2457] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2457] = true;
		popD[ART_L_JavaLexerImp_letter_character_2457] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2459] = "JavaLexerImp.letter_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2459] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2459] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2459] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2459] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2460] = "JavaLexerImp.letter_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2460] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2460] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2460] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2461] = "JavaLexerImp.letter_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2461] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2461] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2461] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2461] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2461] = true;
		popD[ART_L_JavaLexerImp_letter_character_2461] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2463] = "JavaLexerImp.letter_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2463] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2463] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2463] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2463] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2464] = "JavaLexerImp.letter_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2464] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2464] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2464] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2465] = "JavaLexerImp.letter_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2465] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2465] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2465] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2465] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2465] = true;
		popD[ART_L_JavaLexerImp_letter_character_2465] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2467] = "JavaLexerImp.letter_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2467] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2467] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2467] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2467] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2468] = "JavaLexerImp.letter_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2468] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2468] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2468] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2469] = "JavaLexerImp.letter_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2469] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2469] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2469] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2469] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2469] = true;
		popD[ART_L_JavaLexerImp_letter_character_2469] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2471] = "JavaLexerImp.letter_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2471] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2471] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2471] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2471] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2472] = "JavaLexerImp.letter_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2472] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2472] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2472] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2473] = "JavaLexerImp.letter_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2473] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2473] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2473] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2473] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2473] = true;
		popD[ART_L_JavaLexerImp_letter_character_2473] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2475] = "JavaLexerImp.letter_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2475] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2475] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2475] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2475] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2476] = "JavaLexerImp.letter_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2476] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2476] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2476] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2477] = "JavaLexerImp.letter_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2477] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2477] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2477] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2477] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2477] = true;
		popD[ART_L_JavaLexerImp_letter_character_2477] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2479] = "JavaLexerImp.letter_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2479] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2479] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2479] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2479] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2480] = "JavaLexerImp.letter_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2480] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2480] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2480] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2481] = "JavaLexerImp.letter_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2481] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2481] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2481] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2481] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2481] = true;
		popD[ART_L_JavaLexerImp_letter_character_2481] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2483] = "JavaLexerImp.letter_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2483] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2483] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2483] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2483] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2484] = "JavaLexerImp.letter_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2484] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2484] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2484] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2485] = "JavaLexerImp.letter_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2485] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2485] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2485] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2485] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2485] = true;
		popD[ART_L_JavaLexerImp_letter_character_2485] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2487] = "JavaLexerImp.letter_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2487] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2487] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2487] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2487] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2488] = "JavaLexerImp.letter_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2488] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2488] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2488] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2489] = "JavaLexerImp.letter_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2489] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2489] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2489] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2489] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2489] = true;
		popD[ART_L_JavaLexerImp_letter_character_2489] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2491] = "JavaLexerImp.letter_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2491] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2491] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2491] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2491] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2492] = "JavaLexerImp.letter_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2492] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2492] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2492] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2493] = "JavaLexerImp.letter_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2493] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2493] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2493] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2493] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2493] = true;
		popD[ART_L_JavaLexerImp_letter_character_2493] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2495] = "JavaLexerImp.letter_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2495] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2495] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2495] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2495] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2496] = "JavaLexerImp.letter_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2496] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2496] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2496] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2497] = "JavaLexerImp.letter_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2497] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2497] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2497] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2497] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2497] = true;
		popD[ART_L_JavaLexerImp_letter_character_2497] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2499] = "JavaLexerImp.letter_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2499] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2499] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2499] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2499] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2500] = "JavaLexerImp.letter_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2500] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2500] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2500] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2501] = "JavaLexerImp.letter_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2501] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2501] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2501] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2501] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2501] = true;
		popD[ART_L_JavaLexerImp_letter_character_2501] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2503] = "JavaLexerImp.letter_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2503] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2503] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2503] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2503] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2504] = "JavaLexerImp.letter_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2504] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2504] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2504] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2505] = "JavaLexerImp.letter_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2505] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2505] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2505] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2505] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2505] = true;
		popD[ART_L_JavaLexerImp_letter_character_2505] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2507] = "JavaLexerImp.letter_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2507] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2507] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2507] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2507] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2508] = "JavaLexerImp.letter_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2508] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2508] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2508] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2509] = "JavaLexerImp.letter_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2509] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2509] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2509] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2509] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2509] = true;
		popD[ART_L_JavaLexerImp_letter_character_2509] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2511] = "JavaLexerImp.letter_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2511] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2511] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2511] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2511] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2512] = "JavaLexerImp.letter_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2512] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2512] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2512] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2513] = "JavaLexerImp.letter_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2513] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2513] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2513] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2513] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2513] = true;
		popD[ART_L_JavaLexerImp_letter_character_2513] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2515] = "JavaLexerImp.letter_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2515] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2515] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2515] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2515] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2516] = "JavaLexerImp.letter_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2516] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2516] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2516] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2517] = "JavaLexerImp.letter_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2517] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2517] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2517] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2517] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2517] = true;
		popD[ART_L_JavaLexerImp_letter_character_2517] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2519] = "JavaLexerImp.letter_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2519] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2519] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2519] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2519] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2520] = "JavaLexerImp.letter_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2520] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2520] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2520] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2521] = "JavaLexerImp.letter_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2521] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2521] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2521] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2521] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2521] = true;
		popD[ART_L_JavaLexerImp_letter_character_2521] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2523] = "JavaLexerImp.letter_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2523] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2523] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2523] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2523] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2524] = "JavaLexerImp.letter_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2524] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2524] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2524] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2525] = "JavaLexerImp.letter_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2525] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2525] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2525] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2525] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2525] = true;
		popD[ART_L_JavaLexerImp_letter_character_2525] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2527] = "JavaLexerImp.letter_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2527] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2527] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2527] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2527] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2528] = "JavaLexerImp.letter_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2528] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2528] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2528] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2529] = "JavaLexerImp.letter_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2529] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2529] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2529] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2529] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2529] = true;
		popD[ART_L_JavaLexerImp_letter_character_2529] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2531] = "JavaLexerImp.letter_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2531] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2531] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2531] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2531] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2532] = "JavaLexerImp.letter_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2532] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2532] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2532] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2533] = "JavaLexerImp.letter_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2533] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2533] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2533] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2533] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2533] = true;
		popD[ART_L_JavaLexerImp_letter_character_2533] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2535] = "JavaLexerImp.letter_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2535] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2535] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2535] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2535] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2536] = "JavaLexerImp.letter_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2536] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2536] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2536] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2537] = "JavaLexerImp.letter_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2537] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2537] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2537] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2537] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2537] = true;
		popD[ART_L_JavaLexerImp_letter_character_2537] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2539] = "JavaLexerImp.letter_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2539] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2539] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2539] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2539] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2540] = "JavaLexerImp.letter_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2540] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2540] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2540] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2541] = "JavaLexerImp.letter_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2541] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2541] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2541] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2541] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2541] = true;
		popD[ART_L_JavaLexerImp_letter_character_2541] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2543] = "JavaLexerImp.letter_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2543] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2543] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2543] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2543] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2544] = "JavaLexerImp.letter_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2544] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2544] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2544] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2545] = "JavaLexerImp.letter_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2545] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2545] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2545] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2545] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2545] = true;
		popD[ART_L_JavaLexerImp_letter_character_2545] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2547] = "JavaLexerImp.letter_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2547] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2547] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2547] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_letter_character_2547] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2548] = "JavaLexerImp.letter_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2548] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2548] = ART_L_JavaLexerImp_letter_character;
		popD[ART_L_JavaLexerImp_letter_character_2548] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_letter_character_2549] = "JavaLexerImp.letter_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_letter_character_2549] = "";
		lhsL[ART_L_JavaLexerImp_letter_character_2549] = ART_L_JavaLexerImp_letter_character;
		artKindOfs[ART_L_JavaLexerImp_letter_character_2549] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_letter_character_2549] = true;
		eoR_pL[ART_L_JavaLexerImp_letter_character_2549] = true;
		popD[ART_L_JavaLexerImp_letter_character_2549] = true;
	}

	public void artTableInitialiser_166() {
		artLabelInternalStrings[ART_L_JavaLexerImp_long] = "JavaLexerImp.long ";
		artLabelStrings[ART_L_JavaLexerImp_long] = "long";
		artKindOfs[ART_L_JavaLexerImp_long] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_649] = "JavaLexerImp.long ::= . `l`o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_649] = "";
		lhsL[ART_L_JavaLexerImp_long_649] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_long_649] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_long_649] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_650] = "JavaLexerImp.long ::= `l`o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_650] = "";
		lhsL[ART_L_JavaLexerImp_long_650] = ART_L_JavaLexerImp_long;
		popD[ART_L_JavaLexerImp_long_650] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_651] = "JavaLexerImp.long ::= `l. `o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_651] = "";
		lhsL[ART_L_JavaLexerImp_long_651] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_long_651] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_long_651] = true;
		popD[ART_L_JavaLexerImp_long_651] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_652] = "JavaLexerImp.long ::= `l`o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_652] = "";
		lhsL[ART_L_JavaLexerImp_long_652] = ART_L_JavaLexerImp_long;
		popD[ART_L_JavaLexerImp_long_652] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_653] = "JavaLexerImp.long ::= `l`o. `n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_653] = "";
		lhsL[ART_L_JavaLexerImp_long_653] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_long_653] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_long_653] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_654] = "JavaLexerImp.long ::= `l`o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_654] = "";
		lhsL[ART_L_JavaLexerImp_long_654] = ART_L_JavaLexerImp_long;
		popD[ART_L_JavaLexerImp_long_654] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_655] = "JavaLexerImp.long ::= `l`o`n. `g";
		artLabelStrings[ART_L_JavaLexerImp_long_655] = "";
		lhsL[ART_L_JavaLexerImp_long_655] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_long_655] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_long_655] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_656] = "JavaLexerImp.long ::= `l`o`n`g";
		artLabelStrings[ART_L_JavaLexerImp_long_656] = "";
		lhsL[ART_L_JavaLexerImp_long_656] = ART_L_JavaLexerImp_long;
		popD[ART_L_JavaLexerImp_long_656] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_long_657] = "JavaLexerImp.long ::= `l`o`n`g. ";
		artLabelStrings[ART_L_JavaLexerImp_long_657] = "";
		lhsL[ART_L_JavaLexerImp_long_657] = ART_L_JavaLexerImp_long;
		artKindOfs[ART_L_JavaLexerImp_long_657] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_long_657] = true;
		eoR_pL[ART_L_JavaLexerImp_long_657] = true;
		popD[ART_L_JavaLexerImp_long_657] = true;
	}

	public void artTableInitialiser_167() {
		artLabelInternalStrings[ART_L_JavaLexerImp_native] = "JavaLexerImp.native ";
		artLabelStrings[ART_L_JavaLexerImp_native] = "native";
		artKindOfs[ART_L_JavaLexerImp_native] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_660] = "JavaLexerImp.native ::= . `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_660] = "";
		lhsL[ART_L_JavaLexerImp_native_660] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_660] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_native_660] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_661] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_661] = "";
		lhsL[ART_L_JavaLexerImp_native_661] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_661] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_662] = "JavaLexerImp.native ::= `n. `a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_662] = "";
		lhsL[ART_L_JavaLexerImp_native_662] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_662] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_native_662] = true;
		popD[ART_L_JavaLexerImp_native_662] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_663] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_663] = "";
		lhsL[ART_L_JavaLexerImp_native_663] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_663] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_664] = "JavaLexerImp.native ::= `n`a. `t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_664] = "";
		lhsL[ART_L_JavaLexerImp_native_664] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_664] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_native_664] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_665] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_665] = "";
		lhsL[ART_L_JavaLexerImp_native_665] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_665] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_666] = "JavaLexerImp.native ::= `n`a`t. `i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_666] = "";
		lhsL[ART_L_JavaLexerImp_native_666] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_666] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_native_666] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_667] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_667] = "";
		lhsL[ART_L_JavaLexerImp_native_667] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_667] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_668] = "JavaLexerImp.native ::= `n`a`t`i. `v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_668] = "";
		lhsL[ART_L_JavaLexerImp_native_668] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_668] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_native_668] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_669] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_669] = "";
		lhsL[ART_L_JavaLexerImp_native_669] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_669] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_670] = "JavaLexerImp.native ::= `n`a`t`i`v. `e";
		artLabelStrings[ART_L_JavaLexerImp_native_670] = "";
		lhsL[ART_L_JavaLexerImp_native_670] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_670] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_native_670] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_671] = "JavaLexerImp.native ::= `n`a`t`i`v`e";
		artLabelStrings[ART_L_JavaLexerImp_native_671] = "";
		lhsL[ART_L_JavaLexerImp_native_671] = ART_L_JavaLexerImp_native;
		popD[ART_L_JavaLexerImp_native_671] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_native_672] = "JavaLexerImp.native ::= `n`a`t`i`v`e. ";
		artLabelStrings[ART_L_JavaLexerImp_native_672] = "";
		lhsL[ART_L_JavaLexerImp_native_672] = ART_L_JavaLexerImp_native;
		artKindOfs[ART_L_JavaLexerImp_native_672] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_native_672] = true;
		eoR_pL[ART_L_JavaLexerImp_native_672] = true;
		popD[ART_L_JavaLexerImp_native_672] = true;
	}

	public void artTableInitialiser_168() {
		artLabelInternalStrings[ART_L_JavaLexerImp_new] = "JavaLexerImp.new ";
		artLabelStrings[ART_L_JavaLexerImp_new] = "new";
		artKindOfs[ART_L_JavaLexerImp_new] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_675] = "JavaLexerImp.new ::= . `n`e`w";
		artLabelStrings[ART_L_JavaLexerImp_new_675] = "";
		lhsL[ART_L_JavaLexerImp_new_675] = ART_L_JavaLexerImp_new;
		artKindOfs[ART_L_JavaLexerImp_new_675] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_new_675] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_676] = "JavaLexerImp.new ::= `n`e`w";
		artLabelStrings[ART_L_JavaLexerImp_new_676] = "";
		lhsL[ART_L_JavaLexerImp_new_676] = ART_L_JavaLexerImp_new;
		popD[ART_L_JavaLexerImp_new_676] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_677] = "JavaLexerImp.new ::= `n. `e`w";
		artLabelStrings[ART_L_JavaLexerImp_new_677] = "";
		lhsL[ART_L_JavaLexerImp_new_677] = ART_L_JavaLexerImp_new;
		artKindOfs[ART_L_JavaLexerImp_new_677] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_new_677] = true;
		popD[ART_L_JavaLexerImp_new_677] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_678] = "JavaLexerImp.new ::= `n`e`w";
		artLabelStrings[ART_L_JavaLexerImp_new_678] = "";
		lhsL[ART_L_JavaLexerImp_new_678] = ART_L_JavaLexerImp_new;
		popD[ART_L_JavaLexerImp_new_678] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_679] = "JavaLexerImp.new ::= `n`e. `w";
		artLabelStrings[ART_L_JavaLexerImp_new_679] = "";
		lhsL[ART_L_JavaLexerImp_new_679] = ART_L_JavaLexerImp_new;
		artKindOfs[ART_L_JavaLexerImp_new_679] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_new_679] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_680] = "JavaLexerImp.new ::= `n`e`w";
		artLabelStrings[ART_L_JavaLexerImp_new_680] = "";
		lhsL[ART_L_JavaLexerImp_new_680] = ART_L_JavaLexerImp_new;
		popD[ART_L_JavaLexerImp_new_680] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_681] = "JavaLexerImp.new ::= `n`e`w. ";
		artLabelStrings[ART_L_JavaLexerImp_new_681] = "";
		lhsL[ART_L_JavaLexerImp_new_681] = ART_L_JavaLexerImp_new;
		artKindOfs[ART_L_JavaLexerImp_new_681] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_new_681] = true;
		eoR_pL[ART_L_JavaLexerImp_new_681] = true;
		popD[ART_L_JavaLexerImp_new_681] = true;
	}

	public void artTableInitialiser_169() {
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character] = "JavaLexerImp.new_line_character ";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character] = "new_line_character";
		artKindOfs[ART_L_JavaLexerImp_new_line_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1459] = "JavaLexerImp.new_line_character ::= . `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1459] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1459] = ART_L_JavaLexerImp_new_line_character;
		artKindOfs[ART_L_JavaLexerImp_new_line_character_1459] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_new_line_character_1459] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1460] = "JavaLexerImp.new_line_character ::= `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1460] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1460] = ART_L_JavaLexerImp_new_line_character;
		popD[ART_L_JavaLexerImp_new_line_character_1460] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1461] = "JavaLexerImp.new_line_character ::= `\\\\r. ";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1461] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1461] = ART_L_JavaLexerImp_new_line_character;
		artKindOfs[ART_L_JavaLexerImp_new_line_character_1461] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_new_line_character_1461] = true;
		eoR_pL[ART_L_JavaLexerImp_new_line_character_1461] = true;
		popD[ART_L_JavaLexerImp_new_line_character_1461] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1463] = "JavaLexerImp.new_line_character ::= . `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1463] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1463] = ART_L_JavaLexerImp_new_line_character;
		artKindOfs[ART_L_JavaLexerImp_new_line_character_1463] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_new_line_character_1463] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1464] = "JavaLexerImp.new_line_character ::= `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1464] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1464] = ART_L_JavaLexerImp_new_line_character;
		popD[ART_L_JavaLexerImp_new_line_character_1464] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_new_line_character_1465] = "JavaLexerImp.new_line_character ::= `\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_new_line_character_1465] = "";
		lhsL[ART_L_JavaLexerImp_new_line_character_1465] = ART_L_JavaLexerImp_new_line_character;
		artKindOfs[ART_L_JavaLexerImp_new_line_character_1465] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_new_line_character_1465] = true;
		eoR_pL[ART_L_JavaLexerImp_new_line_character_1465] = true;
		popD[ART_L_JavaLexerImp_new_line_character_1465] = true;
	}

	public void artTableInitialiser_170() {
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit] = "JavaLexerImp.non_zero_digit ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit] = "non_zero_digit";
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2907] = "JavaLexerImp.non_zero_digit ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2907] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2907] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2907] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2907] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2908] = "JavaLexerImp.non_zero_digit ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2908] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2908] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2908] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2909] = "JavaLexerImp.non_zero_digit ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2909] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2909] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2909] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2909] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2909] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2909] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2911] = "JavaLexerImp.non_zero_digit ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2911] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2911] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2911] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2911] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2912] = "JavaLexerImp.non_zero_digit ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2912] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2912] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2912] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2913] = "JavaLexerImp.non_zero_digit ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2913] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2913] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2913] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2913] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2913] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2913] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2915] = "JavaLexerImp.non_zero_digit ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2915] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2915] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2915] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2915] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2916] = "JavaLexerImp.non_zero_digit ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2916] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2916] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2916] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2917] = "JavaLexerImp.non_zero_digit ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2917] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2917] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2917] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2917] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2917] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2917] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2919] = "JavaLexerImp.non_zero_digit ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2919] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2919] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2919] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2919] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2920] = "JavaLexerImp.non_zero_digit ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2920] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2920] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2920] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2921] = "JavaLexerImp.non_zero_digit ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2921] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2921] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2921] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2921] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2921] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2921] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2923] = "JavaLexerImp.non_zero_digit ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2923] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2923] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2923] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2923] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2924] = "JavaLexerImp.non_zero_digit ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2924] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2924] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2924] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2925] = "JavaLexerImp.non_zero_digit ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2925] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2925] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2925] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2925] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2925] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2925] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2927] = "JavaLexerImp.non_zero_digit ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2927] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2927] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2927] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2927] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2928] = "JavaLexerImp.non_zero_digit ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2928] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2928] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2928] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2929] = "JavaLexerImp.non_zero_digit ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2929] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2929] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2929] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2929] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2929] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2929] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2931] = "JavaLexerImp.non_zero_digit ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2931] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2931] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2931] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2931] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2932] = "JavaLexerImp.non_zero_digit ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2932] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2932] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2932] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2933] = "JavaLexerImp.non_zero_digit ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2933] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2933] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2933] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2933] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2933] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2933] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2935] = "JavaLexerImp.non_zero_digit ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2935] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2935] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2935] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2935] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2936] = "JavaLexerImp.non_zero_digit ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2936] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2936] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2936] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2937] = "JavaLexerImp.non_zero_digit ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2937] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2937] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2937] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2937] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2937] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2937] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2939] = "JavaLexerImp.non_zero_digit ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2939] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2939] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2939] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_non_zero_digit_2939] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2940] = "JavaLexerImp.non_zero_digit ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2940] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2940] = ART_L_JavaLexerImp_non_zero_digit;
		popD[ART_L_JavaLexerImp_non_zero_digit_2940] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_non_zero_digit_2941] = "JavaLexerImp.non_zero_digit ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_non_zero_digit_2941] = "";
		lhsL[ART_L_JavaLexerImp_non_zero_digit_2941] = ART_L_JavaLexerImp_non_zero_digit;
		artKindOfs[ART_L_JavaLexerImp_non_zero_digit_2941] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_non_zero_digit_2941] = true;
		eoR_pL[ART_L_JavaLexerImp_non_zero_digit_2941] = true;
		popD[ART_L_JavaLexerImp_non_zero_digit_2941] = true;
	}

	public void artTableInitialiser_171() {
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk] = "JavaLexerImp.not_asterisk ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk] = "not_asterisk";
		artKindOfs[ART_L_JavaLexerImp_not_asterisk] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1468] = "JavaLexerImp.not_asterisk ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1468] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1468] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1468] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1468] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1469] = "JavaLexerImp.not_asterisk ::= `";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1469] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1469] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1469] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1470] = "JavaLexerImp.not_asterisk ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1470] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1470] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1470] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1470] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1470] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1470] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1472] = "JavaLexerImp.not_asterisk ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1472] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1472] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1472] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1472] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1473] = "JavaLexerImp.not_asterisk ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1473] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1473] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1473] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1474] = "JavaLexerImp.not_asterisk ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1474] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1474] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1474] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1474] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1474] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1474] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1476] = "JavaLexerImp.not_asterisk ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1476] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1476] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1476] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1476] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1477] = "JavaLexerImp.not_asterisk ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1477] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1477] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1477] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1478] = "JavaLexerImp.not_asterisk ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1478] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1478] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1478] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1478] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1478] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1478] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1480] = "JavaLexerImp.not_asterisk ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1480] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1480] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1480] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1480] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1481] = "JavaLexerImp.not_asterisk ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1481] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1481] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1481] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1482] = "JavaLexerImp.not_asterisk ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1482] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1482] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1482] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1482] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1482] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1482] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1484] = "JavaLexerImp.not_asterisk ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1484] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1484] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1484] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1484] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1485] = "JavaLexerImp.not_asterisk ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1485] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1485] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1485] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1486] = "JavaLexerImp.not_asterisk ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1486] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1486] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1486] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1486] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1486] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1486] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1488] = "JavaLexerImp.not_asterisk ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1488] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1488] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1488] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1488] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1489] = "JavaLexerImp.not_asterisk ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1489] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1489] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1489] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1490] = "JavaLexerImp.not_asterisk ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1490] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1490] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1490] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1490] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1490] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1490] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1492] = "JavaLexerImp.not_asterisk ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1492] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1492] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1492] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1492] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1493] = "JavaLexerImp.not_asterisk ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1493] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1493] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1493] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1494] = "JavaLexerImp.not_asterisk ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1494] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1494] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1494] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1494] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1494] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1494] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1496] = "JavaLexerImp.not_asterisk ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1496] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1496] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1496] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1496] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1497] = "JavaLexerImp.not_asterisk ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1497] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1497] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1497] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1498] = "JavaLexerImp.not_asterisk ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1498] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1498] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1498] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1498] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1498] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1498] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1500] = "JavaLexerImp.not_asterisk ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1500] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1500] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1500] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1500] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1501] = "JavaLexerImp.not_asterisk ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1501] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1501] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1501] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1502] = "JavaLexerImp.not_asterisk ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1502] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1502] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1502] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1502] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1502] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1502] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1504] = "JavaLexerImp.not_asterisk ::= . `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1504] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1504] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1504] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1504] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1505] = "JavaLexerImp.not_asterisk ::= `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1505] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1505] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1505] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1506] = "JavaLexerImp.not_asterisk ::= `\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1506] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1506] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1506] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1506] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1506] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1506] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1508] = "JavaLexerImp.not_asterisk ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1508] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1508] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1508] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1508] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1509] = "JavaLexerImp.not_asterisk ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1509] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1509] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1509] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1510] = "JavaLexerImp.not_asterisk ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1510] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1510] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1510] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1510] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1510] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1510] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1512] = "JavaLexerImp.not_asterisk ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1512] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1512] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1512] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1512] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1513] = "JavaLexerImp.not_asterisk ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1513] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1513] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1513] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1514] = "JavaLexerImp.not_asterisk ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1514] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1514] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1514] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1514] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1514] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1514] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1516] = "JavaLexerImp.not_asterisk ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1516] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1516] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1516] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1516] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1517] = "JavaLexerImp.not_asterisk ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1517] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1517] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1517] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1518] = "JavaLexerImp.not_asterisk ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1518] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1518] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1518] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1518] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1518] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1518] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1520] = "JavaLexerImp.not_asterisk ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1520] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1520] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1520] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1520] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1521] = "JavaLexerImp.not_asterisk ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1521] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1521] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1521] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1522] = "JavaLexerImp.not_asterisk ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1522] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1522] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1522] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1522] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1522] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1522] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1524] = "JavaLexerImp.not_asterisk ::= . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1524] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1524] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1524] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1524] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1525] = "JavaLexerImp.not_asterisk ::= `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1525] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1525] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1525] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1526] = "JavaLexerImp.not_asterisk ::= `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1526] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1526] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1526] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1526] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1526] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1526] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1528] = "JavaLexerImp.not_asterisk ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1528] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1528] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1528] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1528] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1529] = "JavaLexerImp.not_asterisk ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1529] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1529] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1529] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1530] = "JavaLexerImp.not_asterisk ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1530] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1530] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1530] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1530] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1530] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1530] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1532] = "JavaLexerImp.not_asterisk ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1532] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1532] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1532] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1532] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1533] = "JavaLexerImp.not_asterisk ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1533] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1533] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1533] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1534] = "JavaLexerImp.not_asterisk ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1534] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1534] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1534] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1534] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1534] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1534] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1536] = "JavaLexerImp.not_asterisk ::= . `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1536] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1536] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1536] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1536] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1537] = "JavaLexerImp.not_asterisk ::= `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1537] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1537] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1537] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1538] = "JavaLexerImp.not_asterisk ::= `\\\\r. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1538] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1538] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1538] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1538] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1538] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1538] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1540] = "JavaLexerImp.not_asterisk ::= . `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1540] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1540] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1540] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1540] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1541] = "JavaLexerImp.not_asterisk ::= `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1541] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1541] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1541] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1542] = "JavaLexerImp.not_asterisk ::= `\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1542] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1542] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1542] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1542] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1542] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1542] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1544] = "JavaLexerImp.not_asterisk ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1544] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1544] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1544] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1544] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1545] = "JavaLexerImp.not_asterisk ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1545] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1545] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1545] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1546] = "JavaLexerImp.not_asterisk ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1546] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1546] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1546] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1546] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1546] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1546] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1548] = "JavaLexerImp.not_asterisk ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1548] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1548] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1548] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1548] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1549] = "JavaLexerImp.not_asterisk ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1549] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1549] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1549] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1550] = "JavaLexerImp.not_asterisk ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1550] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1550] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1550] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1550] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1550] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1550] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1552] = "JavaLexerImp.not_asterisk ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1552] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1552] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1552] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1552] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1553] = "JavaLexerImp.not_asterisk ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1553] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1553] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1553] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1554] = "JavaLexerImp.not_asterisk ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1554] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1554] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1554] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1554] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1554] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1554] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1556] = "JavaLexerImp.not_asterisk ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1556] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1556] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1556] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1556] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1557] = "JavaLexerImp.not_asterisk ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1557] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1557] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1557] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1558] = "JavaLexerImp.not_asterisk ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1558] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1558] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1558] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1558] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1558] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1558] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1560] = "JavaLexerImp.not_asterisk ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1560] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1560] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1560] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1560] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1561] = "JavaLexerImp.not_asterisk ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1561] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1561] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1561] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1562] = "JavaLexerImp.not_asterisk ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1562] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1562] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1562] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1562] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1562] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1562] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1564] = "JavaLexerImp.not_asterisk ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1564] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1564] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1564] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1564] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1565] = "JavaLexerImp.not_asterisk ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1565] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1565] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1565] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1566] = "JavaLexerImp.not_asterisk ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1566] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1566] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1566] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1566] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1566] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1566] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1568] = "JavaLexerImp.not_asterisk ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1568] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1568] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1568] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1568] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1569] = "JavaLexerImp.not_asterisk ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1569] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1569] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1569] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1570] = "JavaLexerImp.not_asterisk ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1570] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1570] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1570] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1570] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1570] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1570] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1572] = "JavaLexerImp.not_asterisk ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1572] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1572] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1572] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1572] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1573] = "JavaLexerImp.not_asterisk ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1573] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1573] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1573] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1574] = "JavaLexerImp.not_asterisk ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1574] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1574] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1574] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1574] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1574] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1574] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1576] = "JavaLexerImp.not_asterisk ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1576] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1576] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1576] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1576] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1577] = "JavaLexerImp.not_asterisk ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1577] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1577] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1577] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1578] = "JavaLexerImp.not_asterisk ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1578] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1578] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1578] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1578] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1578] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1578] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1580] = "JavaLexerImp.not_asterisk ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1580] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1580] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1580] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1580] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1581] = "JavaLexerImp.not_asterisk ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1581] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1581] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1581] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1582] = "JavaLexerImp.not_asterisk ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1582] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1582] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1582] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1582] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1582] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1582] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1584] = "JavaLexerImp.not_asterisk ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1584] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1584] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1584] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1584] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1585] = "JavaLexerImp.not_asterisk ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1585] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1585] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1585] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1586] = "JavaLexerImp.not_asterisk ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1586] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1586] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1586] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1586] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1586] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1586] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1588] = "JavaLexerImp.not_asterisk ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1588] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1588] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1588] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1588] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1589] = "JavaLexerImp.not_asterisk ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1589] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1589] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1589] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1590] = "JavaLexerImp.not_asterisk ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1590] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1590] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1590] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1590] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1590] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1590] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1592] = "JavaLexerImp.not_asterisk ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1592] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1592] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1592] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1592] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1593] = "JavaLexerImp.not_asterisk ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1593] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1593] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1593] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1594] = "JavaLexerImp.not_asterisk ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1594] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1594] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1594] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1594] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1594] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1594] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1596] = "JavaLexerImp.not_asterisk ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1596] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1596] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1596] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1596] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1597] = "JavaLexerImp.not_asterisk ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1597] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1597] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1597] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1598] = "JavaLexerImp.not_asterisk ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1598] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1598] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1598] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1598] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1598] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1598] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1600] = "JavaLexerImp.not_asterisk ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1600] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1600] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1600] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1600] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1601] = "JavaLexerImp.not_asterisk ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1601] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1601] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1601] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1602] = "JavaLexerImp.not_asterisk ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1602] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1602] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1602] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1602] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1602] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1602] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1604] = "JavaLexerImp.not_asterisk ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1604] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1604] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1604] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1604] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1605] = "JavaLexerImp.not_asterisk ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1605] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1605] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1605] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1606] = "JavaLexerImp.not_asterisk ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1606] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1606] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1606] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1606] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1606] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1606] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1608] = "JavaLexerImp.not_asterisk ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1608] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1608] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1608] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1608] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1609] = "JavaLexerImp.not_asterisk ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1609] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1609] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1609] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1610] = "JavaLexerImp.not_asterisk ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1610] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1610] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1610] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1610] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1610] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1610] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1612] = "JavaLexerImp.not_asterisk ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1612] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1612] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1612] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1612] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1613] = "JavaLexerImp.not_asterisk ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1613] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1613] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1613] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1614] = "JavaLexerImp.not_asterisk ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1614] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1614] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1614] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1614] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1614] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1614] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1616] = "JavaLexerImp.not_asterisk ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1616] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1616] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1616] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1616] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1617] = "JavaLexerImp.not_asterisk ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1617] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1617] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1617] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1618] = "JavaLexerImp.not_asterisk ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1618] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1618] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1618] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1618] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1618] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1618] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1620] = "JavaLexerImp.not_asterisk ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1620] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1620] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1620] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1620] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1621] = "JavaLexerImp.not_asterisk ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1621] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1621] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1621] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1622] = "JavaLexerImp.not_asterisk ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1622] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1622] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1622] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1622] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1622] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1622] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1624] = "JavaLexerImp.not_asterisk ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1624] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1624] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1624] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1624] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1625] = "JavaLexerImp.not_asterisk ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1625] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1625] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1625] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1626] = "JavaLexerImp.not_asterisk ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1626] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1626] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1626] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1626] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1626] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1626] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1628] = "JavaLexerImp.not_asterisk ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1628] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1628] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1628] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1628] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1629] = "JavaLexerImp.not_asterisk ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1629] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1629] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1629] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1630] = "JavaLexerImp.not_asterisk ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1630] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1630] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1630] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1630] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1630] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1630] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1632] = "JavaLexerImp.not_asterisk ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1632] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1632] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1632] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1632] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1633] = "JavaLexerImp.not_asterisk ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1633] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1633] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1633] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1634] = "JavaLexerImp.not_asterisk ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1634] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1634] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1634] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1634] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1634] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1634] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1636] = "JavaLexerImp.not_asterisk ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1636] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1636] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1636] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1636] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1637] = "JavaLexerImp.not_asterisk ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1637] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1637] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1637] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1638] = "JavaLexerImp.not_asterisk ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1638] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1638] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1638] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1638] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1638] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1638] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1640] = "JavaLexerImp.not_asterisk ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1640] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1640] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1640] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1640] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1641] = "JavaLexerImp.not_asterisk ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1641] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1641] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1641] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1642] = "JavaLexerImp.not_asterisk ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1642] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1642] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1642] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1642] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1642] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1642] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1644] = "JavaLexerImp.not_asterisk ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1644] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1644] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1644] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1644] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1645] = "JavaLexerImp.not_asterisk ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1645] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1645] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1645] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1646] = "JavaLexerImp.not_asterisk ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1646] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1646] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1646] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1646] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1646] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1646] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1648] = "JavaLexerImp.not_asterisk ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1648] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1648] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1648] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1648] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1649] = "JavaLexerImp.not_asterisk ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1649] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1649] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1649] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1650] = "JavaLexerImp.not_asterisk ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1650] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1650] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1650] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1650] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1650] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1650] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1652] = "JavaLexerImp.not_asterisk ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1652] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1652] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1652] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1652] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1653] = "JavaLexerImp.not_asterisk ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1653] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1653] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1653] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1654] = "JavaLexerImp.not_asterisk ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1654] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1654] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1654] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1654] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1654] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1654] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1656] = "JavaLexerImp.not_asterisk ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1656] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1656] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1656] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1656] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1657] = "JavaLexerImp.not_asterisk ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1657] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1657] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1657] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1658] = "JavaLexerImp.not_asterisk ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1658] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1658] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1658] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1658] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1658] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1658] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1660] = "JavaLexerImp.not_asterisk ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1660] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1660] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1660] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1660] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1661] = "JavaLexerImp.not_asterisk ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1661] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1661] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1661] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1662] = "JavaLexerImp.not_asterisk ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1662] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1662] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1662] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1662] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1662] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1662] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1664] = "JavaLexerImp.not_asterisk ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1664] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1664] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1664] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1664] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1665] = "JavaLexerImp.not_asterisk ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1665] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1665] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1665] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1666] = "JavaLexerImp.not_asterisk ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1666] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1666] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1666] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1666] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1666] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1666] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1668] = "JavaLexerImp.not_asterisk ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1668] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1668] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1668] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1668] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1669] = "JavaLexerImp.not_asterisk ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1669] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1669] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1669] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1670] = "JavaLexerImp.not_asterisk ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1670] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1670] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1670] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1670] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1670] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1670] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1672] = "JavaLexerImp.not_asterisk ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1672] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1672] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1672] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1672] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1673] = "JavaLexerImp.not_asterisk ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1673] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1673] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1673] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1674] = "JavaLexerImp.not_asterisk ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1674] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1674] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1674] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1674] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1674] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1674] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1676] = "JavaLexerImp.not_asterisk ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1676] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1676] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1676] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1676] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1677] = "JavaLexerImp.not_asterisk ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1677] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1677] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1677] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1678] = "JavaLexerImp.not_asterisk ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1678] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1678] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1678] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1678] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1678] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1678] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1680] = "JavaLexerImp.not_asterisk ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1680] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1680] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1680] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1680] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1681] = "JavaLexerImp.not_asterisk ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1681] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1681] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1681] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1682] = "JavaLexerImp.not_asterisk ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1682] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1682] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1682] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1682] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1682] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1682] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1684] = "JavaLexerImp.not_asterisk ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1684] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1684] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1684] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1684] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1685] = "JavaLexerImp.not_asterisk ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1685] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1685] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1685] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1686] = "JavaLexerImp.not_asterisk ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1686] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1686] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1686] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1686] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1686] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1686] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1688] = "JavaLexerImp.not_asterisk ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1688] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1688] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1688] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1688] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1689] = "JavaLexerImp.not_asterisk ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1689] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1689] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1689] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1690] = "JavaLexerImp.not_asterisk ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1690] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1690] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1690] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1690] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1690] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1690] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1692] = "JavaLexerImp.not_asterisk ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1692] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1692] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1692] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1692] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1693] = "JavaLexerImp.not_asterisk ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1693] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1693] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1693] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1694] = "JavaLexerImp.not_asterisk ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1694] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1694] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1694] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1694] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1694] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1694] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1696] = "JavaLexerImp.not_asterisk ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1696] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1696] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1696] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1696] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1697] = "JavaLexerImp.not_asterisk ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1697] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1697] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1697] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1698] = "JavaLexerImp.not_asterisk ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1698] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1698] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1698] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1698] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1698] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1698] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1700] = "JavaLexerImp.not_asterisk ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1700] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1700] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1700] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1700] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1701] = "JavaLexerImp.not_asterisk ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1701] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1701] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1701] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1702] = "JavaLexerImp.not_asterisk ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1702] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1702] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1702] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1702] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1702] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1702] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1704] = "JavaLexerImp.not_asterisk ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1704] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1704] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1704] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1704] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1705] = "JavaLexerImp.not_asterisk ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1705] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1705] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1705] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1706] = "JavaLexerImp.not_asterisk ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1706] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1706] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1706] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1706] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1706] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1706] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1708] = "JavaLexerImp.not_asterisk ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1708] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1708] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1708] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1708] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1709] = "JavaLexerImp.not_asterisk ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1709] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1709] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1709] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1710] = "JavaLexerImp.not_asterisk ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1710] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1710] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1710] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1710] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1710] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1710] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1712] = "JavaLexerImp.not_asterisk ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1712] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1712] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1712] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1712] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1713] = "JavaLexerImp.not_asterisk ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1713] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1713] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1713] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1714] = "JavaLexerImp.not_asterisk ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1714] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1714] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1714] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1714] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1714] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1714] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1716] = "JavaLexerImp.not_asterisk ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1716] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1716] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1716] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1716] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1717] = "JavaLexerImp.not_asterisk ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1717] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1717] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1717] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1718] = "JavaLexerImp.not_asterisk ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1718] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1718] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1718] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1718] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1718] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1718] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1720] = "JavaLexerImp.not_asterisk ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1720] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1720] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1720] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1720] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1721] = "JavaLexerImp.not_asterisk ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1721] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1721] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1721] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1722] = "JavaLexerImp.not_asterisk ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1722] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1722] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1722] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1722] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1722] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1722] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1724] = "JavaLexerImp.not_asterisk ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1724] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1724] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1724] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1724] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1725] = "JavaLexerImp.not_asterisk ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1725] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1725] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1725] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1726] = "JavaLexerImp.not_asterisk ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1726] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1726] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1726] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1726] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1726] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1726] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1728] = "JavaLexerImp.not_asterisk ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1728] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1728] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1728] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1728] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1729] = "JavaLexerImp.not_asterisk ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1729] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1729] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1729] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1730] = "JavaLexerImp.not_asterisk ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1730] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1730] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1730] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1730] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1730] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1730] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1732] = "JavaLexerImp.not_asterisk ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1732] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1732] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1732] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1732] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1733] = "JavaLexerImp.not_asterisk ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1733] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1733] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1733] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1734] = "JavaLexerImp.not_asterisk ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1734] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1734] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1734] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1734] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1734] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1734] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1736] = "JavaLexerImp.not_asterisk ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1736] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1736] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1736] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1736] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1737] = "JavaLexerImp.not_asterisk ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1737] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1737] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1737] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1738] = "JavaLexerImp.not_asterisk ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1738] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1738] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1738] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1738] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1738] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1738] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1740] = "JavaLexerImp.not_asterisk ::= . `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1740] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1740] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1740] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1740] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1741] = "JavaLexerImp.not_asterisk ::= `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1741] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1741] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1741] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1742] = "JavaLexerImp.not_asterisk ::= `\\\\\\\\. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1742] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1742] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1742] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1742] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1742] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1742] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1744] = "JavaLexerImp.not_asterisk ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1744] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1744] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1744] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1744] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1745] = "JavaLexerImp.not_asterisk ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1745] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1745] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1745] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1746] = "JavaLexerImp.not_asterisk ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1746] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1746] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1746] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1746] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1746] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1746] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1748] = "JavaLexerImp.not_asterisk ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1748] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1748] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1748] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1748] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1749] = "JavaLexerImp.not_asterisk ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1749] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1749] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1749] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1750] = "JavaLexerImp.not_asterisk ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1750] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1750] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1750] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1750] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1750] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1750] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1752] = "JavaLexerImp.not_asterisk ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1752] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1752] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1752] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1752] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1753] = "JavaLexerImp.not_asterisk ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1753] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1753] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1753] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1754] = "JavaLexerImp.not_asterisk ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1754] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1754] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1754] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1754] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1754] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1754] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1756] = "JavaLexerImp.not_asterisk ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1756] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1756] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1756] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1756] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1757] = "JavaLexerImp.not_asterisk ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1757] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1757] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1757] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1758] = "JavaLexerImp.not_asterisk ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1758] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1758] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1758] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1758] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1758] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1758] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1760] = "JavaLexerImp.not_asterisk ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1760] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1760] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1760] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1760] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1761] = "JavaLexerImp.not_asterisk ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1761] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1761] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1761] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1762] = "JavaLexerImp.not_asterisk ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1762] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1762] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1762] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1762] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1762] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1762] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1764] = "JavaLexerImp.not_asterisk ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1764] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1764] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1764] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1764] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1765] = "JavaLexerImp.not_asterisk ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1765] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1765] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1765] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1766] = "JavaLexerImp.not_asterisk ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1766] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1766] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1766] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1766] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1766] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1766] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1768] = "JavaLexerImp.not_asterisk ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1768] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1768] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1768] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1768] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1769] = "JavaLexerImp.not_asterisk ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1769] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1769] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1769] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1770] = "JavaLexerImp.not_asterisk ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1770] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1770] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1770] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1770] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1770] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1770] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1772] = "JavaLexerImp.not_asterisk ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1772] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1772] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1772] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1772] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1773] = "JavaLexerImp.not_asterisk ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1773] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1773] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1773] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1774] = "JavaLexerImp.not_asterisk ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1774] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1774] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1774] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1774] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1774] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1774] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1776] = "JavaLexerImp.not_asterisk ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1776] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1776] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1776] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1776] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1777] = "JavaLexerImp.not_asterisk ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1777] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1777] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1777] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1778] = "JavaLexerImp.not_asterisk ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1778] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1778] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1778] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1778] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1778] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1778] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1780] = "JavaLexerImp.not_asterisk ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1780] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1780] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1780] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1780] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1781] = "JavaLexerImp.not_asterisk ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1781] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1781] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1781] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1782] = "JavaLexerImp.not_asterisk ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1782] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1782] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1782] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1782] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1782] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1782] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1784] = "JavaLexerImp.not_asterisk ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1784] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1784] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1784] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1784] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1785] = "JavaLexerImp.not_asterisk ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1785] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1785] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1785] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1786] = "JavaLexerImp.not_asterisk ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1786] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1786] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1786] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1786] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1786] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1786] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1788] = "JavaLexerImp.not_asterisk ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1788] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1788] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1788] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1788] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1789] = "JavaLexerImp.not_asterisk ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1789] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1789] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1789] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1790] = "JavaLexerImp.not_asterisk ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1790] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1790] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1790] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1790] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1790] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1790] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1792] = "JavaLexerImp.not_asterisk ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1792] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1792] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1792] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1792] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1793] = "JavaLexerImp.not_asterisk ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1793] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1793] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1793] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1794] = "JavaLexerImp.not_asterisk ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1794] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1794] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1794] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1794] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1794] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1794] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1796] = "JavaLexerImp.not_asterisk ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1796] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1796] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1796] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1796] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1797] = "JavaLexerImp.not_asterisk ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1797] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1797] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1797] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1798] = "JavaLexerImp.not_asterisk ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1798] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1798] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1798] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1798] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1798] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1798] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1800] = "JavaLexerImp.not_asterisk ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1800] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1800] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1800] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1800] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1801] = "JavaLexerImp.not_asterisk ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1801] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1801] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1801] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1802] = "JavaLexerImp.not_asterisk ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1802] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1802] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1802] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1802] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1802] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1802] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1804] = "JavaLexerImp.not_asterisk ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1804] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1804] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1804] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1804] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1805] = "JavaLexerImp.not_asterisk ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1805] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1805] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1805] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1806] = "JavaLexerImp.not_asterisk ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1806] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1806] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1806] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1806] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1806] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1806] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1808] = "JavaLexerImp.not_asterisk ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1808] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1808] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1808] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1808] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1809] = "JavaLexerImp.not_asterisk ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1809] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1809] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1809] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1810] = "JavaLexerImp.not_asterisk ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1810] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1810] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1810] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1810] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1810] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1810] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1812] = "JavaLexerImp.not_asterisk ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1812] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1812] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1812] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1812] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1813] = "JavaLexerImp.not_asterisk ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1813] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1813] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1813] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1814] = "JavaLexerImp.not_asterisk ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1814] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1814] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1814] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1814] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1814] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1814] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1816] = "JavaLexerImp.not_asterisk ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1816] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1816] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1816] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1816] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1817] = "JavaLexerImp.not_asterisk ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1817] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1817] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1817] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1818] = "JavaLexerImp.not_asterisk ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1818] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1818] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1818] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1818] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1818] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1818] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1820] = "JavaLexerImp.not_asterisk ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1820] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1820] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1820] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1820] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1821] = "JavaLexerImp.not_asterisk ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1821] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1821] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1821] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1822] = "JavaLexerImp.not_asterisk ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1822] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1822] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1822] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1822] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1822] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1822] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1824] = "JavaLexerImp.not_asterisk ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1824] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1824] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1824] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1824] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1825] = "JavaLexerImp.not_asterisk ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1825] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1825] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1825] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1826] = "JavaLexerImp.not_asterisk ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1826] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1826] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1826] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1826] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1826] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1826] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1828] = "JavaLexerImp.not_asterisk ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1828] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1828] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1828] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1828] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1829] = "JavaLexerImp.not_asterisk ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1829] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1829] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1829] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1830] = "JavaLexerImp.not_asterisk ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1830] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1830] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1830] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1830] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1830] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1830] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1832] = "JavaLexerImp.not_asterisk ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1832] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1832] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1832] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1832] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1833] = "JavaLexerImp.not_asterisk ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1833] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1833] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1833] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1834] = "JavaLexerImp.not_asterisk ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1834] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1834] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1834] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1834] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1834] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1834] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1836] = "JavaLexerImp.not_asterisk ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1836] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1836] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1836] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1836] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1837] = "JavaLexerImp.not_asterisk ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1837] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1837] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1837] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1838] = "JavaLexerImp.not_asterisk ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1838] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1838] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1838] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1838] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1838] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1838] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1840] = "JavaLexerImp.not_asterisk ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1840] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1840] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1840] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1840] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1841] = "JavaLexerImp.not_asterisk ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1841] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1841] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1841] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1842] = "JavaLexerImp.not_asterisk ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1842] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1842] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1842] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1842] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1842] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1842] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1844] = "JavaLexerImp.not_asterisk ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1844] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1844] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1844] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1844] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1845] = "JavaLexerImp.not_asterisk ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1845] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1845] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1845] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1846] = "JavaLexerImp.not_asterisk ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1846] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1846] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1846] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1846] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1846] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1846] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1848] = "JavaLexerImp.not_asterisk ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1848] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1848] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1848] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1848] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1849] = "JavaLexerImp.not_asterisk ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1849] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1849] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1849] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1850] = "JavaLexerImp.not_asterisk ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1850] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1850] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1850] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1850] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1850] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1850] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1852] = "JavaLexerImp.not_asterisk ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1852] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1852] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1852] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1852] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1853] = "JavaLexerImp.not_asterisk ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1853] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1853] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1853] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1854] = "JavaLexerImp.not_asterisk ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1854] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1854] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1854] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1854] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1854] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1854] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1856] = "JavaLexerImp.not_asterisk ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1856] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1856] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1856] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1856] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1857] = "JavaLexerImp.not_asterisk ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1857] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1857] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1857] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1858] = "JavaLexerImp.not_asterisk ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1858] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1858] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1858] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1858] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1858] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1858] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1860] = "JavaLexerImp.not_asterisk ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1860] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1860] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1860] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1860] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1861] = "JavaLexerImp.not_asterisk ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1861] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1861] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1861] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1862] = "JavaLexerImp.not_asterisk ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1862] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1862] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1862] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1862] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1862] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1862] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1864] = "JavaLexerImp.not_asterisk ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1864] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1864] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1864] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1864] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1865] = "JavaLexerImp.not_asterisk ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1865] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1865] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1865] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1866] = "JavaLexerImp.not_asterisk ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1866] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1866] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1866] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1866] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1866] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1866] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1868] = "JavaLexerImp.not_asterisk ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1868] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1868] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1868] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1868] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1869] = "JavaLexerImp.not_asterisk ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1869] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1869] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1869] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1870] = "JavaLexerImp.not_asterisk ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1870] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1870] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1870] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1870] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1870] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1870] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1872] = "JavaLexerImp.not_asterisk ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1872] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1872] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1872] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_asterisk_1872] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1873] = "JavaLexerImp.not_asterisk ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1873] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1873] = ART_L_JavaLexerImp_not_asterisk;
		popD[ART_L_JavaLexerImp_not_asterisk_1873] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_asterisk_1874] = "JavaLexerImp.not_asterisk ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_not_asterisk_1874] = "";
		lhsL[ART_L_JavaLexerImp_not_asterisk_1874] = ART_L_JavaLexerImp_not_asterisk;
		artKindOfs[ART_L_JavaLexerImp_not_asterisk_1874] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_asterisk_1874] = true;
		eoR_pL[ART_L_JavaLexerImp_not_asterisk_1874] = true;
		popD[ART_L_JavaLexerImp_not_asterisk_1874] = true;
	}

	public void artTableInitialiser_172() {
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash] = "JavaLexerImp.not_slash ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash] = "not_slash";
		artKindOfs[ART_L_JavaLexerImp_not_slash] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1877] = "JavaLexerImp.not_slash ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1877] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1877] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1877] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1877] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1878] = "JavaLexerImp.not_slash ::= `";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1878] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1878] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1878] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1879] = "JavaLexerImp.not_slash ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1879] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1879] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1879] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1879] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1879] = true;
		popD[ART_L_JavaLexerImp_not_slash_1879] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1881] = "JavaLexerImp.not_slash ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1881] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1881] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1881] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1881] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1882] = "JavaLexerImp.not_slash ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1882] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1882] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1882] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1883] = "JavaLexerImp.not_slash ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1883] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1883] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1883] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1883] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1883] = true;
		popD[ART_L_JavaLexerImp_not_slash_1883] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1885] = "JavaLexerImp.not_slash ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1885] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1885] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1885] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1885] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1886] = "JavaLexerImp.not_slash ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1886] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1886] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1886] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1887] = "JavaLexerImp.not_slash ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1887] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1887] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1887] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1887] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1887] = true;
		popD[ART_L_JavaLexerImp_not_slash_1887] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1889] = "JavaLexerImp.not_slash ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1889] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1889] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1889] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1889] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1890] = "JavaLexerImp.not_slash ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1890] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1890] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1890] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1891] = "JavaLexerImp.not_slash ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1891] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1891] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1891] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1891] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1891] = true;
		popD[ART_L_JavaLexerImp_not_slash_1891] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1893] = "JavaLexerImp.not_slash ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1893] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1893] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1893] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1893] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1894] = "JavaLexerImp.not_slash ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1894] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1894] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1894] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1895] = "JavaLexerImp.not_slash ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1895] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1895] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1895] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1895] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1895] = true;
		popD[ART_L_JavaLexerImp_not_slash_1895] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1897] = "JavaLexerImp.not_slash ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1897] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1897] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1897] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1897] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1898] = "JavaLexerImp.not_slash ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1898] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1898] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1898] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1899] = "JavaLexerImp.not_slash ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1899] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1899] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1899] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1899] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1899] = true;
		popD[ART_L_JavaLexerImp_not_slash_1899] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1901] = "JavaLexerImp.not_slash ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1901] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1901] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1901] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1901] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1902] = "JavaLexerImp.not_slash ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1902] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1902] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1902] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1903] = "JavaLexerImp.not_slash ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1903] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1903] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1903] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1903] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1903] = true;
		popD[ART_L_JavaLexerImp_not_slash_1903] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1905] = "JavaLexerImp.not_slash ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1905] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1905] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1905] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1905] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1906] = "JavaLexerImp.not_slash ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1906] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1906] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1906] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1907] = "JavaLexerImp.not_slash ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1907] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1907] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1907] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1907] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1907] = true;
		popD[ART_L_JavaLexerImp_not_slash_1907] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1909] = "JavaLexerImp.not_slash ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1909] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1909] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1909] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1909] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1910] = "JavaLexerImp.not_slash ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1910] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1910] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1910] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1911] = "JavaLexerImp.not_slash ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1911] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1911] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1911] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1911] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1911] = true;
		popD[ART_L_JavaLexerImp_not_slash_1911] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1913] = "JavaLexerImp.not_slash ::= . `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1913] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1913] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1913] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1913] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1914] = "JavaLexerImp.not_slash ::= `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1914] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1914] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1914] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1915] = "JavaLexerImp.not_slash ::= `\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1915] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1915] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1915] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1915] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1915] = true;
		popD[ART_L_JavaLexerImp_not_slash_1915] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1917] = "JavaLexerImp.not_slash ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1917] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1917] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1917] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1917] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1918] = "JavaLexerImp.not_slash ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1918] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1918] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1918] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1919] = "JavaLexerImp.not_slash ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1919] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1919] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1919] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1919] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1919] = true;
		popD[ART_L_JavaLexerImp_not_slash_1919] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1921] = "JavaLexerImp.not_slash ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1921] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1921] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1921] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1921] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1922] = "JavaLexerImp.not_slash ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1922] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1922] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1922] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1923] = "JavaLexerImp.not_slash ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1923] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1923] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1923] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1923] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1923] = true;
		popD[ART_L_JavaLexerImp_not_slash_1923] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1925] = "JavaLexerImp.not_slash ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1925] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1925] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1925] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1925] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1926] = "JavaLexerImp.not_slash ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1926] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1926] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1926] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1927] = "JavaLexerImp.not_slash ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1927] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1927] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1927] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1927] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1927] = true;
		popD[ART_L_JavaLexerImp_not_slash_1927] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1929] = "JavaLexerImp.not_slash ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1929] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1929] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1929] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1929] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1930] = "JavaLexerImp.not_slash ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1930] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1930] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1930] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1931] = "JavaLexerImp.not_slash ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1931] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1931] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1931] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1931] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1931] = true;
		popD[ART_L_JavaLexerImp_not_slash_1931] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1933] = "JavaLexerImp.not_slash ::= . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1933] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1933] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1933] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1933] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1934] = "JavaLexerImp.not_slash ::= `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1934] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1934] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1934] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1935] = "JavaLexerImp.not_slash ::= `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1935] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1935] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1935] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1935] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1935] = true;
		popD[ART_L_JavaLexerImp_not_slash_1935] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1937] = "JavaLexerImp.not_slash ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1937] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1937] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1937] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1937] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1938] = "JavaLexerImp.not_slash ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1938] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1938] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1938] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1939] = "JavaLexerImp.not_slash ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1939] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1939] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1939] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1939] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1939] = true;
		popD[ART_L_JavaLexerImp_not_slash_1939] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1941] = "JavaLexerImp.not_slash ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1941] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1941] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1941] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1941] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1942] = "JavaLexerImp.not_slash ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1942] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1942] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1942] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1943] = "JavaLexerImp.not_slash ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1943] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1943] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1943] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1943] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1943] = true;
		popD[ART_L_JavaLexerImp_not_slash_1943] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1945] = "JavaLexerImp.not_slash ::= . `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1945] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1945] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1945] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1945] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1946] = "JavaLexerImp.not_slash ::= `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1946] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1946] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1946] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1947] = "JavaLexerImp.not_slash ::= `\\\\r. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1947] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1947] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1947] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1947] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1947] = true;
		popD[ART_L_JavaLexerImp_not_slash_1947] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1949] = "JavaLexerImp.not_slash ::= . `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1949] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1949] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1949] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1949] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1950] = "JavaLexerImp.not_slash ::= `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1950] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1950] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1950] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1951] = "JavaLexerImp.not_slash ::= `\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1951] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1951] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1951] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1951] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1951] = true;
		popD[ART_L_JavaLexerImp_not_slash_1951] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1953] = "JavaLexerImp.not_slash ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1953] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1953] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1953] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1953] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1954] = "JavaLexerImp.not_slash ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1954] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1954] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1954] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1955] = "JavaLexerImp.not_slash ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1955] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1955] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1955] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1955] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1955] = true;
		popD[ART_L_JavaLexerImp_not_slash_1955] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1957] = "JavaLexerImp.not_slash ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1957] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1957] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1957] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1957] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1958] = "JavaLexerImp.not_slash ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1958] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1958] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1958] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1959] = "JavaLexerImp.not_slash ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1959] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1959] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1959] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1959] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1959] = true;
		popD[ART_L_JavaLexerImp_not_slash_1959] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1961] = "JavaLexerImp.not_slash ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1961] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1961] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1961] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1961] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1962] = "JavaLexerImp.not_slash ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1962] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1962] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1962] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1963] = "JavaLexerImp.not_slash ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1963] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1963] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1963] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1963] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1963] = true;
		popD[ART_L_JavaLexerImp_not_slash_1963] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1965] = "JavaLexerImp.not_slash ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1965] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1965] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1965] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1965] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1966] = "JavaLexerImp.not_slash ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1966] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1966] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1966] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1967] = "JavaLexerImp.not_slash ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1967] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1967] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1967] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1967] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1967] = true;
		popD[ART_L_JavaLexerImp_not_slash_1967] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1969] = "JavaLexerImp.not_slash ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1969] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1969] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1969] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1969] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1970] = "JavaLexerImp.not_slash ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1970] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1970] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1970] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1971] = "JavaLexerImp.not_slash ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1971] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1971] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1971] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1971] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1971] = true;
		popD[ART_L_JavaLexerImp_not_slash_1971] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1973] = "JavaLexerImp.not_slash ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1973] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1973] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1973] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1973] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1974] = "JavaLexerImp.not_slash ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1974] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1974] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1974] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1975] = "JavaLexerImp.not_slash ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1975] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1975] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1975] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1975] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1975] = true;
		popD[ART_L_JavaLexerImp_not_slash_1975] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1977] = "JavaLexerImp.not_slash ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1977] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1977] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1977] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1977] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1978] = "JavaLexerImp.not_slash ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1978] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1978] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1978] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1979] = "JavaLexerImp.not_slash ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1979] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1979] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1979] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1979] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1979] = true;
		popD[ART_L_JavaLexerImp_not_slash_1979] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1981] = "JavaLexerImp.not_slash ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1981] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1981] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1981] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1981] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1982] = "JavaLexerImp.not_slash ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1982] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1982] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1982] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1983] = "JavaLexerImp.not_slash ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1983] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1983] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1983] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1983] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1983] = true;
		popD[ART_L_JavaLexerImp_not_slash_1983] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1985] = "JavaLexerImp.not_slash ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1985] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1985] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1985] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1985] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1986] = "JavaLexerImp.not_slash ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1986] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1986] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1986] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1987] = "JavaLexerImp.not_slash ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1987] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1987] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1987] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1987] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1987] = true;
		popD[ART_L_JavaLexerImp_not_slash_1987] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1989] = "JavaLexerImp.not_slash ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1989] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1989] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1989] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1989] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1990] = "JavaLexerImp.not_slash ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1990] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1990] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1990] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1991] = "JavaLexerImp.not_slash ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1991] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1991] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1991] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1991] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1991] = true;
		popD[ART_L_JavaLexerImp_not_slash_1991] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1993] = "JavaLexerImp.not_slash ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1993] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1993] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1993] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1993] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1994] = "JavaLexerImp.not_slash ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1994] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1994] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1994] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1995] = "JavaLexerImp.not_slash ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1995] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1995] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1995] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1995] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1995] = true;
		popD[ART_L_JavaLexerImp_not_slash_1995] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1997] = "JavaLexerImp.not_slash ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1997] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1997] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1997] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_1997] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1998] = "JavaLexerImp.not_slash ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1998] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1998] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_1998] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_1999] = "JavaLexerImp.not_slash ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_1999] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_1999] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_1999] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_1999] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_1999] = true;
		popD[ART_L_JavaLexerImp_not_slash_1999] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2001] = "JavaLexerImp.not_slash ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2001] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2001] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2001] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2001] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2002] = "JavaLexerImp.not_slash ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2002] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2002] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2002] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2003] = "JavaLexerImp.not_slash ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2003] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2003] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2003] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2003] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2003] = true;
		popD[ART_L_JavaLexerImp_not_slash_2003] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2005] = "JavaLexerImp.not_slash ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2005] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2005] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2005] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2005] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2006] = "JavaLexerImp.not_slash ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2006] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2006] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2006] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2007] = "JavaLexerImp.not_slash ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2007] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2007] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2007] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2007] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2007] = true;
		popD[ART_L_JavaLexerImp_not_slash_2007] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2009] = "JavaLexerImp.not_slash ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2009] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2009] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2009] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2009] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2010] = "JavaLexerImp.not_slash ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2010] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2010] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2010] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2011] = "JavaLexerImp.not_slash ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2011] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2011] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2011] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2011] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2011] = true;
		popD[ART_L_JavaLexerImp_not_slash_2011] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2013] = "JavaLexerImp.not_slash ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2013] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2013] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2013] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2013] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2014] = "JavaLexerImp.not_slash ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2014] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2014] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2014] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2015] = "JavaLexerImp.not_slash ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2015] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2015] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2015] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2015] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2015] = true;
		popD[ART_L_JavaLexerImp_not_slash_2015] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2017] = "JavaLexerImp.not_slash ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2017] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2017] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2017] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2017] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2018] = "JavaLexerImp.not_slash ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2018] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2018] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2018] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2019] = "JavaLexerImp.not_slash ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2019] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2019] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2019] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2019] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2019] = true;
		popD[ART_L_JavaLexerImp_not_slash_2019] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2021] = "JavaLexerImp.not_slash ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2021] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2021] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2021] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2021] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2022] = "JavaLexerImp.not_slash ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2022] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2022] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2022] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2023] = "JavaLexerImp.not_slash ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2023] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2023] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2023] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2023] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2023] = true;
		popD[ART_L_JavaLexerImp_not_slash_2023] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2025] = "JavaLexerImp.not_slash ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2025] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2025] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2025] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2025] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2026] = "JavaLexerImp.not_slash ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2026] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2026] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2026] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2027] = "JavaLexerImp.not_slash ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2027] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2027] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2027] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2027] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2027] = true;
		popD[ART_L_JavaLexerImp_not_slash_2027] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2029] = "JavaLexerImp.not_slash ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2029] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2029] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2029] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2029] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2030] = "JavaLexerImp.not_slash ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2030] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2030] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2030] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2031] = "JavaLexerImp.not_slash ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2031] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2031] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2031] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2031] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2031] = true;
		popD[ART_L_JavaLexerImp_not_slash_2031] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2033] = "JavaLexerImp.not_slash ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2033] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2033] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2033] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2033] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2034] = "JavaLexerImp.not_slash ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2034] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2034] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2034] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2035] = "JavaLexerImp.not_slash ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2035] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2035] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2035] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2035] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2035] = true;
		popD[ART_L_JavaLexerImp_not_slash_2035] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2037] = "JavaLexerImp.not_slash ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2037] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2037] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2037] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2037] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2038] = "JavaLexerImp.not_slash ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2038] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2038] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2038] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2039] = "JavaLexerImp.not_slash ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2039] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2039] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2039] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2039] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2039] = true;
		popD[ART_L_JavaLexerImp_not_slash_2039] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2041] = "JavaLexerImp.not_slash ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2041] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2041] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2041] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2041] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2042] = "JavaLexerImp.not_slash ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2042] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2042] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2042] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2043] = "JavaLexerImp.not_slash ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2043] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2043] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2043] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2043] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2043] = true;
		popD[ART_L_JavaLexerImp_not_slash_2043] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2045] = "JavaLexerImp.not_slash ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2045] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2045] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2045] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2045] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2046] = "JavaLexerImp.not_slash ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2046] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2046] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2046] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2047] = "JavaLexerImp.not_slash ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2047] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2047] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2047] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2047] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2047] = true;
		popD[ART_L_JavaLexerImp_not_slash_2047] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2049] = "JavaLexerImp.not_slash ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2049] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2049] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2049] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2049] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2050] = "JavaLexerImp.not_slash ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2050] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2050] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2050] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2051] = "JavaLexerImp.not_slash ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2051] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2051] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2051] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2051] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2051] = true;
		popD[ART_L_JavaLexerImp_not_slash_2051] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2053] = "JavaLexerImp.not_slash ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2053] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2053] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2053] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2053] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2054] = "JavaLexerImp.not_slash ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2054] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2054] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2054] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2055] = "JavaLexerImp.not_slash ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2055] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2055] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2055] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2055] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2055] = true;
		popD[ART_L_JavaLexerImp_not_slash_2055] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2057] = "JavaLexerImp.not_slash ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2057] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2057] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2057] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2057] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2058] = "JavaLexerImp.not_slash ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2058] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2058] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2058] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2059] = "JavaLexerImp.not_slash ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2059] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2059] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2059] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2059] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2059] = true;
		popD[ART_L_JavaLexerImp_not_slash_2059] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2061] = "JavaLexerImp.not_slash ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2061] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2061] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2061] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2061] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2062] = "JavaLexerImp.not_slash ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2062] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2062] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2062] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2063] = "JavaLexerImp.not_slash ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2063] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2063] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2063] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2063] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2063] = true;
		popD[ART_L_JavaLexerImp_not_slash_2063] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2065] = "JavaLexerImp.not_slash ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2065] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2065] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2065] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2065] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2066] = "JavaLexerImp.not_slash ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2066] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2066] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2066] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2067] = "JavaLexerImp.not_slash ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2067] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2067] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2067] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2067] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2067] = true;
		popD[ART_L_JavaLexerImp_not_slash_2067] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2069] = "JavaLexerImp.not_slash ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2069] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2069] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2069] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2069] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2070] = "JavaLexerImp.not_slash ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2070] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2070] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2070] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2071] = "JavaLexerImp.not_slash ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2071] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2071] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2071] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2071] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2071] = true;
		popD[ART_L_JavaLexerImp_not_slash_2071] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2073] = "JavaLexerImp.not_slash ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2073] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2073] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2073] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2073] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2074] = "JavaLexerImp.not_slash ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2074] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2074] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2074] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2075] = "JavaLexerImp.not_slash ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2075] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2075] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2075] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2075] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2075] = true;
		popD[ART_L_JavaLexerImp_not_slash_2075] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2077] = "JavaLexerImp.not_slash ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2077] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2077] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2077] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2077] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2078] = "JavaLexerImp.not_slash ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2078] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2078] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2078] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2079] = "JavaLexerImp.not_slash ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2079] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2079] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2079] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2079] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2079] = true;
		popD[ART_L_JavaLexerImp_not_slash_2079] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2081] = "JavaLexerImp.not_slash ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2081] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2081] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2081] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2081] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2082] = "JavaLexerImp.not_slash ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2082] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2082] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2082] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2083] = "JavaLexerImp.not_slash ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2083] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2083] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2083] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2083] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2083] = true;
		popD[ART_L_JavaLexerImp_not_slash_2083] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2085] = "JavaLexerImp.not_slash ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2085] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2085] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2085] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2085] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2086] = "JavaLexerImp.not_slash ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2086] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2086] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2086] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2087] = "JavaLexerImp.not_slash ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2087] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2087] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2087] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2087] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2087] = true;
		popD[ART_L_JavaLexerImp_not_slash_2087] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2089] = "JavaLexerImp.not_slash ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2089] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2089] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2089] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2089] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2090] = "JavaLexerImp.not_slash ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2090] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2090] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2090] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2091] = "JavaLexerImp.not_slash ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2091] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2091] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2091] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2091] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2091] = true;
		popD[ART_L_JavaLexerImp_not_slash_2091] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2093] = "JavaLexerImp.not_slash ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2093] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2093] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2093] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2093] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2094] = "JavaLexerImp.not_slash ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2094] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2094] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2094] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2095] = "JavaLexerImp.not_slash ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2095] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2095] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2095] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2095] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2095] = true;
		popD[ART_L_JavaLexerImp_not_slash_2095] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2097] = "JavaLexerImp.not_slash ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2097] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2097] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2097] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2097] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2098] = "JavaLexerImp.not_slash ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2098] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2098] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2098] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2099] = "JavaLexerImp.not_slash ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2099] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2099] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2099] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2099] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2099] = true;
		popD[ART_L_JavaLexerImp_not_slash_2099] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2101] = "JavaLexerImp.not_slash ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2101] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2101] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2101] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2101] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2102] = "JavaLexerImp.not_slash ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2102] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2102] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2102] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2103] = "JavaLexerImp.not_slash ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2103] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2103] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2103] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2103] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2103] = true;
		popD[ART_L_JavaLexerImp_not_slash_2103] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2105] = "JavaLexerImp.not_slash ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2105] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2105] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2105] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2105] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2106] = "JavaLexerImp.not_slash ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2106] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2106] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2106] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2107] = "JavaLexerImp.not_slash ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2107] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2107] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2107] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2107] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2107] = true;
		popD[ART_L_JavaLexerImp_not_slash_2107] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2109] = "JavaLexerImp.not_slash ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2109] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2109] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2109] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2109] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2110] = "JavaLexerImp.not_slash ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2110] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2110] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2110] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2111] = "JavaLexerImp.not_slash ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2111] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2111] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2111] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2111] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2111] = true;
		popD[ART_L_JavaLexerImp_not_slash_2111] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2113] = "JavaLexerImp.not_slash ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2113] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2113] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2113] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2113] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2114] = "JavaLexerImp.not_slash ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2114] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2114] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2114] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2115] = "JavaLexerImp.not_slash ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2115] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2115] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2115] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2115] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2115] = true;
		popD[ART_L_JavaLexerImp_not_slash_2115] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2117] = "JavaLexerImp.not_slash ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2117] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2117] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2117] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2117] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2118] = "JavaLexerImp.not_slash ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2118] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2118] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2118] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2119] = "JavaLexerImp.not_slash ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2119] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2119] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2119] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2119] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2119] = true;
		popD[ART_L_JavaLexerImp_not_slash_2119] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2121] = "JavaLexerImp.not_slash ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2121] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2121] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2121] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2121] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2122] = "JavaLexerImp.not_slash ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2122] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2122] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2122] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2123] = "JavaLexerImp.not_slash ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2123] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2123] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2123] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2123] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2123] = true;
		popD[ART_L_JavaLexerImp_not_slash_2123] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2125] = "JavaLexerImp.not_slash ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2125] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2125] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2125] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2125] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2126] = "JavaLexerImp.not_slash ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2126] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2126] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2126] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2127] = "JavaLexerImp.not_slash ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2127] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2127] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2127] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2127] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2127] = true;
		popD[ART_L_JavaLexerImp_not_slash_2127] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2129] = "JavaLexerImp.not_slash ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2129] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2129] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2129] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2129] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2130] = "JavaLexerImp.not_slash ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2130] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2130] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2130] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2131] = "JavaLexerImp.not_slash ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2131] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2131] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2131] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2131] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2131] = true;
		popD[ART_L_JavaLexerImp_not_slash_2131] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2133] = "JavaLexerImp.not_slash ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2133] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2133] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2133] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2133] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2134] = "JavaLexerImp.not_slash ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2134] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2134] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2134] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2135] = "JavaLexerImp.not_slash ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2135] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2135] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2135] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2135] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2135] = true;
		popD[ART_L_JavaLexerImp_not_slash_2135] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2137] = "JavaLexerImp.not_slash ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2137] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2137] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2137] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2137] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2138] = "JavaLexerImp.not_slash ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2138] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2138] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2138] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2139] = "JavaLexerImp.not_slash ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2139] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2139] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2139] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2139] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2139] = true;
		popD[ART_L_JavaLexerImp_not_slash_2139] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2141] = "JavaLexerImp.not_slash ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2141] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2141] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2141] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2141] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2142] = "JavaLexerImp.not_slash ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2142] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2142] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2142] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2143] = "JavaLexerImp.not_slash ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2143] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2143] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2143] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2143] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2143] = true;
		popD[ART_L_JavaLexerImp_not_slash_2143] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2145] = "JavaLexerImp.not_slash ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2145] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2145] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2145] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2145] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2146] = "JavaLexerImp.not_slash ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2146] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2146] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2146] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2147] = "JavaLexerImp.not_slash ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2147] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2147] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2147] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2147] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2147] = true;
		popD[ART_L_JavaLexerImp_not_slash_2147] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2149] = "JavaLexerImp.not_slash ::= . `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2149] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2149] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2149] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2149] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2150] = "JavaLexerImp.not_slash ::= `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2150] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2150] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2150] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2151] = "JavaLexerImp.not_slash ::= `\\\\\\\\. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2151] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2151] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2151] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2151] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2151] = true;
		popD[ART_L_JavaLexerImp_not_slash_2151] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2153] = "JavaLexerImp.not_slash ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2153] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2153] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2153] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2153] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2154] = "JavaLexerImp.not_slash ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2154] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2154] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2154] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2155] = "JavaLexerImp.not_slash ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2155] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2155] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2155] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2155] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2155] = true;
		popD[ART_L_JavaLexerImp_not_slash_2155] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2157] = "JavaLexerImp.not_slash ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2157] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2157] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2157] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2157] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2158] = "JavaLexerImp.not_slash ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2158] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2158] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2158] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2159] = "JavaLexerImp.not_slash ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2159] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2159] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2159] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2159] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2159] = true;
		popD[ART_L_JavaLexerImp_not_slash_2159] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2161] = "JavaLexerImp.not_slash ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2161] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2161] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2161] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2161] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2162] = "JavaLexerImp.not_slash ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2162] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2162] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2162] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2163] = "JavaLexerImp.not_slash ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2163] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2163] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2163] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2163] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2163] = true;
		popD[ART_L_JavaLexerImp_not_slash_2163] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2165] = "JavaLexerImp.not_slash ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2165] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2165] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2165] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2165] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2166] = "JavaLexerImp.not_slash ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2166] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2166] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2166] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2167] = "JavaLexerImp.not_slash ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2167] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2167] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2167] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2167] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2167] = true;
		popD[ART_L_JavaLexerImp_not_slash_2167] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2169] = "JavaLexerImp.not_slash ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2169] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2169] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2169] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2169] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2170] = "JavaLexerImp.not_slash ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2170] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2170] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2170] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2171] = "JavaLexerImp.not_slash ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2171] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2171] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2171] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2171] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2171] = true;
		popD[ART_L_JavaLexerImp_not_slash_2171] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2173] = "JavaLexerImp.not_slash ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2173] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2173] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2173] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2173] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2174] = "JavaLexerImp.not_slash ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2174] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2174] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2174] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2175] = "JavaLexerImp.not_slash ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2175] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2175] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2175] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2175] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2175] = true;
		popD[ART_L_JavaLexerImp_not_slash_2175] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2177] = "JavaLexerImp.not_slash ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2177] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2177] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2177] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2177] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2178] = "JavaLexerImp.not_slash ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2178] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2178] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2178] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2179] = "JavaLexerImp.not_slash ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2179] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2179] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2179] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2179] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2179] = true;
		popD[ART_L_JavaLexerImp_not_slash_2179] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2181] = "JavaLexerImp.not_slash ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2181] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2181] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2181] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2181] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2182] = "JavaLexerImp.not_slash ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2182] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2182] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2182] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2183] = "JavaLexerImp.not_slash ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2183] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2183] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2183] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2183] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2183] = true;
		popD[ART_L_JavaLexerImp_not_slash_2183] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2185] = "JavaLexerImp.not_slash ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2185] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2185] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2185] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2185] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2186] = "JavaLexerImp.not_slash ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2186] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2186] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2186] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2187] = "JavaLexerImp.not_slash ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2187] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2187] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2187] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2187] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2187] = true;
		popD[ART_L_JavaLexerImp_not_slash_2187] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2189] = "JavaLexerImp.not_slash ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2189] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2189] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2189] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2189] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2190] = "JavaLexerImp.not_slash ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2190] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2190] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2190] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2191] = "JavaLexerImp.not_slash ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2191] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2191] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2191] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2191] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2191] = true;
		popD[ART_L_JavaLexerImp_not_slash_2191] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2193] = "JavaLexerImp.not_slash ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2193] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2193] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2193] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2193] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2194] = "JavaLexerImp.not_slash ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2194] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2194] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2194] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2195] = "JavaLexerImp.not_slash ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2195] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2195] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2195] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2195] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2195] = true;
		popD[ART_L_JavaLexerImp_not_slash_2195] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2197] = "JavaLexerImp.not_slash ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2197] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2197] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2197] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2197] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2198] = "JavaLexerImp.not_slash ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2198] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2198] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2198] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2199] = "JavaLexerImp.not_slash ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2199] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2199] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2199] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2199] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2199] = true;
		popD[ART_L_JavaLexerImp_not_slash_2199] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2201] = "JavaLexerImp.not_slash ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2201] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2201] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2201] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2201] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2202] = "JavaLexerImp.not_slash ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2202] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2202] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2202] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2203] = "JavaLexerImp.not_slash ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2203] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2203] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2203] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2203] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2203] = true;
		popD[ART_L_JavaLexerImp_not_slash_2203] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2205] = "JavaLexerImp.not_slash ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2205] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2205] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2205] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2205] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2206] = "JavaLexerImp.not_slash ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2206] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2206] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2206] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2207] = "JavaLexerImp.not_slash ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2207] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2207] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2207] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2207] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2207] = true;
		popD[ART_L_JavaLexerImp_not_slash_2207] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2209] = "JavaLexerImp.not_slash ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2209] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2209] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2209] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2209] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2210] = "JavaLexerImp.not_slash ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2210] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2210] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2210] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2211] = "JavaLexerImp.not_slash ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2211] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2211] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2211] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2211] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2211] = true;
		popD[ART_L_JavaLexerImp_not_slash_2211] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2213] = "JavaLexerImp.not_slash ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2213] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2213] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2213] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2213] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2214] = "JavaLexerImp.not_slash ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2214] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2214] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2214] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2215] = "JavaLexerImp.not_slash ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2215] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2215] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2215] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2215] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2215] = true;
		popD[ART_L_JavaLexerImp_not_slash_2215] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2217] = "JavaLexerImp.not_slash ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2217] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2217] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2217] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2217] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2218] = "JavaLexerImp.not_slash ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2218] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2218] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2218] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2219] = "JavaLexerImp.not_slash ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2219] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2219] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2219] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2219] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2219] = true;
		popD[ART_L_JavaLexerImp_not_slash_2219] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2221] = "JavaLexerImp.not_slash ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2221] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2221] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2221] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2221] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2222] = "JavaLexerImp.not_slash ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2222] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2222] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2222] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2223] = "JavaLexerImp.not_slash ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2223] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2223] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2223] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2223] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2223] = true;
		popD[ART_L_JavaLexerImp_not_slash_2223] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2225] = "JavaLexerImp.not_slash ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2225] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2225] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2225] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2225] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2226] = "JavaLexerImp.not_slash ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2226] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2226] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2226] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2227] = "JavaLexerImp.not_slash ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2227] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2227] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2227] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2227] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2227] = true;
		popD[ART_L_JavaLexerImp_not_slash_2227] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2229] = "JavaLexerImp.not_slash ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2229] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2229] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2229] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2229] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2230] = "JavaLexerImp.not_slash ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2230] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2230] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2230] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2231] = "JavaLexerImp.not_slash ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2231] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2231] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2231] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2231] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2231] = true;
		popD[ART_L_JavaLexerImp_not_slash_2231] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2233] = "JavaLexerImp.not_slash ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2233] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2233] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2233] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2233] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2234] = "JavaLexerImp.not_slash ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2234] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2234] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2234] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2235] = "JavaLexerImp.not_slash ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2235] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2235] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2235] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2235] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2235] = true;
		popD[ART_L_JavaLexerImp_not_slash_2235] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2237] = "JavaLexerImp.not_slash ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2237] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2237] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2237] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2237] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2238] = "JavaLexerImp.not_slash ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2238] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2238] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2238] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2239] = "JavaLexerImp.not_slash ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2239] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2239] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2239] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2239] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2239] = true;
		popD[ART_L_JavaLexerImp_not_slash_2239] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2241] = "JavaLexerImp.not_slash ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2241] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2241] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2241] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2241] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2242] = "JavaLexerImp.not_slash ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2242] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2242] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2242] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2243] = "JavaLexerImp.not_slash ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2243] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2243] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2243] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2243] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2243] = true;
		popD[ART_L_JavaLexerImp_not_slash_2243] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2245] = "JavaLexerImp.not_slash ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2245] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2245] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2245] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2245] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2246] = "JavaLexerImp.not_slash ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2246] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2246] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2246] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2247] = "JavaLexerImp.not_slash ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2247] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2247] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2247] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2247] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2247] = true;
		popD[ART_L_JavaLexerImp_not_slash_2247] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2249] = "JavaLexerImp.not_slash ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2249] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2249] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2249] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2249] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2250] = "JavaLexerImp.not_slash ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2250] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2250] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2250] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2251] = "JavaLexerImp.not_slash ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2251] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2251] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2251] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2251] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2251] = true;
		popD[ART_L_JavaLexerImp_not_slash_2251] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2253] = "JavaLexerImp.not_slash ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2253] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2253] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2253] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2253] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2254] = "JavaLexerImp.not_slash ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2254] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2254] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2254] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2255] = "JavaLexerImp.not_slash ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2255] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2255] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2255] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2255] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2255] = true;
		popD[ART_L_JavaLexerImp_not_slash_2255] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2257] = "JavaLexerImp.not_slash ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2257] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2257] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2257] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2257] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2258] = "JavaLexerImp.not_slash ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2258] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2258] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2258] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2259] = "JavaLexerImp.not_slash ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2259] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2259] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2259] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2259] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2259] = true;
		popD[ART_L_JavaLexerImp_not_slash_2259] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2261] = "JavaLexerImp.not_slash ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2261] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2261] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2261] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2261] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2262] = "JavaLexerImp.not_slash ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2262] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2262] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2262] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2263] = "JavaLexerImp.not_slash ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2263] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2263] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2263] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2263] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2263] = true;
		popD[ART_L_JavaLexerImp_not_slash_2263] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2265] = "JavaLexerImp.not_slash ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2265] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2265] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2265] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2265] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2266] = "JavaLexerImp.not_slash ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2266] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2266] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2266] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2267] = "JavaLexerImp.not_slash ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2267] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2267] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2267] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2267] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2267] = true;
		popD[ART_L_JavaLexerImp_not_slash_2267] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2269] = "JavaLexerImp.not_slash ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2269] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2269] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2269] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2269] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2270] = "JavaLexerImp.not_slash ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2270] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2270] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2270] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2271] = "JavaLexerImp.not_slash ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2271] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2271] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2271] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2271] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2271] = true;
		popD[ART_L_JavaLexerImp_not_slash_2271] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2273] = "JavaLexerImp.not_slash ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2273] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2273] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2273] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2273] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2274] = "JavaLexerImp.not_slash ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2274] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2274] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2274] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2275] = "JavaLexerImp.not_slash ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2275] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2275] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2275] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2275] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2275] = true;
		popD[ART_L_JavaLexerImp_not_slash_2275] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2277] = "JavaLexerImp.not_slash ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2277] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2277] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2277] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2277] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2278] = "JavaLexerImp.not_slash ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2278] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2278] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2278] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2279] = "JavaLexerImp.not_slash ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2279] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2279] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2279] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2279] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2279] = true;
		popD[ART_L_JavaLexerImp_not_slash_2279] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2281] = "JavaLexerImp.not_slash ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2281] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2281] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2281] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_not_slash_2281] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2282] = "JavaLexerImp.not_slash ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2282] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2282] = ART_L_JavaLexerImp_not_slash;
		popD[ART_L_JavaLexerImp_not_slash_2282] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_not_slash_2283] = "JavaLexerImp.not_slash ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_not_slash_2283] = "";
		lhsL[ART_L_JavaLexerImp_not_slash_2283] = ART_L_JavaLexerImp_not_slash;
		artKindOfs[ART_L_JavaLexerImp_not_slash_2283] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_not_slash_2283] = true;
		eoR_pL[ART_L_JavaLexerImp_not_slash_2283] = true;
		popD[ART_L_JavaLexerImp_not_slash_2283] = true;
	}

	public void artTableInitialiser_173() {
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit] = "JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit] = "octal_digit";
		artKindOfs[ART_L_JavaLexerImp_octal_digit] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3120] = "JavaLexerImp.octal_digit ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3120] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3120] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3120] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3120] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3121] = "JavaLexerImp.octal_digit ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3121] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3121] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3121] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3122] = "JavaLexerImp.octal_digit ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3122] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3122] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3122] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3122] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3122] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3122] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3124] = "JavaLexerImp.octal_digit ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3124] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3124] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3124] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3124] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3125] = "JavaLexerImp.octal_digit ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3125] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3125] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3125] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3126] = "JavaLexerImp.octal_digit ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3126] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3126] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3126] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3126] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3126] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3126] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3128] = "JavaLexerImp.octal_digit ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3128] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3128] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3128] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3128] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3129] = "JavaLexerImp.octal_digit ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3129] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3129] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3129] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3130] = "JavaLexerImp.octal_digit ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3130] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3130] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3130] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3130] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3130] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3130] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3132] = "JavaLexerImp.octal_digit ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3132] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3132] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3132] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3132] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3133] = "JavaLexerImp.octal_digit ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3133] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3133] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3133] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3134] = "JavaLexerImp.octal_digit ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3134] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3134] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3134] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3134] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3134] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3134] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3136] = "JavaLexerImp.octal_digit ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3136] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3136] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3136] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3136] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3137] = "JavaLexerImp.octal_digit ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3137] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3137] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3137] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3138] = "JavaLexerImp.octal_digit ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3138] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3138] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3138] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3138] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3138] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3138] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3140] = "JavaLexerImp.octal_digit ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3140] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3140] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3140] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3140] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3141] = "JavaLexerImp.octal_digit ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3141] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3141] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3141] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3142] = "JavaLexerImp.octal_digit ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3142] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3142] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3142] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3142] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3142] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3142] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3144] = "JavaLexerImp.octal_digit ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3144] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3144] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3144] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3144] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3145] = "JavaLexerImp.octal_digit ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3145] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3145] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3145] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3146] = "JavaLexerImp.octal_digit ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3146] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3146] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3146] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3146] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3146] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3146] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3148] = "JavaLexerImp.octal_digit ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3148] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3148] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3148] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_3148] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3149] = "JavaLexerImp.octal_digit ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3149] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3149] = ART_L_JavaLexerImp_octal_digit;
		popD[ART_L_JavaLexerImp_octal_digit_3149] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_3150] = "JavaLexerImp.octal_digit ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_3150] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_3150] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_3150] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_3150] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_3150] = true;
		popD[ART_L_JavaLexerImp_octal_digit_3150] = true;
	}

	public void artTableInitialiser_174() {
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore] = "JavaLexerImp.octal_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore] = "octal_digit_or_underscore";
		artKindOfs[ART_L_JavaLexerImp_octal_digit_or_underscore] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3164] = "JavaLexerImp.octal_digit_or_underscore ::= . JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3164] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_or_underscore_3164] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_or_underscore_3164] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = "JavaLexerImp.octal_digit_or_underscore ::= JavaLexerImp.octal_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = true;
		popD[ART_L_JavaLexerImp_octal_digit_or_underscore_3166] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3168] = "JavaLexerImp.octal_digit_or_underscore ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3168] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_or_underscore_3168] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_or_underscore_3168] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_octal_digit_or_underscore_3168] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3169] = "JavaLexerImp.octal_digit_or_underscore ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3169] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_or_underscore_3169] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		popD[ART_L_JavaLexerImp_octal_digit_or_underscore_3169] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = "JavaLexerImp.octal_digit_or_underscore ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = "";
		lhsL[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = true;
		popD[ART_L_JavaLexerImp_octal_digit_or_underscore_3170] = true;
	}

	public void artTableInitialiser_175() {
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits] = "JavaLexerImp.octal_digits ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits] = "octal_digits";
		artKindOfs[ART_L_JavaLexerImp_octal_digits] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3103] = "JavaLexerImp.octal_digits ::= . JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3103] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3103] = ART_L_JavaLexerImp_octal_digits;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3103] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3105] = "JavaLexerImp.octal_digits ::= JavaLexerImp.octal_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3105] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3105] = ART_L_JavaLexerImp_octal_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_3105] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3105] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digits_3105] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digits_3105] = true;
		popD[ART_L_JavaLexerImp_octal_digits_3105] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3107] = "JavaLexerImp.octal_digits ::= . JavaLexerImp.octal_digit ( JavaLexerImp.octal_digits_and_underscores )? JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3107] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3107] = ART_L_JavaLexerImp_octal_digits;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3107] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3109] = "JavaLexerImp.octal_digits ::= JavaLexerImp.octal_digit . ( JavaLexerImp.octal_digits_and_underscores )? JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3109] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3109] = ART_L_JavaLexerImp_octal_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_3109] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3109] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_octal_digits_3109] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3114] = "JavaLexerImp.octal_digits ::= JavaLexerImp.octal_digit ( JavaLexerImp.octal_digits_and_underscores . )? JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3114] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3114] = ART_L_JavaLexerImp_octal_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_3114] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3114] = ART_K_INTERMEDIATE;
		pL[ART_L_JavaLexerImp_octal_digits_3114] = ART_L_JavaLexerImp_octal_digits_3115;
		eoOPL[ART_L_JavaLexerImp_octal_digits_3114] = true;
		popD[ART_L_JavaLexerImp_octal_digits_3114] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3115] = "JavaLexerImp.octal_digits ::= JavaLexerImp.octal_digit ( JavaLexerImp.octal_digits_and_underscores )? . JavaLexerImp.octal_digit ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3115] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3115] = ART_L_JavaLexerImp_octal_digits;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3115] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_3117] = "JavaLexerImp.octal_digits ::= JavaLexerImp.octal_digit ( JavaLexerImp.octal_digits_and_underscores )? JavaLexerImp.octal_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_3117] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_3117] = ART_L_JavaLexerImp_octal_digits;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_3117] = ART_L_JavaLexerImp_octal_digit;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_3117] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digits_3117] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digits_3117] = true;
		popD[ART_L_JavaLexerImp_octal_digits_3117] = true;
	}

	public void artTableInitialiser_176() {
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores] = "JavaLexerImp.octal_digits_and_underscores ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores] = "octal_digits_and_underscores";
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3153] = "JavaLexerImp.octal_digits_and_underscores ::= . JavaLexerImp.octal_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3153] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_and_underscores_3153] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3153] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = "JavaLexerImp.octal_digits_and_underscores ::= JavaLexerImp.octal_digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = true;
		popD[ART_L_JavaLexerImp_octal_digits_and_underscores_3155] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3157] = "JavaLexerImp.octal_digits_and_underscores ::= . JavaLexerImp.octal_digits_and_underscores JavaLexerImp.octal_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3157] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_and_underscores_3157] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3157] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = "JavaLexerImp.octal_digits_and_underscores ::= JavaLexerImp.octal_digits_and_underscores . JavaLexerImp.octal_digit_or_underscore ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_octal_digits_and_underscores_3159] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = "JavaLexerImp.octal_digits_and_underscores ::= JavaLexerImp.octal_digits_and_underscores JavaLexerImp.octal_digit_or_underscore . ";
		artLabelStrings[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = "";
		lhsL[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = ART_L_JavaLexerImp_octal_digits_and_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = ART_L_JavaLexerImp_octal_digit_or_underscore;
		artKindOfs[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = true;
		eoR_pL[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = true;
		popD[ART_L_JavaLexerImp_octal_digits_and_underscores_3161] = true;
	}

	public void artTableInitialiser_177() {
		artLabelInternalStrings[ART_L_JavaLexerImp_package] = "JavaLexerImp.package ";
		artLabelStrings[ART_L_JavaLexerImp_package] = "package";
		artKindOfs[ART_L_JavaLexerImp_package] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_684] = "JavaLexerImp.package ::= . `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_684] = "";
		lhsL[ART_L_JavaLexerImp_package_684] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_684] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_684] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_685] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_685] = "";
		lhsL[ART_L_JavaLexerImp_package_685] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_685] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_686] = "JavaLexerImp.package ::= `p. `a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_686] = "";
		lhsL[ART_L_JavaLexerImp_package_686] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_686] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_package_686] = true;
		popD[ART_L_JavaLexerImp_package_686] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_687] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_687] = "";
		lhsL[ART_L_JavaLexerImp_package_687] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_687] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_688] = "JavaLexerImp.package ::= `p`a. `c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_688] = "";
		lhsL[ART_L_JavaLexerImp_package_688] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_688] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_688] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_689] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_689] = "";
		lhsL[ART_L_JavaLexerImp_package_689] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_689] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_690] = "JavaLexerImp.package ::= `p`a`c. `k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_690] = "";
		lhsL[ART_L_JavaLexerImp_package_690] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_690] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_690] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_691] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_691] = "";
		lhsL[ART_L_JavaLexerImp_package_691] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_691] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_692] = "JavaLexerImp.package ::= `p`a`c`k. `a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_692] = "";
		lhsL[ART_L_JavaLexerImp_package_692] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_692] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_692] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_693] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_693] = "";
		lhsL[ART_L_JavaLexerImp_package_693] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_693] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_694] = "JavaLexerImp.package ::= `p`a`c`k`a. `g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_694] = "";
		lhsL[ART_L_JavaLexerImp_package_694] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_694] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_694] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_695] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_695] = "";
		lhsL[ART_L_JavaLexerImp_package_695] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_695] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_696] = "JavaLexerImp.package ::= `p`a`c`k`a`g. `e";
		artLabelStrings[ART_L_JavaLexerImp_package_696] = "";
		lhsL[ART_L_JavaLexerImp_package_696] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_696] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_package_696] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_697] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e";
		artLabelStrings[ART_L_JavaLexerImp_package_697] = "";
		lhsL[ART_L_JavaLexerImp_package_697] = ART_L_JavaLexerImp_package;
		popD[ART_L_JavaLexerImp_package_697] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_package_698] = "JavaLexerImp.package ::= `p`a`c`k`a`g`e. ";
		artLabelStrings[ART_L_JavaLexerImp_package_698] = "";
		lhsL[ART_L_JavaLexerImp_package_698] = ART_L_JavaLexerImp_package;
		artKindOfs[ART_L_JavaLexerImp_package_698] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_package_698] = true;
		eoR_pL[ART_L_JavaLexerImp_package_698] = true;
		popD[ART_L_JavaLexerImp_package_698] = true;
	}

	public void artTableInitialiser_178() {
		artLabelInternalStrings[ART_L_JavaLexerImp_private] = "JavaLexerImp.private ";
		artLabelStrings[ART_L_JavaLexerImp_private] = "private";
		artKindOfs[ART_L_JavaLexerImp_private] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_701] = "JavaLexerImp.private ::= . `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_701] = "";
		lhsL[ART_L_JavaLexerImp_private_701] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_701] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_701] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_702] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_702] = "";
		lhsL[ART_L_JavaLexerImp_private_702] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_702] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_703] = "JavaLexerImp.private ::= `p. `r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_703] = "";
		lhsL[ART_L_JavaLexerImp_private_703] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_703] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_private_703] = true;
		popD[ART_L_JavaLexerImp_private_703] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_704] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_704] = "";
		lhsL[ART_L_JavaLexerImp_private_704] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_704] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_705] = "JavaLexerImp.private ::= `p`r. `i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_705] = "";
		lhsL[ART_L_JavaLexerImp_private_705] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_705] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_705] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_706] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_706] = "";
		lhsL[ART_L_JavaLexerImp_private_706] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_706] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_707] = "JavaLexerImp.private ::= `p`r`i. `v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_707] = "";
		lhsL[ART_L_JavaLexerImp_private_707] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_707] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_707] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_708] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_708] = "";
		lhsL[ART_L_JavaLexerImp_private_708] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_708] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_709] = "JavaLexerImp.private ::= `p`r`i`v. `a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_709] = "";
		lhsL[ART_L_JavaLexerImp_private_709] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_709] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_709] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_710] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_710] = "";
		lhsL[ART_L_JavaLexerImp_private_710] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_710] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_711] = "JavaLexerImp.private ::= `p`r`i`v`a. `t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_711] = "";
		lhsL[ART_L_JavaLexerImp_private_711] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_711] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_711] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_712] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_712] = "";
		lhsL[ART_L_JavaLexerImp_private_712] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_712] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_713] = "JavaLexerImp.private ::= `p`r`i`v`a`t. `e";
		artLabelStrings[ART_L_JavaLexerImp_private_713] = "";
		lhsL[ART_L_JavaLexerImp_private_713] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_713] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_private_713] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_714] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e";
		artLabelStrings[ART_L_JavaLexerImp_private_714] = "";
		lhsL[ART_L_JavaLexerImp_private_714] = ART_L_JavaLexerImp_private;
		popD[ART_L_JavaLexerImp_private_714] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_private_715] = "JavaLexerImp.private ::= `p`r`i`v`a`t`e. ";
		artLabelStrings[ART_L_JavaLexerImp_private_715] = "";
		lhsL[ART_L_JavaLexerImp_private_715] = ART_L_JavaLexerImp_private;
		artKindOfs[ART_L_JavaLexerImp_private_715] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_private_715] = true;
		eoR_pL[ART_L_JavaLexerImp_private_715] = true;
		popD[ART_L_JavaLexerImp_private_715] = true;
	}

	public void artTableInitialiser_179() {
		artLabelInternalStrings[ART_L_JavaLexerImp_protected] = "JavaLexerImp.protected ";
		artLabelStrings[ART_L_JavaLexerImp_protected] = "protected";
		artKindOfs[ART_L_JavaLexerImp_protected] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_718] = "JavaLexerImp.protected ::= . `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_718] = "";
		lhsL[ART_L_JavaLexerImp_protected_718] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_718] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_718] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_719] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_719] = "";
		lhsL[ART_L_JavaLexerImp_protected_719] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_719] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_720] = "JavaLexerImp.protected ::= `p. `r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_720] = "";
		lhsL[ART_L_JavaLexerImp_protected_720] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_720] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_protected_720] = true;
		popD[ART_L_JavaLexerImp_protected_720] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_721] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_721] = "";
		lhsL[ART_L_JavaLexerImp_protected_721] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_721] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_722] = "JavaLexerImp.protected ::= `p`r. `o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_722] = "";
		lhsL[ART_L_JavaLexerImp_protected_722] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_722] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_722] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_723] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_723] = "";
		lhsL[ART_L_JavaLexerImp_protected_723] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_723] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_724] = "JavaLexerImp.protected ::= `p`r`o. `t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_724] = "";
		lhsL[ART_L_JavaLexerImp_protected_724] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_724] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_724] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_725] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_725] = "";
		lhsL[ART_L_JavaLexerImp_protected_725] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_725] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_726] = "JavaLexerImp.protected ::= `p`r`o`t. `e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_726] = "";
		lhsL[ART_L_JavaLexerImp_protected_726] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_726] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_726] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_727] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_727] = "";
		lhsL[ART_L_JavaLexerImp_protected_727] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_727] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_728] = "JavaLexerImp.protected ::= `p`r`o`t`e. `c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_728] = "";
		lhsL[ART_L_JavaLexerImp_protected_728] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_728] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_728] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_729] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_729] = "";
		lhsL[ART_L_JavaLexerImp_protected_729] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_729] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_730] = "JavaLexerImp.protected ::= `p`r`o`t`e`c. `t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_730] = "";
		lhsL[ART_L_JavaLexerImp_protected_730] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_730] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_730] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_731] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_731] = "";
		lhsL[ART_L_JavaLexerImp_protected_731] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_731] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_732] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t. `e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_732] = "";
		lhsL[ART_L_JavaLexerImp_protected_732] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_732] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_732] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_733] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_733] = "";
		lhsL[ART_L_JavaLexerImp_protected_733] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_733] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_734] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e. `d";
		artLabelStrings[ART_L_JavaLexerImp_protected_734] = "";
		lhsL[ART_L_JavaLexerImp_protected_734] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_734] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_protected_734] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_735] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d";
		artLabelStrings[ART_L_JavaLexerImp_protected_735] = "";
		lhsL[ART_L_JavaLexerImp_protected_735] = ART_L_JavaLexerImp_protected;
		popD[ART_L_JavaLexerImp_protected_735] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_protected_736] = "JavaLexerImp.protected ::= `p`r`o`t`e`c`t`e`d. ";
		artLabelStrings[ART_L_JavaLexerImp_protected_736] = "";
		lhsL[ART_L_JavaLexerImp_protected_736] = ART_L_JavaLexerImp_protected;
		artKindOfs[ART_L_JavaLexerImp_protected_736] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_protected_736] = true;
		eoR_pL[ART_L_JavaLexerImp_protected_736] = true;
		popD[ART_L_JavaLexerImp_protected_736] = true;
	}

	public void artTableInitialiser_180() {
		artLabelInternalStrings[ART_L_JavaLexerImp_public] = "JavaLexerImp.public ";
		artLabelStrings[ART_L_JavaLexerImp_public] = "public";
		artKindOfs[ART_L_JavaLexerImp_public] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_739] = "JavaLexerImp.public ::= . `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_739] = "";
		lhsL[ART_L_JavaLexerImp_public_739] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_739] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_public_739] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_740] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_740] = "";
		lhsL[ART_L_JavaLexerImp_public_740] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_740] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_741] = "JavaLexerImp.public ::= `p. `u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_741] = "";
		lhsL[ART_L_JavaLexerImp_public_741] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_741] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_public_741] = true;
		popD[ART_L_JavaLexerImp_public_741] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_742] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_742] = "";
		lhsL[ART_L_JavaLexerImp_public_742] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_742] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_743] = "JavaLexerImp.public ::= `p`u. `b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_743] = "";
		lhsL[ART_L_JavaLexerImp_public_743] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_743] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_public_743] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_744] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_744] = "";
		lhsL[ART_L_JavaLexerImp_public_744] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_744] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_745] = "JavaLexerImp.public ::= `p`u`b. `l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_745] = "";
		lhsL[ART_L_JavaLexerImp_public_745] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_745] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_public_745] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_746] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_746] = "";
		lhsL[ART_L_JavaLexerImp_public_746] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_746] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_747] = "JavaLexerImp.public ::= `p`u`b`l. `i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_747] = "";
		lhsL[ART_L_JavaLexerImp_public_747] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_747] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_public_747] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_748] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_748] = "";
		lhsL[ART_L_JavaLexerImp_public_748] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_748] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_749] = "JavaLexerImp.public ::= `p`u`b`l`i. `c";
		artLabelStrings[ART_L_JavaLexerImp_public_749] = "";
		lhsL[ART_L_JavaLexerImp_public_749] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_749] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_public_749] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_750] = "JavaLexerImp.public ::= `p`u`b`l`i`c";
		artLabelStrings[ART_L_JavaLexerImp_public_750] = "";
		lhsL[ART_L_JavaLexerImp_public_750] = ART_L_JavaLexerImp_public;
		popD[ART_L_JavaLexerImp_public_750] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_public_751] = "JavaLexerImp.public ::= `p`u`b`l`i`c. ";
		artLabelStrings[ART_L_JavaLexerImp_public_751] = "";
		lhsL[ART_L_JavaLexerImp_public_751] = ART_L_JavaLexerImp_public;
		artKindOfs[ART_L_JavaLexerImp_public_751] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_public_751] = true;
		eoR_pL[ART_L_JavaLexerImp_public_751] = true;
		popD[ART_L_JavaLexerImp_public_751] = true;
	}

	public void artTableInitialiser_181() {
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character] = "JavaLexerImp.regular_string_literal_character ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character] = "regular_string_literal_character";
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3984] = "JavaLexerImp.regular_string_literal_character ::= . JavaLexerImp.single_regular_string_literal_character ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3984] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3984] = ART_L_JavaLexerImp_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3984] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3986] = "JavaLexerImp.regular_string_literal_character ::= JavaLexerImp.single_regular_string_literal_character . ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3986] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3986] = ART_L_JavaLexerImp_regular_string_literal_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_regular_string_literal_character_3986] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3986] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_regular_string_literal_character_3986] = true;
		eoR_pL[ART_L_JavaLexerImp_regular_string_literal_character_3986] = true;
		popD[ART_L_JavaLexerImp_regular_string_literal_character_3986] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3988] = "JavaLexerImp.regular_string_literal_character ::= . JavaLexerImp.simple_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3988] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3988] = ART_L_JavaLexerImp_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3988] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3990] = "JavaLexerImp.regular_string_literal_character ::= JavaLexerImp.simple_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3990] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3990] = ART_L_JavaLexerImp_regular_string_literal_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_regular_string_literal_character_3990] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3990] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_regular_string_literal_character_3990] = true;
		eoR_pL[ART_L_JavaLexerImp_regular_string_literal_character_3990] = true;
		popD[ART_L_JavaLexerImp_regular_string_literal_character_3990] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3992] = "JavaLexerImp.regular_string_literal_character ::= . JavaLexerImp.hexadecimal_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3992] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3992] = ART_L_JavaLexerImp_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3992] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3994] = "JavaLexerImp.regular_string_literal_character ::= JavaLexerImp.hexadecimal_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3994] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3994] = ART_L_JavaLexerImp_regular_string_literal_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_regular_string_literal_character_3994] = ART_L_JavaLexerImp_hexadecimal_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3994] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_regular_string_literal_character_3994] = true;
		eoR_pL[ART_L_JavaLexerImp_regular_string_literal_character_3994] = true;
		popD[ART_L_JavaLexerImp_regular_string_literal_character_3994] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3996] = "JavaLexerImp.regular_string_literal_character ::= . JavaLexerImp.unicode_character_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3996] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3996] = ART_L_JavaLexerImp_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3996] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_regular_string_literal_character_3998] = "JavaLexerImp.regular_string_literal_character ::= JavaLexerImp.unicode_character_escape_sequence . ";
		artLabelStrings[ART_L_JavaLexerImp_regular_string_literal_character_3998] = "";
		lhsL[ART_L_JavaLexerImp_regular_string_literal_character_3998] = ART_L_JavaLexerImp_regular_string_literal_character;
		artSlotInstanceOfs[ART_L_JavaLexerImp_regular_string_literal_character_3998] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_regular_string_literal_character_3998] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_regular_string_literal_character_3998] = true;
		eoR_pL[ART_L_JavaLexerImp_regular_string_literal_character_3998] = true;
		popD[ART_L_JavaLexerImp_regular_string_literal_character_3998] = true;
	}

	public void artTableInitialiser_182() {
		artLabelInternalStrings[ART_L_JavaLexerImp_return] = "JavaLexerImp.return ";
		artLabelStrings[ART_L_JavaLexerImp_return] = "return";
		artKindOfs[ART_L_JavaLexerImp_return] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_754] = "JavaLexerImp.return ::= . `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_754] = "";
		lhsL[ART_L_JavaLexerImp_return_754] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_754] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_return_754] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_755] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_755] = "";
		lhsL[ART_L_JavaLexerImp_return_755] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_755] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_756] = "JavaLexerImp.return ::= `r. `e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_756] = "";
		lhsL[ART_L_JavaLexerImp_return_756] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_756] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_return_756] = true;
		popD[ART_L_JavaLexerImp_return_756] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_757] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_757] = "";
		lhsL[ART_L_JavaLexerImp_return_757] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_757] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_758] = "JavaLexerImp.return ::= `r`e. `t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_758] = "";
		lhsL[ART_L_JavaLexerImp_return_758] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_758] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_return_758] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_759] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_759] = "";
		lhsL[ART_L_JavaLexerImp_return_759] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_759] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_760] = "JavaLexerImp.return ::= `r`e`t. `u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_760] = "";
		lhsL[ART_L_JavaLexerImp_return_760] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_760] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_return_760] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_761] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_761] = "";
		lhsL[ART_L_JavaLexerImp_return_761] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_761] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_762] = "JavaLexerImp.return ::= `r`e`t`u. `r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_762] = "";
		lhsL[ART_L_JavaLexerImp_return_762] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_762] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_return_762] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_763] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_763] = "";
		lhsL[ART_L_JavaLexerImp_return_763] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_763] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_764] = "JavaLexerImp.return ::= `r`e`t`u`r. `n";
		artLabelStrings[ART_L_JavaLexerImp_return_764] = "";
		lhsL[ART_L_JavaLexerImp_return_764] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_764] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_return_764] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_765] = "JavaLexerImp.return ::= `r`e`t`u`r`n";
		artLabelStrings[ART_L_JavaLexerImp_return_765] = "";
		lhsL[ART_L_JavaLexerImp_return_765] = ART_L_JavaLexerImp_return;
		popD[ART_L_JavaLexerImp_return_765] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_return_766] = "JavaLexerImp.return ::= `r`e`t`u`r`n. ";
		artLabelStrings[ART_L_JavaLexerImp_return_766] = "";
		lhsL[ART_L_JavaLexerImp_return_766] = ART_L_JavaLexerImp_return;
		artKindOfs[ART_L_JavaLexerImp_return_766] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_return_766] = true;
		eoR_pL[ART_L_JavaLexerImp_return_766] = true;
		popD[ART_L_JavaLexerImp_return_766] = true;
	}

	public void artTableInitialiser_183() {
		artLabelInternalStrings[ART_L_JavaLexerImp_short] = "JavaLexerImp.short ";
		artLabelStrings[ART_L_JavaLexerImp_short] = "short";
		artKindOfs[ART_L_JavaLexerImp_short] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_769] = "JavaLexerImp.short ::= . `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_769] = "";
		lhsL[ART_L_JavaLexerImp_short_769] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_769] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_short_769] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_770] = "JavaLexerImp.short ::= `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_770] = "";
		lhsL[ART_L_JavaLexerImp_short_770] = ART_L_JavaLexerImp_short;
		popD[ART_L_JavaLexerImp_short_770] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_771] = "JavaLexerImp.short ::= `s. `h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_771] = "";
		lhsL[ART_L_JavaLexerImp_short_771] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_771] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_short_771] = true;
		popD[ART_L_JavaLexerImp_short_771] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_772] = "JavaLexerImp.short ::= `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_772] = "";
		lhsL[ART_L_JavaLexerImp_short_772] = ART_L_JavaLexerImp_short;
		popD[ART_L_JavaLexerImp_short_772] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_773] = "JavaLexerImp.short ::= `s`h. `o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_773] = "";
		lhsL[ART_L_JavaLexerImp_short_773] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_773] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_short_773] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_774] = "JavaLexerImp.short ::= `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_774] = "";
		lhsL[ART_L_JavaLexerImp_short_774] = ART_L_JavaLexerImp_short;
		popD[ART_L_JavaLexerImp_short_774] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_775] = "JavaLexerImp.short ::= `s`h`o. `r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_775] = "";
		lhsL[ART_L_JavaLexerImp_short_775] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_775] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_short_775] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_776] = "JavaLexerImp.short ::= `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_776] = "";
		lhsL[ART_L_JavaLexerImp_short_776] = ART_L_JavaLexerImp_short;
		popD[ART_L_JavaLexerImp_short_776] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_777] = "JavaLexerImp.short ::= `s`h`o`r. `t";
		artLabelStrings[ART_L_JavaLexerImp_short_777] = "";
		lhsL[ART_L_JavaLexerImp_short_777] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_777] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_short_777] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_778] = "JavaLexerImp.short ::= `s`h`o`r`t";
		artLabelStrings[ART_L_JavaLexerImp_short_778] = "";
		lhsL[ART_L_JavaLexerImp_short_778] = ART_L_JavaLexerImp_short;
		popD[ART_L_JavaLexerImp_short_778] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_short_779] = "JavaLexerImp.short ::= `s`h`o`r`t. ";
		artLabelStrings[ART_L_JavaLexerImp_short_779] = "";
		lhsL[ART_L_JavaLexerImp_short_779] = ART_L_JavaLexerImp_short;
		artKindOfs[ART_L_JavaLexerImp_short_779] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_short_779] = true;
		eoR_pL[ART_L_JavaLexerImp_short_779] = true;
		popD[ART_L_JavaLexerImp_short_779] = true;
	}

	public void artTableInitialiser_184() {
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence] = "JavaLexerImp.simple_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence] = "simple_escape_sequence";
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3877] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3877] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3877] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3877] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3877] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3878] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3878] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3878] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3878] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3879] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3879] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3879] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3879] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3879] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3879] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3880] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3880] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3880] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3880] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3881] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3881] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3881] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3881] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3881] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3881] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3881] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3883] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`\\\"";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3883] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3883] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3883] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3883] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3884] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\"";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3884] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3884] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3884] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3885] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3885] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3885] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3885] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3885] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3885] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3886] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\"";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3886] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3886] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3886] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3887] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3887] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3887] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3887] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3887] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3887] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3887] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3889] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3889] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3889] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3889] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3889] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3890] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3890] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3890] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3890] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3891] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3891] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3891] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3891] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3891] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3891] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3892] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3892] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3892] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3892] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3893] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`\\\\\\\\. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3893] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3893] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3893] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3893] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3893] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3893] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3895] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`0";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3895] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3895] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3895] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3895] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3896] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`0";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3896] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3896] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3896] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3897] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `0";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3897] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3897] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3897] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3897] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3897] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3898] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`0";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3898] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3898] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3898] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3899] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`0. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3899] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3899] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3899] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3899] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3899] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3899] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3901] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`a";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3901] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3901] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3901] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3901] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3902] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`a";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3902] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3902] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3902] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3903] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `a";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3903] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3903] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3903] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3903] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3903] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3904] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`a";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3904] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3904] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3904] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3905] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`a. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3905] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3905] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3905] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3905] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3905] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3905] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3907] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`b";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3907] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3907] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3907] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3907] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3908] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`b";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3908] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3908] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3908] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3909] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `b";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3909] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3909] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3909] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3909] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3909] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3910] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`b";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3910] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3910] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3910] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3911] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`b. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3911] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3911] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3911] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3911] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3911] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3911] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3913] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`f";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3913] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3913] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3913] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3913] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3914] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`f";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3914] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3914] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3914] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3915] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `f";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3915] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3915] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3915] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3915] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3915] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3916] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`f";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3916] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3916] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3916] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3917] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`f. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3917] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3917] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3917] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3917] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3917] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3917] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3919] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`n";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3919] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3919] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3919] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3919] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3920] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`n";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3920] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3920] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3920] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3921] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `n";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3921] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3921] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3921] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3921] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3921] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3922] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`n";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3922] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3922] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3922] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3923] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`n. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3923] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3923] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3923] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3923] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3923] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3923] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3925] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`r";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3925] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3925] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3925] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3925] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3926] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`r";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3926] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3926] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3926] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3927] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `r";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3927] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3927] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3927] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3927] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3927] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3928] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`r";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3928] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3928] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3928] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3929] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`r. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3929] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3929] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3929] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3929] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3929] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3929] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3931] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`t";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3931] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3931] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3931] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3931] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3932] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`t";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3932] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3932] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3932] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3933] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `t";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3933] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3933] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3933] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3933] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3933] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3934] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`t";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3934] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3934] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3934] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3935] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`t. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3935] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3935] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3935] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3935] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3935] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3935] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3937] = "JavaLexerImp.simple_escape_sequence ::= . `\\\\\\\\`v";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3937] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3937] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3937] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3937] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3938] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`v";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3938] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3938] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3938] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3939] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\. `v";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3939] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3939] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3939] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_simple_escape_sequence_3939] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3939] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3940] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`v";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3940] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3940] = ART_L_JavaLexerImp_simple_escape_sequence;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3940] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_simple_escape_sequence_3941] = "JavaLexerImp.simple_escape_sequence ::= `\\\\\\\\`v. ";
		artLabelStrings[ART_L_JavaLexerImp_simple_escape_sequence_3941] = "";
		lhsL[ART_L_JavaLexerImp_simple_escape_sequence_3941] = ART_L_JavaLexerImp_simple_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_simple_escape_sequence_3941] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_simple_escape_sequence_3941] = true;
		eoR_pL[ART_L_JavaLexerImp_simple_escape_sequence_3941] = true;
		popD[ART_L_JavaLexerImp_simple_escape_sequence_3941] = true;
	}

	public void artTableInitialiser_185() {
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character] = "JavaLexerImp.single_character ";
		artLabelStrings[ART_L_JavaLexerImp_single_character] = "single_character";
		artKindOfs[ART_L_JavaLexerImp_single_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3480] = "JavaLexerImp.single_character ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3480] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3480] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3480] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3480] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3481] = "JavaLexerImp.single_character ::= `";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3481] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3481] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3481] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3482] = "JavaLexerImp.single_character ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3482] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3482] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3482] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3482] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3482] = true;
		popD[ART_L_JavaLexerImp_single_character_3482] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3484] = "JavaLexerImp.single_character ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3484] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3484] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3484] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3484] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3485] = "JavaLexerImp.single_character ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3485] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3485] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3485] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3486] = "JavaLexerImp.single_character ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3486] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3486] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3486] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3486] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3486] = true;
		popD[ART_L_JavaLexerImp_single_character_3486] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3488] = "JavaLexerImp.single_character ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3488] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3488] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3488] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3488] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3489] = "JavaLexerImp.single_character ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3489] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3489] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3489] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3490] = "JavaLexerImp.single_character ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3490] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3490] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3490] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3490] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3490] = true;
		popD[ART_L_JavaLexerImp_single_character_3490] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3492] = "JavaLexerImp.single_character ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3492] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3492] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3492] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3492] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3493] = "JavaLexerImp.single_character ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3493] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3493] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3493] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3494] = "JavaLexerImp.single_character ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3494] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3494] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3494] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3494] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3494] = true;
		popD[ART_L_JavaLexerImp_single_character_3494] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3496] = "JavaLexerImp.single_character ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3496] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3496] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3496] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3496] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3497] = "JavaLexerImp.single_character ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3497] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3497] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3497] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3498] = "JavaLexerImp.single_character ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3498] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3498] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3498] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3498] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3498] = true;
		popD[ART_L_JavaLexerImp_single_character_3498] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3500] = "JavaLexerImp.single_character ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3500] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3500] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3500] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3500] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3501] = "JavaLexerImp.single_character ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3501] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3501] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3501] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3502] = "JavaLexerImp.single_character ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3502] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3502] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3502] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3502] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3502] = true;
		popD[ART_L_JavaLexerImp_single_character_3502] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3504] = "JavaLexerImp.single_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3504] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3504] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3504] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3504] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3505] = "JavaLexerImp.single_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3505] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3505] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3505] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3506] = "JavaLexerImp.single_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3506] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3506] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3506] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3506] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3506] = true;
		popD[ART_L_JavaLexerImp_single_character_3506] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3508] = "JavaLexerImp.single_character ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3508] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3508] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3508] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3508] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3509] = "JavaLexerImp.single_character ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3509] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3509] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3509] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3510] = "JavaLexerImp.single_character ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3510] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3510] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3510] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3510] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3510] = true;
		popD[ART_L_JavaLexerImp_single_character_3510] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3512] = "JavaLexerImp.single_character ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3512] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3512] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3512] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3512] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3513] = "JavaLexerImp.single_character ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3513] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3513] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3513] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3514] = "JavaLexerImp.single_character ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3514] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3514] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3514] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3514] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3514] = true;
		popD[ART_L_JavaLexerImp_single_character_3514] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3516] = "JavaLexerImp.single_character ::= . `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3516] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3516] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3516] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3516] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3517] = "JavaLexerImp.single_character ::= `\\\"";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3517] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3517] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3517] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3518] = "JavaLexerImp.single_character ::= `\\\". ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3518] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3518] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3518] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3518] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3518] = true;
		popD[ART_L_JavaLexerImp_single_character_3518] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3520] = "JavaLexerImp.single_character ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3520] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3520] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3520] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3520] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3521] = "JavaLexerImp.single_character ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3521] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3521] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3521] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3522] = "JavaLexerImp.single_character ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3522] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3522] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3522] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3522] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3522] = true;
		popD[ART_L_JavaLexerImp_single_character_3522] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3524] = "JavaLexerImp.single_character ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3524] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3524] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3524] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3524] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3525] = "JavaLexerImp.single_character ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3525] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3525] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3525] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3526] = "JavaLexerImp.single_character ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3526] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3526] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3526] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3526] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3526] = true;
		popD[ART_L_JavaLexerImp_single_character_3526] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3528] = "JavaLexerImp.single_character ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3528] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3528] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3528] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3528] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3529] = "JavaLexerImp.single_character ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3529] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3529] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3529] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3530] = "JavaLexerImp.single_character ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3530] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3530] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3530] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3530] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3530] = true;
		popD[ART_L_JavaLexerImp_single_character_3530] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3532] = "JavaLexerImp.single_character ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3532] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3532] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3532] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3532] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3533] = "JavaLexerImp.single_character ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3533] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3533] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3533] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3534] = "JavaLexerImp.single_character ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3534] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3534] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3534] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3534] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3534] = true;
		popD[ART_L_JavaLexerImp_single_character_3534] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3536] = "JavaLexerImp.single_character ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3536] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3536] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3536] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3536] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3537] = "JavaLexerImp.single_character ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3537] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3537] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3537] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3538] = "JavaLexerImp.single_character ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3538] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3538] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3538] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3538] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3538] = true;
		popD[ART_L_JavaLexerImp_single_character_3538] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3540] = "JavaLexerImp.single_character ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3540] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3540] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3540] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3540] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3541] = "JavaLexerImp.single_character ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3541] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3541] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3541] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3542] = "JavaLexerImp.single_character ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3542] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3542] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3542] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3542] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3542] = true;
		popD[ART_L_JavaLexerImp_single_character_3542] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3544] = "JavaLexerImp.single_character ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3544] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3544] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3544] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3544] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3545] = "JavaLexerImp.single_character ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3545] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3545] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3545] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3546] = "JavaLexerImp.single_character ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3546] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3546] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3546] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3546] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3546] = true;
		popD[ART_L_JavaLexerImp_single_character_3546] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3548] = "JavaLexerImp.single_character ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3548] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3548] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3548] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3548] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3549] = "JavaLexerImp.single_character ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3549] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3549] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3549] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3550] = "JavaLexerImp.single_character ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3550] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3550] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3550] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3550] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3550] = true;
		popD[ART_L_JavaLexerImp_single_character_3550] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3552] = "JavaLexerImp.single_character ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3552] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3552] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3552] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3552] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3553] = "JavaLexerImp.single_character ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3553] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3553] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3553] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3554] = "JavaLexerImp.single_character ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3554] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3554] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3554] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3554] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3554] = true;
		popD[ART_L_JavaLexerImp_single_character_3554] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3556] = "JavaLexerImp.single_character ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3556] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3556] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3556] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3556] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3557] = "JavaLexerImp.single_character ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3557] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3557] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3557] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3558] = "JavaLexerImp.single_character ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3558] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3558] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3558] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3558] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3558] = true;
		popD[ART_L_JavaLexerImp_single_character_3558] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3560] = "JavaLexerImp.single_character ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3560] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3560] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3560] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3560] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3561] = "JavaLexerImp.single_character ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3561] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3561] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3561] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3562] = "JavaLexerImp.single_character ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3562] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3562] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3562] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3562] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3562] = true;
		popD[ART_L_JavaLexerImp_single_character_3562] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3564] = "JavaLexerImp.single_character ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3564] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3564] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3564] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3564] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3565] = "JavaLexerImp.single_character ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3565] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3565] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3565] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3566] = "JavaLexerImp.single_character ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3566] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3566] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3566] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3566] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3566] = true;
		popD[ART_L_JavaLexerImp_single_character_3566] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3568] = "JavaLexerImp.single_character ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3568] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3568] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3568] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3568] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3569] = "JavaLexerImp.single_character ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3569] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3569] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3569] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3570] = "JavaLexerImp.single_character ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3570] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3570] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3570] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3570] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3570] = true;
		popD[ART_L_JavaLexerImp_single_character_3570] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3572] = "JavaLexerImp.single_character ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3572] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3572] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3572] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3572] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3573] = "JavaLexerImp.single_character ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3573] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3573] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3573] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3574] = "JavaLexerImp.single_character ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3574] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3574] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3574] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3574] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3574] = true;
		popD[ART_L_JavaLexerImp_single_character_3574] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3576] = "JavaLexerImp.single_character ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3576] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3576] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3576] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3576] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3577] = "JavaLexerImp.single_character ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3577] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3577] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3577] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3578] = "JavaLexerImp.single_character ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3578] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3578] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3578] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3578] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3578] = true;
		popD[ART_L_JavaLexerImp_single_character_3578] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3580] = "JavaLexerImp.single_character ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3580] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3580] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3580] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3580] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3581] = "JavaLexerImp.single_character ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3581] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3581] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3581] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3582] = "JavaLexerImp.single_character ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3582] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3582] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3582] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3582] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3582] = true;
		popD[ART_L_JavaLexerImp_single_character_3582] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3584] = "JavaLexerImp.single_character ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3584] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3584] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3584] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3584] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3585] = "JavaLexerImp.single_character ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3585] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3585] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3585] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3586] = "JavaLexerImp.single_character ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3586] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3586] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3586] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3586] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3586] = true;
		popD[ART_L_JavaLexerImp_single_character_3586] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3588] = "JavaLexerImp.single_character ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3588] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3588] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3588] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3588] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3589] = "JavaLexerImp.single_character ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3589] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3589] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3589] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3590] = "JavaLexerImp.single_character ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3590] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3590] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3590] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3590] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3590] = true;
		popD[ART_L_JavaLexerImp_single_character_3590] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3592] = "JavaLexerImp.single_character ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3592] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3592] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3592] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3592] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3593] = "JavaLexerImp.single_character ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3593] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3593] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3593] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3594] = "JavaLexerImp.single_character ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3594] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3594] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3594] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3594] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3594] = true;
		popD[ART_L_JavaLexerImp_single_character_3594] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3596] = "JavaLexerImp.single_character ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3596] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3596] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3596] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3596] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3597] = "JavaLexerImp.single_character ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3597] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3597] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3597] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3598] = "JavaLexerImp.single_character ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3598] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3598] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3598] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3598] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3598] = true;
		popD[ART_L_JavaLexerImp_single_character_3598] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3600] = "JavaLexerImp.single_character ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3600] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3600] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3600] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3600] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3601] = "JavaLexerImp.single_character ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3601] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3601] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3601] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3602] = "JavaLexerImp.single_character ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3602] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3602] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3602] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3602] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3602] = true;
		popD[ART_L_JavaLexerImp_single_character_3602] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3604] = "JavaLexerImp.single_character ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3604] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3604] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3604] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3604] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3605] = "JavaLexerImp.single_character ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3605] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3605] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3605] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3606] = "JavaLexerImp.single_character ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3606] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3606] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3606] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3606] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3606] = true;
		popD[ART_L_JavaLexerImp_single_character_3606] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3608] = "JavaLexerImp.single_character ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3608] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3608] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3608] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3608] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3609] = "JavaLexerImp.single_character ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3609] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3609] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3609] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3610] = "JavaLexerImp.single_character ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3610] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3610] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3610] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3610] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3610] = true;
		popD[ART_L_JavaLexerImp_single_character_3610] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3612] = "JavaLexerImp.single_character ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3612] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3612] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3612] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3612] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3613] = "JavaLexerImp.single_character ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3613] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3613] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3613] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3614] = "JavaLexerImp.single_character ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3614] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3614] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3614] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3614] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3614] = true;
		popD[ART_L_JavaLexerImp_single_character_3614] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3616] = "JavaLexerImp.single_character ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3616] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3616] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3616] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3616] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3617] = "JavaLexerImp.single_character ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3617] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3617] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3617] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3618] = "JavaLexerImp.single_character ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3618] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3618] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3618] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3618] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3618] = true;
		popD[ART_L_JavaLexerImp_single_character_3618] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3620] = "JavaLexerImp.single_character ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3620] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3620] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3620] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3620] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3621] = "JavaLexerImp.single_character ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3621] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3621] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3621] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3622] = "JavaLexerImp.single_character ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3622] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3622] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3622] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3622] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3622] = true;
		popD[ART_L_JavaLexerImp_single_character_3622] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3624] = "JavaLexerImp.single_character ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3624] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3624] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3624] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3624] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3625] = "JavaLexerImp.single_character ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3625] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3625] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3625] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3626] = "JavaLexerImp.single_character ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3626] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3626] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3626] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3626] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3626] = true;
		popD[ART_L_JavaLexerImp_single_character_3626] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3628] = "JavaLexerImp.single_character ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3628] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3628] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3628] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3628] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3629] = "JavaLexerImp.single_character ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3629] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3629] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3629] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3630] = "JavaLexerImp.single_character ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3630] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3630] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3630] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3630] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3630] = true;
		popD[ART_L_JavaLexerImp_single_character_3630] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3632] = "JavaLexerImp.single_character ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3632] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3632] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3632] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3632] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3633] = "JavaLexerImp.single_character ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3633] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3633] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3633] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3634] = "JavaLexerImp.single_character ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3634] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3634] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3634] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3634] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3634] = true;
		popD[ART_L_JavaLexerImp_single_character_3634] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3636] = "JavaLexerImp.single_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3636] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3636] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3636] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3636] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3637] = "JavaLexerImp.single_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3637] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3637] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3637] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3638] = "JavaLexerImp.single_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3638] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3638] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3638] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3638] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3638] = true;
		popD[ART_L_JavaLexerImp_single_character_3638] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3640] = "JavaLexerImp.single_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3640] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3640] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3640] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3640] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3641] = "JavaLexerImp.single_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3641] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3641] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3641] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3642] = "JavaLexerImp.single_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3642] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3642] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3642] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3642] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3642] = true;
		popD[ART_L_JavaLexerImp_single_character_3642] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3644] = "JavaLexerImp.single_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3644] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3644] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3644] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3644] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3645] = "JavaLexerImp.single_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3645] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3645] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3645] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3646] = "JavaLexerImp.single_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3646] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3646] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3646] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3646] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3646] = true;
		popD[ART_L_JavaLexerImp_single_character_3646] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3648] = "JavaLexerImp.single_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3648] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3648] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3648] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3648] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3649] = "JavaLexerImp.single_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3649] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3649] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3649] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3650] = "JavaLexerImp.single_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3650] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3650] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3650] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3650] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3650] = true;
		popD[ART_L_JavaLexerImp_single_character_3650] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3652] = "JavaLexerImp.single_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3652] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3652] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3652] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3652] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3653] = "JavaLexerImp.single_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3653] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3653] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3653] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3654] = "JavaLexerImp.single_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3654] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3654] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3654] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3654] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3654] = true;
		popD[ART_L_JavaLexerImp_single_character_3654] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3656] = "JavaLexerImp.single_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3656] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3656] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3656] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3656] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3657] = "JavaLexerImp.single_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3657] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3657] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3657] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3658] = "JavaLexerImp.single_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3658] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3658] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3658] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3658] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3658] = true;
		popD[ART_L_JavaLexerImp_single_character_3658] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3660] = "JavaLexerImp.single_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3660] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3660] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3660] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3660] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3661] = "JavaLexerImp.single_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3661] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3661] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3661] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3662] = "JavaLexerImp.single_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3662] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3662] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3662] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3662] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3662] = true;
		popD[ART_L_JavaLexerImp_single_character_3662] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3664] = "JavaLexerImp.single_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3664] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3664] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3664] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3664] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3665] = "JavaLexerImp.single_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3665] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3665] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3665] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3666] = "JavaLexerImp.single_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3666] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3666] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3666] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3666] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3666] = true;
		popD[ART_L_JavaLexerImp_single_character_3666] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3668] = "JavaLexerImp.single_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3668] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3668] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3668] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3668] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3669] = "JavaLexerImp.single_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3669] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3669] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3669] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3670] = "JavaLexerImp.single_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3670] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3670] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3670] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3670] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3670] = true;
		popD[ART_L_JavaLexerImp_single_character_3670] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3672] = "JavaLexerImp.single_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3672] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3672] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3672] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3672] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3673] = "JavaLexerImp.single_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3673] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3673] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3673] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3674] = "JavaLexerImp.single_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3674] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3674] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3674] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3674] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3674] = true;
		popD[ART_L_JavaLexerImp_single_character_3674] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3676] = "JavaLexerImp.single_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3676] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3676] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3676] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3676] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3677] = "JavaLexerImp.single_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3677] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3677] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3677] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3678] = "JavaLexerImp.single_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3678] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3678] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3678] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3678] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3678] = true;
		popD[ART_L_JavaLexerImp_single_character_3678] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3680] = "JavaLexerImp.single_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3680] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3680] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3680] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3680] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3681] = "JavaLexerImp.single_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3681] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3681] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3681] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3682] = "JavaLexerImp.single_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3682] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3682] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3682] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3682] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3682] = true;
		popD[ART_L_JavaLexerImp_single_character_3682] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3684] = "JavaLexerImp.single_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3684] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3684] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3684] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3684] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3685] = "JavaLexerImp.single_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3685] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3685] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3685] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3686] = "JavaLexerImp.single_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3686] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3686] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3686] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3686] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3686] = true;
		popD[ART_L_JavaLexerImp_single_character_3686] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3688] = "JavaLexerImp.single_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3688] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3688] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3688] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3688] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3689] = "JavaLexerImp.single_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3689] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3689] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3689] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3690] = "JavaLexerImp.single_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3690] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3690] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3690] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3690] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3690] = true;
		popD[ART_L_JavaLexerImp_single_character_3690] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3692] = "JavaLexerImp.single_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3692] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3692] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3692] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3692] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3693] = "JavaLexerImp.single_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3693] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3693] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3693] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3694] = "JavaLexerImp.single_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3694] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3694] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3694] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3694] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3694] = true;
		popD[ART_L_JavaLexerImp_single_character_3694] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3696] = "JavaLexerImp.single_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3696] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3696] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3696] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3696] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3697] = "JavaLexerImp.single_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3697] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3697] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3697] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3698] = "JavaLexerImp.single_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3698] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3698] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3698] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3698] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3698] = true;
		popD[ART_L_JavaLexerImp_single_character_3698] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3700] = "JavaLexerImp.single_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3700] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3700] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3700] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3700] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3701] = "JavaLexerImp.single_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3701] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3701] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3701] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3702] = "JavaLexerImp.single_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3702] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3702] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3702] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3702] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3702] = true;
		popD[ART_L_JavaLexerImp_single_character_3702] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3704] = "JavaLexerImp.single_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3704] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3704] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3704] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3704] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3705] = "JavaLexerImp.single_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3705] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3705] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3705] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3706] = "JavaLexerImp.single_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3706] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3706] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3706] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3706] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3706] = true;
		popD[ART_L_JavaLexerImp_single_character_3706] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3708] = "JavaLexerImp.single_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3708] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3708] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3708] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3708] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3709] = "JavaLexerImp.single_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3709] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3709] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3709] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3710] = "JavaLexerImp.single_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3710] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3710] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3710] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3710] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3710] = true;
		popD[ART_L_JavaLexerImp_single_character_3710] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3712] = "JavaLexerImp.single_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3712] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3712] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3712] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3712] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3713] = "JavaLexerImp.single_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3713] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3713] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3713] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3714] = "JavaLexerImp.single_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3714] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3714] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3714] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3714] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3714] = true;
		popD[ART_L_JavaLexerImp_single_character_3714] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3716] = "JavaLexerImp.single_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3716] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3716] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3716] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3716] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3717] = "JavaLexerImp.single_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3717] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3717] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3717] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3718] = "JavaLexerImp.single_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3718] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3718] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3718] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3718] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3718] = true;
		popD[ART_L_JavaLexerImp_single_character_3718] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3720] = "JavaLexerImp.single_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3720] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3720] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3720] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3720] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3721] = "JavaLexerImp.single_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3721] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3721] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3721] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3722] = "JavaLexerImp.single_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3722] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3722] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3722] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3722] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3722] = true;
		popD[ART_L_JavaLexerImp_single_character_3722] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3724] = "JavaLexerImp.single_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3724] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3724] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3724] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3724] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3725] = "JavaLexerImp.single_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3725] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3725] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3725] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3726] = "JavaLexerImp.single_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3726] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3726] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3726] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3726] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3726] = true;
		popD[ART_L_JavaLexerImp_single_character_3726] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3728] = "JavaLexerImp.single_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3728] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3728] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3728] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3728] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3729] = "JavaLexerImp.single_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3729] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3729] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3729] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3730] = "JavaLexerImp.single_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3730] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3730] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3730] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3730] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3730] = true;
		popD[ART_L_JavaLexerImp_single_character_3730] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3732] = "JavaLexerImp.single_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3732] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3732] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3732] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3732] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3733] = "JavaLexerImp.single_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3733] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3733] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3733] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3734] = "JavaLexerImp.single_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3734] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3734] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3734] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3734] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3734] = true;
		popD[ART_L_JavaLexerImp_single_character_3734] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3736] = "JavaLexerImp.single_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3736] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3736] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3736] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3736] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3737] = "JavaLexerImp.single_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3737] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3737] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3737] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3738] = "JavaLexerImp.single_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3738] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3738] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3738] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3738] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3738] = true;
		popD[ART_L_JavaLexerImp_single_character_3738] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3740] = "JavaLexerImp.single_character ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3740] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3740] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3740] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3740] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3741] = "JavaLexerImp.single_character ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3741] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3741] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3741] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3742] = "JavaLexerImp.single_character ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3742] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3742] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3742] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3742] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3742] = true;
		popD[ART_L_JavaLexerImp_single_character_3742] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3744] = "JavaLexerImp.single_character ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3744] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3744] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3744] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3744] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3745] = "JavaLexerImp.single_character ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3745] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3745] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3745] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3746] = "JavaLexerImp.single_character ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3746] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3746] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3746] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3746] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3746] = true;
		popD[ART_L_JavaLexerImp_single_character_3746] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3748] = "JavaLexerImp.single_character ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3748] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3748] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3748] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3748] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3749] = "JavaLexerImp.single_character ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3749] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3749] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3749] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3750] = "JavaLexerImp.single_character ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3750] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3750] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3750] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3750] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3750] = true;
		popD[ART_L_JavaLexerImp_single_character_3750] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3752] = "JavaLexerImp.single_character ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3752] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3752] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3752] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3752] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3753] = "JavaLexerImp.single_character ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3753] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3753] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3753] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3754] = "JavaLexerImp.single_character ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3754] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3754] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3754] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3754] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3754] = true;
		popD[ART_L_JavaLexerImp_single_character_3754] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3756] = "JavaLexerImp.single_character ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3756] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3756] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3756] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3756] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3757] = "JavaLexerImp.single_character ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3757] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3757] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3757] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3758] = "JavaLexerImp.single_character ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3758] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3758] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3758] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3758] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3758] = true;
		popD[ART_L_JavaLexerImp_single_character_3758] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3760] = "JavaLexerImp.single_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3760] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3760] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3760] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3760] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3761] = "JavaLexerImp.single_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3761] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3761] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3761] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3762] = "JavaLexerImp.single_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3762] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3762] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3762] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3762] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3762] = true;
		popD[ART_L_JavaLexerImp_single_character_3762] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3764] = "JavaLexerImp.single_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3764] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3764] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3764] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3764] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3765] = "JavaLexerImp.single_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3765] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3765] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3765] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3766] = "JavaLexerImp.single_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3766] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3766] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3766] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3766] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3766] = true;
		popD[ART_L_JavaLexerImp_single_character_3766] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3768] = "JavaLexerImp.single_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3768] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3768] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3768] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3768] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3769] = "JavaLexerImp.single_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3769] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3769] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3769] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3770] = "JavaLexerImp.single_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3770] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3770] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3770] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3770] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3770] = true;
		popD[ART_L_JavaLexerImp_single_character_3770] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3772] = "JavaLexerImp.single_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3772] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3772] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3772] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3772] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3773] = "JavaLexerImp.single_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3773] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3773] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3773] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3774] = "JavaLexerImp.single_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3774] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3774] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3774] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3774] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3774] = true;
		popD[ART_L_JavaLexerImp_single_character_3774] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3776] = "JavaLexerImp.single_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3776] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3776] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3776] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3776] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3777] = "JavaLexerImp.single_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3777] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3777] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3777] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3778] = "JavaLexerImp.single_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3778] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3778] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3778] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3778] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3778] = true;
		popD[ART_L_JavaLexerImp_single_character_3778] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3780] = "JavaLexerImp.single_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3780] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3780] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3780] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3780] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3781] = "JavaLexerImp.single_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3781] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3781] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3781] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3782] = "JavaLexerImp.single_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3782] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3782] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3782] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3782] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3782] = true;
		popD[ART_L_JavaLexerImp_single_character_3782] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3784] = "JavaLexerImp.single_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3784] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3784] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3784] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3784] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3785] = "JavaLexerImp.single_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3785] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3785] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3785] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3786] = "JavaLexerImp.single_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3786] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3786] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3786] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3786] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3786] = true;
		popD[ART_L_JavaLexerImp_single_character_3786] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3788] = "JavaLexerImp.single_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3788] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3788] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3788] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3788] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3789] = "JavaLexerImp.single_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3789] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3789] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3789] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3790] = "JavaLexerImp.single_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3790] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3790] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3790] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3790] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3790] = true;
		popD[ART_L_JavaLexerImp_single_character_3790] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3792] = "JavaLexerImp.single_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3792] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3792] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3792] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3792] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3793] = "JavaLexerImp.single_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3793] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3793] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3793] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3794] = "JavaLexerImp.single_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3794] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3794] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3794] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3794] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3794] = true;
		popD[ART_L_JavaLexerImp_single_character_3794] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3796] = "JavaLexerImp.single_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3796] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3796] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3796] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3796] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3797] = "JavaLexerImp.single_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3797] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3797] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3797] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3798] = "JavaLexerImp.single_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3798] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3798] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3798] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3798] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3798] = true;
		popD[ART_L_JavaLexerImp_single_character_3798] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3800] = "JavaLexerImp.single_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3800] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3800] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3800] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3800] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3801] = "JavaLexerImp.single_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3801] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3801] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3801] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3802] = "JavaLexerImp.single_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3802] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3802] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3802] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3802] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3802] = true;
		popD[ART_L_JavaLexerImp_single_character_3802] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3804] = "JavaLexerImp.single_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3804] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3804] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3804] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3804] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3805] = "JavaLexerImp.single_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3805] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3805] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3805] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3806] = "JavaLexerImp.single_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3806] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3806] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3806] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3806] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3806] = true;
		popD[ART_L_JavaLexerImp_single_character_3806] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3808] = "JavaLexerImp.single_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3808] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3808] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3808] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3808] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3809] = "JavaLexerImp.single_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3809] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3809] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3809] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3810] = "JavaLexerImp.single_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3810] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3810] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3810] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3810] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3810] = true;
		popD[ART_L_JavaLexerImp_single_character_3810] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3812] = "JavaLexerImp.single_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3812] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3812] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3812] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3812] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3813] = "JavaLexerImp.single_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3813] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3813] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3813] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3814] = "JavaLexerImp.single_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3814] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3814] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3814] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3814] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3814] = true;
		popD[ART_L_JavaLexerImp_single_character_3814] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3816] = "JavaLexerImp.single_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3816] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3816] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3816] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3816] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3817] = "JavaLexerImp.single_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3817] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3817] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3817] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3818] = "JavaLexerImp.single_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3818] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3818] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3818] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3818] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3818] = true;
		popD[ART_L_JavaLexerImp_single_character_3818] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3820] = "JavaLexerImp.single_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3820] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3820] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3820] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3820] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3821] = "JavaLexerImp.single_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3821] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3821] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3821] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3822] = "JavaLexerImp.single_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3822] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3822] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3822] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3822] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3822] = true;
		popD[ART_L_JavaLexerImp_single_character_3822] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3824] = "JavaLexerImp.single_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3824] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3824] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3824] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3824] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3825] = "JavaLexerImp.single_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3825] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3825] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3825] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3826] = "JavaLexerImp.single_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3826] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3826] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3826] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3826] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3826] = true;
		popD[ART_L_JavaLexerImp_single_character_3826] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3828] = "JavaLexerImp.single_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3828] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3828] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3828] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3828] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3829] = "JavaLexerImp.single_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3829] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3829] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3829] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3830] = "JavaLexerImp.single_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3830] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3830] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3830] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3830] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3830] = true;
		popD[ART_L_JavaLexerImp_single_character_3830] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3832] = "JavaLexerImp.single_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3832] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3832] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3832] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3832] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3833] = "JavaLexerImp.single_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3833] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3833] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3833] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3834] = "JavaLexerImp.single_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3834] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3834] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3834] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3834] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3834] = true;
		popD[ART_L_JavaLexerImp_single_character_3834] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3836] = "JavaLexerImp.single_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3836] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3836] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3836] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3836] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3837] = "JavaLexerImp.single_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3837] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3837] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3837] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3838] = "JavaLexerImp.single_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3838] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3838] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3838] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3838] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3838] = true;
		popD[ART_L_JavaLexerImp_single_character_3838] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3840] = "JavaLexerImp.single_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3840] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3840] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3840] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3840] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3841] = "JavaLexerImp.single_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3841] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3841] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3841] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3842] = "JavaLexerImp.single_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3842] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3842] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3842] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3842] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3842] = true;
		popD[ART_L_JavaLexerImp_single_character_3842] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3844] = "JavaLexerImp.single_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3844] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3844] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3844] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3844] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3845] = "JavaLexerImp.single_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3845] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3845] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3845] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3846] = "JavaLexerImp.single_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3846] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3846] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3846] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3846] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3846] = true;
		popD[ART_L_JavaLexerImp_single_character_3846] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3848] = "JavaLexerImp.single_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3848] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3848] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3848] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3848] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3849] = "JavaLexerImp.single_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3849] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3849] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3849] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3850] = "JavaLexerImp.single_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3850] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3850] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3850] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3850] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3850] = true;
		popD[ART_L_JavaLexerImp_single_character_3850] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3852] = "JavaLexerImp.single_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3852] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3852] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3852] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3852] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3853] = "JavaLexerImp.single_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3853] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3853] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3853] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3854] = "JavaLexerImp.single_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3854] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3854] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3854] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3854] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3854] = true;
		popD[ART_L_JavaLexerImp_single_character_3854] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3856] = "JavaLexerImp.single_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3856] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3856] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3856] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3856] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3857] = "JavaLexerImp.single_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3857] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3857] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3857] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3858] = "JavaLexerImp.single_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3858] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3858] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3858] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3858] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3858] = true;
		popD[ART_L_JavaLexerImp_single_character_3858] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3860] = "JavaLexerImp.single_character ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3860] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3860] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3860] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3860] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3861] = "JavaLexerImp.single_character ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3861] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3861] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3861] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3862] = "JavaLexerImp.single_character ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3862] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3862] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3862] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3862] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3862] = true;
		popD[ART_L_JavaLexerImp_single_character_3862] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3864] = "JavaLexerImp.single_character ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3864] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3864] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3864] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3864] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3865] = "JavaLexerImp.single_character ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3865] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3865] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3865] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3866] = "JavaLexerImp.single_character ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3866] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3866] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3866] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3866] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3866] = true;
		popD[ART_L_JavaLexerImp_single_character_3866] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3868] = "JavaLexerImp.single_character ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3868] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3868] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3868] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3868] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3869] = "JavaLexerImp.single_character ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3869] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3869] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3869] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3870] = "JavaLexerImp.single_character ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3870] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3870] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3870] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3870] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3870] = true;
		popD[ART_L_JavaLexerImp_single_character_3870] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3872] = "JavaLexerImp.single_character ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3872] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3872] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3872] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_character_3872] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3873] = "JavaLexerImp.single_character ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3873] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3873] = ART_L_JavaLexerImp_single_character;
		popD[ART_L_JavaLexerImp_single_character_3873] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_character_3874] = "JavaLexerImp.single_character ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_single_character_3874] = "";
		lhsL[ART_L_JavaLexerImp_single_character_3874] = ART_L_JavaLexerImp_single_character;
		artKindOfs[ART_L_JavaLexerImp_single_character_3874] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_character_3874] = true;
		eoR_pL[ART_L_JavaLexerImp_single_character_3874] = true;
		popD[ART_L_JavaLexerImp_single_character_3874] = true;
	}

	public void artTableInitialiser_186() {
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character] = "JavaLexerImp.single_regular_string_literal_character ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character] = "single_regular_string_literal_character";
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4001] = "JavaLexerImp.single_regular_string_literal_character ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4001] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4001] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4001] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4001] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4002] = "JavaLexerImp.single_regular_string_literal_character ::= `";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4002] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4002] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4002] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = "JavaLexerImp.single_regular_string_literal_character ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4003] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4005] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4005] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4005] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4005] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4005] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4006] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4006] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4006] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4006] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4007] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4009] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4009] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4009] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4009] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4009] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4010] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4010] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4010] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4010] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4011] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4013] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4013] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4013] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4013] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4013] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4014] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4014] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4014] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4014] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4015] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4017] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4017] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4017] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4017] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4017] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4018] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4018] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4018] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4018] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4019] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4021] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4021] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4021] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4021] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4021] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4022] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4022] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4022] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4022] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4023] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4025] = "JavaLexerImp.single_regular_string_literal_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4025] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4025] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4025] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4025] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4026] = "JavaLexerImp.single_regular_string_literal_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4026] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4026] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4026] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = "JavaLexerImp.single_regular_string_literal_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4027] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4029] = "JavaLexerImp.single_regular_string_literal_character ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4029] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4029] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4029] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4029] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4030] = "JavaLexerImp.single_regular_string_literal_character ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4030] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4030] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4030] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = "JavaLexerImp.single_regular_string_literal_character ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4031] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4033] = "JavaLexerImp.single_regular_string_literal_character ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4033] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4033] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4033] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4033] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4034] = "JavaLexerImp.single_regular_string_literal_character ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4034] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4034] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4034] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = "JavaLexerImp.single_regular_string_literal_character ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4035] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4037] = "JavaLexerImp.single_regular_string_literal_character ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4037] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4037] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4037] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4037] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4038] = "JavaLexerImp.single_regular_string_literal_character ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4038] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4038] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4038] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = "JavaLexerImp.single_regular_string_literal_character ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4039] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4041] = "JavaLexerImp.single_regular_string_literal_character ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4041] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4041] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4041] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4041] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4042] = "JavaLexerImp.single_regular_string_literal_character ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4042] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4042] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4042] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = "JavaLexerImp.single_regular_string_literal_character ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4043] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4045] = "JavaLexerImp.single_regular_string_literal_character ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4045] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4045] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4045] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4045] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4046] = "JavaLexerImp.single_regular_string_literal_character ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4046] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4046] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4046] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = "JavaLexerImp.single_regular_string_literal_character ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4047] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4049] = "JavaLexerImp.single_regular_string_literal_character ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4049] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4049] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4049] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4049] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4050] = "JavaLexerImp.single_regular_string_literal_character ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4050] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4050] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4050] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = "JavaLexerImp.single_regular_string_literal_character ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4051] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4053] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4053] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4053] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4053] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4053] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4054] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4054] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4054] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4054] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4055] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4057] = "JavaLexerImp.single_regular_string_literal_character ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4057] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4057] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4057] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4057] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4058] = "JavaLexerImp.single_regular_string_literal_character ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4058] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4058] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4058] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = "JavaLexerImp.single_regular_string_literal_character ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4059] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4061] = "JavaLexerImp.single_regular_string_literal_character ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4061] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4061] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4061] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4061] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4062] = "JavaLexerImp.single_regular_string_literal_character ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4062] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4062] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4062] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = "JavaLexerImp.single_regular_string_literal_character ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4063] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4065] = "JavaLexerImp.single_regular_string_literal_character ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4065] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4065] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4065] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4065] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4066] = "JavaLexerImp.single_regular_string_literal_character ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4066] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4066] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4066] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = "JavaLexerImp.single_regular_string_literal_character ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4067] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4069] = "JavaLexerImp.single_regular_string_literal_character ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4069] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4069] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4069] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4069] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4070] = "JavaLexerImp.single_regular_string_literal_character ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4070] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4070] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4070] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = "JavaLexerImp.single_regular_string_literal_character ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4071] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4073] = "JavaLexerImp.single_regular_string_literal_character ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4073] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4073] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4073] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4073] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4074] = "JavaLexerImp.single_regular_string_literal_character ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4074] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4074] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4074] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = "JavaLexerImp.single_regular_string_literal_character ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4075] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4077] = "JavaLexerImp.single_regular_string_literal_character ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4077] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4077] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4077] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4077] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4078] = "JavaLexerImp.single_regular_string_literal_character ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4078] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4078] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4078] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = "JavaLexerImp.single_regular_string_literal_character ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4079] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4081] = "JavaLexerImp.single_regular_string_literal_character ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4081] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4081] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4081] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4081] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4082] = "JavaLexerImp.single_regular_string_literal_character ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4082] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4082] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4082] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = "JavaLexerImp.single_regular_string_literal_character ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4083] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4085] = "JavaLexerImp.single_regular_string_literal_character ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4085] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4085] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4085] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4085] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4086] = "JavaLexerImp.single_regular_string_literal_character ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4086] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4086] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4086] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = "JavaLexerImp.single_regular_string_literal_character ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4087] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4089] = "JavaLexerImp.single_regular_string_literal_character ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4089] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4089] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4089] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4089] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4090] = "JavaLexerImp.single_regular_string_literal_character ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4090] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4090] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4090] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = "JavaLexerImp.single_regular_string_literal_character ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4091] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4093] = "JavaLexerImp.single_regular_string_literal_character ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4093] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4093] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4093] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4093] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4094] = "JavaLexerImp.single_regular_string_literal_character ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4094] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4094] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4094] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = "JavaLexerImp.single_regular_string_literal_character ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4095] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4097] = "JavaLexerImp.single_regular_string_literal_character ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4097] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4097] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4097] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4097] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4098] = "JavaLexerImp.single_regular_string_literal_character ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4098] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4098] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4098] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = "JavaLexerImp.single_regular_string_literal_character ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4099] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4101] = "JavaLexerImp.single_regular_string_literal_character ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4101] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4101] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4101] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4101] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4102] = "JavaLexerImp.single_regular_string_literal_character ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4102] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4102] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4102] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = "JavaLexerImp.single_regular_string_literal_character ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4103] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4105] = "JavaLexerImp.single_regular_string_literal_character ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4105] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4105] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4105] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4105] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4106] = "JavaLexerImp.single_regular_string_literal_character ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4106] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4106] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4106] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = "JavaLexerImp.single_regular_string_literal_character ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4107] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4109] = "JavaLexerImp.single_regular_string_literal_character ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4109] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4109] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4109] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4109] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4110] = "JavaLexerImp.single_regular_string_literal_character ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4110] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4110] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4110] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = "JavaLexerImp.single_regular_string_literal_character ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4111] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4113] = "JavaLexerImp.single_regular_string_literal_character ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4113] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4113] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4113] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4113] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4114] = "JavaLexerImp.single_regular_string_literal_character ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4114] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4114] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4114] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = "JavaLexerImp.single_regular_string_literal_character ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4115] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4117] = "JavaLexerImp.single_regular_string_literal_character ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4117] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4117] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4117] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4117] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4118] = "JavaLexerImp.single_regular_string_literal_character ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4118] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4118] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4118] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = "JavaLexerImp.single_regular_string_literal_character ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4119] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4121] = "JavaLexerImp.single_regular_string_literal_character ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4121] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4121] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4121] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4121] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4122] = "JavaLexerImp.single_regular_string_literal_character ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4122] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4122] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4122] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = "JavaLexerImp.single_regular_string_literal_character ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4123] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4125] = "JavaLexerImp.single_regular_string_literal_character ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4125] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4125] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4125] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4125] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4126] = "JavaLexerImp.single_regular_string_literal_character ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4126] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4126] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4126] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = "JavaLexerImp.single_regular_string_literal_character ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4127] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4129] = "JavaLexerImp.single_regular_string_literal_character ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4129] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4129] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4129] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4129] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4130] = "JavaLexerImp.single_regular_string_literal_character ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4130] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4130] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4130] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = "JavaLexerImp.single_regular_string_literal_character ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4131] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4133] = "JavaLexerImp.single_regular_string_literal_character ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4133] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4133] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4133] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4133] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4134] = "JavaLexerImp.single_regular_string_literal_character ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4134] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4134] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4134] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = "JavaLexerImp.single_regular_string_literal_character ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4135] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4137] = "JavaLexerImp.single_regular_string_literal_character ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4137] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4137] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4137] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4137] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4138] = "JavaLexerImp.single_regular_string_literal_character ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4138] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4138] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4138] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = "JavaLexerImp.single_regular_string_literal_character ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4139] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4141] = "JavaLexerImp.single_regular_string_literal_character ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4141] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4141] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4141] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4141] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4142] = "JavaLexerImp.single_regular_string_literal_character ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4142] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4142] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4142] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = "JavaLexerImp.single_regular_string_literal_character ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4143] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4145] = "JavaLexerImp.single_regular_string_literal_character ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4145] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4145] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4145] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4145] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4146] = "JavaLexerImp.single_regular_string_literal_character ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4146] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4146] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4146] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = "JavaLexerImp.single_regular_string_literal_character ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4147] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4149] = "JavaLexerImp.single_regular_string_literal_character ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4149] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4149] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4149] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4149] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4150] = "JavaLexerImp.single_regular_string_literal_character ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4150] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4150] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4150] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = "JavaLexerImp.single_regular_string_literal_character ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4151] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4153] = "JavaLexerImp.single_regular_string_literal_character ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4153] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4153] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4153] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4153] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4154] = "JavaLexerImp.single_regular_string_literal_character ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4154] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4154] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4154] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = "JavaLexerImp.single_regular_string_literal_character ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4155] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4157] = "JavaLexerImp.single_regular_string_literal_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4157] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4157] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4157] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4157] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4158] = "JavaLexerImp.single_regular_string_literal_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4158] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4158] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4158] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = "JavaLexerImp.single_regular_string_literal_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4159] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4161] = "JavaLexerImp.single_regular_string_literal_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4161] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4161] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4161] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4161] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4162] = "JavaLexerImp.single_regular_string_literal_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4162] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4162] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4162] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = "JavaLexerImp.single_regular_string_literal_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4163] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4165] = "JavaLexerImp.single_regular_string_literal_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4165] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4165] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4165] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4165] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4166] = "JavaLexerImp.single_regular_string_literal_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4166] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4166] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4166] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = "JavaLexerImp.single_regular_string_literal_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4167] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4169] = "JavaLexerImp.single_regular_string_literal_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4169] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4169] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4169] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4169] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4170] = "JavaLexerImp.single_regular_string_literal_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4170] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4170] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4170] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = "JavaLexerImp.single_regular_string_literal_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4171] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4173] = "JavaLexerImp.single_regular_string_literal_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4173] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4173] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4173] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4173] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4174] = "JavaLexerImp.single_regular_string_literal_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4174] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4174] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4174] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = "JavaLexerImp.single_regular_string_literal_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4175] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4177] = "JavaLexerImp.single_regular_string_literal_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4177] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4177] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4177] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4177] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4178] = "JavaLexerImp.single_regular_string_literal_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4178] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4178] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4178] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = "JavaLexerImp.single_regular_string_literal_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4179] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4181] = "JavaLexerImp.single_regular_string_literal_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4181] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4181] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4181] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4181] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4182] = "JavaLexerImp.single_regular_string_literal_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4182] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4182] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4182] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = "JavaLexerImp.single_regular_string_literal_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4183] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4185] = "JavaLexerImp.single_regular_string_literal_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4185] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4185] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4185] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4185] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4186] = "JavaLexerImp.single_regular_string_literal_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4186] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4186] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4186] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = "JavaLexerImp.single_regular_string_literal_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4187] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4189] = "JavaLexerImp.single_regular_string_literal_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4189] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4189] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4189] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4189] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4190] = "JavaLexerImp.single_regular_string_literal_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4190] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4190] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4190] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = "JavaLexerImp.single_regular_string_literal_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4191] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4193] = "JavaLexerImp.single_regular_string_literal_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4193] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4193] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4193] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4193] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4194] = "JavaLexerImp.single_regular_string_literal_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4194] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4194] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4194] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = "JavaLexerImp.single_regular_string_literal_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4195] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4197] = "JavaLexerImp.single_regular_string_literal_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4197] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4197] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4197] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4197] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4198] = "JavaLexerImp.single_regular_string_literal_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4198] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4198] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4198] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = "JavaLexerImp.single_regular_string_literal_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4199] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4201] = "JavaLexerImp.single_regular_string_literal_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4201] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4201] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4201] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4201] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4202] = "JavaLexerImp.single_regular_string_literal_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4202] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4202] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4202] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = "JavaLexerImp.single_regular_string_literal_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4203] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4205] = "JavaLexerImp.single_regular_string_literal_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4205] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4205] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4205] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4205] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4206] = "JavaLexerImp.single_regular_string_literal_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4206] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4206] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4206] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = "JavaLexerImp.single_regular_string_literal_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4207] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4209] = "JavaLexerImp.single_regular_string_literal_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4209] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4209] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4209] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4209] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4210] = "JavaLexerImp.single_regular_string_literal_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4210] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4210] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4210] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = "JavaLexerImp.single_regular_string_literal_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4211] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4213] = "JavaLexerImp.single_regular_string_literal_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4213] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4213] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4213] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4213] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4214] = "JavaLexerImp.single_regular_string_literal_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4214] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4214] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4214] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = "JavaLexerImp.single_regular_string_literal_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4215] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4217] = "JavaLexerImp.single_regular_string_literal_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4217] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4217] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4217] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4217] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4218] = "JavaLexerImp.single_regular_string_literal_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4218] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4218] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4218] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = "JavaLexerImp.single_regular_string_literal_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4219] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4221] = "JavaLexerImp.single_regular_string_literal_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4221] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4221] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4221] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4221] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4222] = "JavaLexerImp.single_regular_string_literal_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4222] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4222] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4222] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = "JavaLexerImp.single_regular_string_literal_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4223] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4225] = "JavaLexerImp.single_regular_string_literal_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4225] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4225] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4225] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4225] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4226] = "JavaLexerImp.single_regular_string_literal_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4226] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4226] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4226] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = "JavaLexerImp.single_regular_string_literal_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4227] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4229] = "JavaLexerImp.single_regular_string_literal_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4229] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4229] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4229] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4229] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4230] = "JavaLexerImp.single_regular_string_literal_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4230] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4230] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4230] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = "JavaLexerImp.single_regular_string_literal_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4231] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4233] = "JavaLexerImp.single_regular_string_literal_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4233] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4233] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4233] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4233] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4234] = "JavaLexerImp.single_regular_string_literal_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4234] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4234] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4234] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = "JavaLexerImp.single_regular_string_literal_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4235] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4237] = "JavaLexerImp.single_regular_string_literal_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4237] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4237] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4237] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4237] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4238] = "JavaLexerImp.single_regular_string_literal_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4238] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4238] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4238] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = "JavaLexerImp.single_regular_string_literal_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4239] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4241] = "JavaLexerImp.single_regular_string_literal_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4241] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4241] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4241] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4241] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4242] = "JavaLexerImp.single_regular_string_literal_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4242] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4242] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4242] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = "JavaLexerImp.single_regular_string_literal_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4243] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4245] = "JavaLexerImp.single_regular_string_literal_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4245] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4245] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4245] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4245] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4246] = "JavaLexerImp.single_regular_string_literal_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4246] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4246] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4246] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = "JavaLexerImp.single_regular_string_literal_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4247] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4249] = "JavaLexerImp.single_regular_string_literal_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4249] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4249] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4249] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4249] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4250] = "JavaLexerImp.single_regular_string_literal_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4250] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4250] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4250] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = "JavaLexerImp.single_regular_string_literal_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4251] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4253] = "JavaLexerImp.single_regular_string_literal_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4253] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4253] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4253] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4253] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4254] = "JavaLexerImp.single_regular_string_literal_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4254] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4254] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4254] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = "JavaLexerImp.single_regular_string_literal_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4255] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4257] = "JavaLexerImp.single_regular_string_literal_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4257] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4257] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4257] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4257] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4258] = "JavaLexerImp.single_regular_string_literal_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4258] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4258] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4258] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = "JavaLexerImp.single_regular_string_literal_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4259] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4261] = "JavaLexerImp.single_regular_string_literal_character ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4261] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4261] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4261] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4261] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4262] = "JavaLexerImp.single_regular_string_literal_character ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4262] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4262] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4262] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = "JavaLexerImp.single_regular_string_literal_character ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4263] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4265] = "JavaLexerImp.single_regular_string_literal_character ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4265] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4265] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4265] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4265] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4266] = "JavaLexerImp.single_regular_string_literal_character ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4266] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4266] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4266] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = "JavaLexerImp.single_regular_string_literal_character ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4267] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4269] = "JavaLexerImp.single_regular_string_literal_character ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4269] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4269] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4269] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4269] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4270] = "JavaLexerImp.single_regular_string_literal_character ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4270] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4270] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4270] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = "JavaLexerImp.single_regular_string_literal_character ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4271] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4273] = "JavaLexerImp.single_regular_string_literal_character ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4273] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4273] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4273] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4273] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4274] = "JavaLexerImp.single_regular_string_literal_character ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4274] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4274] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4274] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = "JavaLexerImp.single_regular_string_literal_character ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4275] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4277] = "JavaLexerImp.single_regular_string_literal_character ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4277] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4277] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4277] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4277] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4278] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4278] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4278] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4278] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = "JavaLexerImp.single_regular_string_literal_character ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4279] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4281] = "JavaLexerImp.single_regular_string_literal_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4281] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4281] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4281] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4281] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4282] = "JavaLexerImp.single_regular_string_literal_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4282] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4282] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4282] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = "JavaLexerImp.single_regular_string_literal_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4283] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4285] = "JavaLexerImp.single_regular_string_literal_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4285] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4285] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4285] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4285] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4286] = "JavaLexerImp.single_regular_string_literal_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4286] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4286] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4286] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = "JavaLexerImp.single_regular_string_literal_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4287] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4289] = "JavaLexerImp.single_regular_string_literal_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4289] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4289] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4289] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4289] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4290] = "JavaLexerImp.single_regular_string_literal_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4290] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4290] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4290] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = "JavaLexerImp.single_regular_string_literal_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4291] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4293] = "JavaLexerImp.single_regular_string_literal_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4293] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4293] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4293] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4293] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4294] = "JavaLexerImp.single_regular_string_literal_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4294] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4294] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4294] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = "JavaLexerImp.single_regular_string_literal_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4295] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4297] = "JavaLexerImp.single_regular_string_literal_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4297] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4297] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4297] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4297] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4298] = "JavaLexerImp.single_regular_string_literal_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4298] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4298] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4298] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = "JavaLexerImp.single_regular_string_literal_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4299] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4301] = "JavaLexerImp.single_regular_string_literal_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4301] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4301] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4301] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4301] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4302] = "JavaLexerImp.single_regular_string_literal_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4302] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4302] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4302] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = "JavaLexerImp.single_regular_string_literal_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4303] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4305] = "JavaLexerImp.single_regular_string_literal_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4305] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4305] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4305] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4305] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4306] = "JavaLexerImp.single_regular_string_literal_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4306] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4306] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4306] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = "JavaLexerImp.single_regular_string_literal_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4307] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4309] = "JavaLexerImp.single_regular_string_literal_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4309] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4309] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4309] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4309] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4310] = "JavaLexerImp.single_regular_string_literal_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4310] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4310] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4310] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = "JavaLexerImp.single_regular_string_literal_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4311] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4313] = "JavaLexerImp.single_regular_string_literal_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4313] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4313] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4313] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4313] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4314] = "JavaLexerImp.single_regular_string_literal_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4314] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4314] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4314] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = "JavaLexerImp.single_regular_string_literal_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4315] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4317] = "JavaLexerImp.single_regular_string_literal_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4317] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4317] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4317] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4317] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4318] = "JavaLexerImp.single_regular_string_literal_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4318] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4318] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4318] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = "JavaLexerImp.single_regular_string_literal_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4319] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4321] = "JavaLexerImp.single_regular_string_literal_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4321] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4321] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4321] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4321] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4322] = "JavaLexerImp.single_regular_string_literal_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4322] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4322] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4322] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = "JavaLexerImp.single_regular_string_literal_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4323] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4325] = "JavaLexerImp.single_regular_string_literal_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4325] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4325] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4325] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4325] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4326] = "JavaLexerImp.single_regular_string_literal_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4326] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4326] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4326] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = "JavaLexerImp.single_regular_string_literal_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4327] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4329] = "JavaLexerImp.single_regular_string_literal_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4329] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4329] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4329] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4329] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4330] = "JavaLexerImp.single_regular_string_literal_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4330] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4330] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4330] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = "JavaLexerImp.single_regular_string_literal_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4331] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4333] = "JavaLexerImp.single_regular_string_literal_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4333] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4333] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4333] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4333] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4334] = "JavaLexerImp.single_regular_string_literal_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4334] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4334] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4334] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = "JavaLexerImp.single_regular_string_literal_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4335] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4337] = "JavaLexerImp.single_regular_string_literal_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4337] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4337] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4337] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4337] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4338] = "JavaLexerImp.single_regular_string_literal_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4338] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4338] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4338] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = "JavaLexerImp.single_regular_string_literal_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4339] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4341] = "JavaLexerImp.single_regular_string_literal_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4341] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4341] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4341] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4341] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4342] = "JavaLexerImp.single_regular_string_literal_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4342] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4342] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4342] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = "JavaLexerImp.single_regular_string_literal_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4343] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4345] = "JavaLexerImp.single_regular_string_literal_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4345] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4345] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4345] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4345] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4346] = "JavaLexerImp.single_regular_string_literal_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4346] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4346] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4346] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = "JavaLexerImp.single_regular_string_literal_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4347] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4349] = "JavaLexerImp.single_regular_string_literal_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4349] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4349] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4349] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4349] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4350] = "JavaLexerImp.single_regular_string_literal_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4350] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4350] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4350] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = "JavaLexerImp.single_regular_string_literal_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4351] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4353] = "JavaLexerImp.single_regular_string_literal_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4353] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4353] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4353] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4353] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4354] = "JavaLexerImp.single_regular_string_literal_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4354] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4354] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4354] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = "JavaLexerImp.single_regular_string_literal_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4355] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4357] = "JavaLexerImp.single_regular_string_literal_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4357] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4357] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4357] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4357] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4358] = "JavaLexerImp.single_regular_string_literal_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4358] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4358] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4358] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = "JavaLexerImp.single_regular_string_literal_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4359] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4361] = "JavaLexerImp.single_regular_string_literal_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4361] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4361] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4361] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4361] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4362] = "JavaLexerImp.single_regular_string_literal_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4362] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4362] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4362] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = "JavaLexerImp.single_regular_string_literal_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4363] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4365] = "JavaLexerImp.single_regular_string_literal_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4365] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4365] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4365] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4365] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4366] = "JavaLexerImp.single_regular_string_literal_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4366] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4366] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4366] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = "JavaLexerImp.single_regular_string_literal_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4367] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4369] = "JavaLexerImp.single_regular_string_literal_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4369] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4369] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4369] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4369] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4370] = "JavaLexerImp.single_regular_string_literal_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4370] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4370] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4370] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = "JavaLexerImp.single_regular_string_literal_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4371] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4373] = "JavaLexerImp.single_regular_string_literal_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4373] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4373] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4373] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4373] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4374] = "JavaLexerImp.single_regular_string_literal_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4374] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4374] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4374] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = "JavaLexerImp.single_regular_string_literal_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4375] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4377] = "JavaLexerImp.single_regular_string_literal_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4377] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4377] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4377] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4377] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4378] = "JavaLexerImp.single_regular_string_literal_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4378] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4378] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4378] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = "JavaLexerImp.single_regular_string_literal_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4379] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4381] = "JavaLexerImp.single_regular_string_literal_character ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4381] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4381] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4381] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4381] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4382] = "JavaLexerImp.single_regular_string_literal_character ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4382] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4382] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4382] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = "JavaLexerImp.single_regular_string_literal_character ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4383] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4385] = "JavaLexerImp.single_regular_string_literal_character ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4385] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4385] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4385] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4385] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4386] = "JavaLexerImp.single_regular_string_literal_character ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4386] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4386] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4386] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = "JavaLexerImp.single_regular_string_literal_character ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4387] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4389] = "JavaLexerImp.single_regular_string_literal_character ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4389] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4389] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4389] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4389] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4390] = "JavaLexerImp.single_regular_string_literal_character ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4390] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4390] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4390] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = "JavaLexerImp.single_regular_string_literal_character ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4391] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4393] = "JavaLexerImp.single_regular_string_literal_character ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4393] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4393] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4393] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4393] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4394] = "JavaLexerImp.single_regular_string_literal_character ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4394] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4394] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4394] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = "JavaLexerImp.single_regular_string_literal_character ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = "";
		lhsL[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = ART_L_JavaLexerImp_single_regular_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = true;
		eoR_pL[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = true;
		popD[ART_L_JavaLexerImp_single_regular_string_literal_character_4395] = true;
	}

	public void artTableInitialiser_187() {
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character] = "JavaLexerImp.single_verbatim_string_literal_character ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character] = "single_verbatim_string_literal_character";
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4398] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4399] = "JavaLexerImp.single_verbatim_string_literal_character ::= `";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4399] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4399] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4399] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = "JavaLexerImp.single_verbatim_string_literal_character ::= `. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4400] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4402] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4403] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\007";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4403] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4403] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4403] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\007. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4404] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4406] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4407] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\010";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4407] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4407] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4407] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\010. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4408] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4410] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4411] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\t";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4411] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4411] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4411] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4412] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4414] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4415] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\013";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4415] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4415] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4415] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\013. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4416] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4418] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4419] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\014";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4419] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4419] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4419] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\014. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4420] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `e";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4422] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4423] = "JavaLexerImp.single_verbatim_string_literal_character ::= `e";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4423] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4423] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4423] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = "JavaLexerImp.single_verbatim_string_literal_character ::= `e. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4424] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426] = "JavaLexerImp.single_verbatim_string_literal_character ::= . ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4426] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4427] = "JavaLexerImp.single_verbatim_string_literal_character ::= ` ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4427] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4427] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4427] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = "JavaLexerImp.single_verbatim_string_literal_character ::= ` . ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4428] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `!";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4430] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4431] = "JavaLexerImp.single_verbatim_string_literal_character ::= `!";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4431] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4431] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4431] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = "JavaLexerImp.single_verbatim_string_literal_character ::= `!. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4432] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `#";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4434] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4435] = "JavaLexerImp.single_verbatim_string_literal_character ::= `#";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4435] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4435] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4435] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = "JavaLexerImp.single_verbatim_string_literal_character ::= `#. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4436] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `$";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4438] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4439] = "JavaLexerImp.single_verbatim_string_literal_character ::= `$";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4439] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4439] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4439] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = "JavaLexerImp.single_verbatim_string_literal_character ::= `$. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4440] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `%";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4442] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4443] = "JavaLexerImp.single_verbatim_string_literal_character ::= `%";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4443] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4443] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4443] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = "JavaLexerImp.single_verbatim_string_literal_character ::= `%. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4444] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `&";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4446] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4447] = "JavaLexerImp.single_verbatim_string_literal_character ::= `&";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4447] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4447] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4447] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = "JavaLexerImp.single_verbatim_string_literal_character ::= `&. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4448] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4450] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4451] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\'";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4451] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4451] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4451] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\'. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4452] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `(";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4454] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4455] = "JavaLexerImp.single_verbatim_string_literal_character ::= `(";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4455] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4455] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4455] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = "JavaLexerImp.single_verbatim_string_literal_character ::= `(. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4456] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `)";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4458] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4459] = "JavaLexerImp.single_verbatim_string_literal_character ::= `)";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4459] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4459] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4459] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = "JavaLexerImp.single_verbatim_string_literal_character ::= `). ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4460] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `*";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4462] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4463] = "JavaLexerImp.single_verbatim_string_literal_character ::= `*";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4463] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4463] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4463] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = "JavaLexerImp.single_verbatim_string_literal_character ::= `*. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4464] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `+";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4466] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4467] = "JavaLexerImp.single_verbatim_string_literal_character ::= `+";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4467] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4467] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4467] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = "JavaLexerImp.single_verbatim_string_literal_character ::= `+. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4468] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `,";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4470] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4471] = "JavaLexerImp.single_verbatim_string_literal_character ::= `,";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4471] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4471] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4471] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = "JavaLexerImp.single_verbatim_string_literal_character ::= `,. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4472] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `-";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4474] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4475] = "JavaLexerImp.single_verbatim_string_literal_character ::= `-";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4475] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4475] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4475] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = "JavaLexerImp.single_verbatim_string_literal_character ::= `-. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4476] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `.";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4478] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4479] = "JavaLexerImp.single_verbatim_string_literal_character ::= `.";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4479] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4479] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4479] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = "JavaLexerImp.single_verbatim_string_literal_character ::= `.. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4480] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `/";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4482] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4483] = "JavaLexerImp.single_verbatim_string_literal_character ::= `/";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4483] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4483] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4483] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = "JavaLexerImp.single_verbatim_string_literal_character ::= `/. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4484] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `0";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4486] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4487] = "JavaLexerImp.single_verbatim_string_literal_character ::= `0";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4487] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4487] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4487] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = "JavaLexerImp.single_verbatim_string_literal_character ::= `0. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4488] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `1";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4490] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4491] = "JavaLexerImp.single_verbatim_string_literal_character ::= `1";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4491] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4491] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4491] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = "JavaLexerImp.single_verbatim_string_literal_character ::= `1. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4492] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `2";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4494] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4495] = "JavaLexerImp.single_verbatim_string_literal_character ::= `2";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4495] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4495] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4495] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = "JavaLexerImp.single_verbatim_string_literal_character ::= `2. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4496] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `3";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4498] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4499] = "JavaLexerImp.single_verbatim_string_literal_character ::= `3";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4499] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4499] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4499] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = "JavaLexerImp.single_verbatim_string_literal_character ::= `3. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4500] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `4";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4502] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4503] = "JavaLexerImp.single_verbatim_string_literal_character ::= `4";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4503] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4503] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4503] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = "JavaLexerImp.single_verbatim_string_literal_character ::= `4. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4504] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `5";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4506] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4507] = "JavaLexerImp.single_verbatim_string_literal_character ::= `5";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4507] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4507] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4507] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = "JavaLexerImp.single_verbatim_string_literal_character ::= `5. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4508] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `6";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4510] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4511] = "JavaLexerImp.single_verbatim_string_literal_character ::= `6";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4511] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4511] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4511] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = "JavaLexerImp.single_verbatim_string_literal_character ::= `6. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4512] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `7";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4514] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4515] = "JavaLexerImp.single_verbatim_string_literal_character ::= `7";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4515] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4515] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4515] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = "JavaLexerImp.single_verbatim_string_literal_character ::= `7. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4516] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `8";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4518] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4519] = "JavaLexerImp.single_verbatim_string_literal_character ::= `8";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4519] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4519] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4519] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = "JavaLexerImp.single_verbatim_string_literal_character ::= `8. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4520] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `9";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4522] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4523] = "JavaLexerImp.single_verbatim_string_literal_character ::= `9";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4523] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4523] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4523] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = "JavaLexerImp.single_verbatim_string_literal_character ::= `9. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4524] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `:";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4526] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4527] = "JavaLexerImp.single_verbatim_string_literal_character ::= `:";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4527] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4527] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4527] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = "JavaLexerImp.single_verbatim_string_literal_character ::= `:. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4528] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `;";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4530] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4531] = "JavaLexerImp.single_verbatim_string_literal_character ::= `;";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4531] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4531] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4531] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = "JavaLexerImp.single_verbatim_string_literal_character ::= `;. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4532] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `<";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4534] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4535] = "JavaLexerImp.single_verbatim_string_literal_character ::= `<";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4535] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4535] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4535] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = "JavaLexerImp.single_verbatim_string_literal_character ::= `<. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4536] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `=";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4538] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4539] = "JavaLexerImp.single_verbatim_string_literal_character ::= `=";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4539] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4539] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4539] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = "JavaLexerImp.single_verbatim_string_literal_character ::= `=. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4540] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `>";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4542] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4543] = "JavaLexerImp.single_verbatim_string_literal_character ::= `>";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4543] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4543] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4543] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = "JavaLexerImp.single_verbatim_string_literal_character ::= `>. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4544] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `?";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4546] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4547] = "JavaLexerImp.single_verbatim_string_literal_character ::= `?";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4547] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4547] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4547] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = "JavaLexerImp.single_verbatim_string_literal_character ::= `?. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4548] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `@";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4550] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4551] = "JavaLexerImp.single_verbatim_string_literal_character ::= `@";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4551] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4551] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4551] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = "JavaLexerImp.single_verbatim_string_literal_character ::= `@. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4552] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `A";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4554] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4555] = "JavaLexerImp.single_verbatim_string_literal_character ::= `A";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4555] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4555] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4555] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = "JavaLexerImp.single_verbatim_string_literal_character ::= `A. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4556] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `B";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4558] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4559] = "JavaLexerImp.single_verbatim_string_literal_character ::= `B";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4559] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4559] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4559] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = "JavaLexerImp.single_verbatim_string_literal_character ::= `B. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4560] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `C";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4562] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4563] = "JavaLexerImp.single_verbatim_string_literal_character ::= `C";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4563] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4563] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4563] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = "JavaLexerImp.single_verbatim_string_literal_character ::= `C. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4564] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `D";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4566] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4567] = "JavaLexerImp.single_verbatim_string_literal_character ::= `D";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4567] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4567] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4567] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = "JavaLexerImp.single_verbatim_string_literal_character ::= `D. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4568] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `E";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4570] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4571] = "JavaLexerImp.single_verbatim_string_literal_character ::= `E";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4571] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4571] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4571] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = "JavaLexerImp.single_verbatim_string_literal_character ::= `E. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4572] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `F";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4574] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4575] = "JavaLexerImp.single_verbatim_string_literal_character ::= `F";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4575] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4575] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4575] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = "JavaLexerImp.single_verbatim_string_literal_character ::= `F. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4576] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `G";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4578] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4579] = "JavaLexerImp.single_verbatim_string_literal_character ::= `G";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4579] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4579] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4579] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = "JavaLexerImp.single_verbatim_string_literal_character ::= `G. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4580] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `H";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4582] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4583] = "JavaLexerImp.single_verbatim_string_literal_character ::= `H";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4583] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4583] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4583] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = "JavaLexerImp.single_verbatim_string_literal_character ::= `H. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4584] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `I";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4586] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4587] = "JavaLexerImp.single_verbatim_string_literal_character ::= `I";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4587] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4587] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4587] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = "JavaLexerImp.single_verbatim_string_literal_character ::= `I. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4588] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `J";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4590] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4591] = "JavaLexerImp.single_verbatim_string_literal_character ::= `J";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4591] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4591] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4591] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = "JavaLexerImp.single_verbatim_string_literal_character ::= `J. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4592] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `K";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4594] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4595] = "JavaLexerImp.single_verbatim_string_literal_character ::= `K";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4595] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4595] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4595] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = "JavaLexerImp.single_verbatim_string_literal_character ::= `K. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4596] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `L";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4598] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4599] = "JavaLexerImp.single_verbatim_string_literal_character ::= `L";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4599] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4599] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4599] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = "JavaLexerImp.single_verbatim_string_literal_character ::= `L. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4600] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `M";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4602] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4603] = "JavaLexerImp.single_verbatim_string_literal_character ::= `M";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4603] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4603] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4603] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = "JavaLexerImp.single_verbatim_string_literal_character ::= `M. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4604] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `N";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4606] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4607] = "JavaLexerImp.single_verbatim_string_literal_character ::= `N";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4607] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4607] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4607] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = "JavaLexerImp.single_verbatim_string_literal_character ::= `N. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4608] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `O";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4610] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4611] = "JavaLexerImp.single_verbatim_string_literal_character ::= `O";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4611] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4611] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4611] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = "JavaLexerImp.single_verbatim_string_literal_character ::= `O. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4612] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `P";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4614] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4615] = "JavaLexerImp.single_verbatim_string_literal_character ::= `P";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4615] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4615] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4615] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = "JavaLexerImp.single_verbatim_string_literal_character ::= `P. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4616] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4618] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4619] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Q";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4619] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4619] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4619] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4620] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `R";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4622] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4623] = "JavaLexerImp.single_verbatim_string_literal_character ::= `R";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4623] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4623] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4623] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = "JavaLexerImp.single_verbatim_string_literal_character ::= `R. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4624] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `S";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4626] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4627] = "JavaLexerImp.single_verbatim_string_literal_character ::= `S";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4627] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4627] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4627] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = "JavaLexerImp.single_verbatim_string_literal_character ::= `S. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4628] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `T";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4630] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4631] = "JavaLexerImp.single_verbatim_string_literal_character ::= `T";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4631] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4631] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4631] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = "JavaLexerImp.single_verbatim_string_literal_character ::= `T. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4632] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `U";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4634] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4635] = "JavaLexerImp.single_verbatim_string_literal_character ::= `U";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4635] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4635] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4635] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = "JavaLexerImp.single_verbatim_string_literal_character ::= `U. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4636] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `V";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4638] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4639] = "JavaLexerImp.single_verbatim_string_literal_character ::= `V";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4639] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4639] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4639] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = "JavaLexerImp.single_verbatim_string_literal_character ::= `V. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4640] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `W";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4642] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4643] = "JavaLexerImp.single_verbatim_string_literal_character ::= `W";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4643] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4643] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4643] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = "JavaLexerImp.single_verbatim_string_literal_character ::= `W. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4644] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `X";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4646] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4647] = "JavaLexerImp.single_verbatim_string_literal_character ::= `X";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4647] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4647] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4647] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = "JavaLexerImp.single_verbatim_string_literal_character ::= `X. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4648] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4650] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4651] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Y";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4651] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4651] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4651] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4652] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4654] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4655] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Z";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4655] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4655] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4655] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = "JavaLexerImp.single_verbatim_string_literal_character ::= `Z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4656] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `[";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4658] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4659] = "JavaLexerImp.single_verbatim_string_literal_character ::= `[";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4659] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4659] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4659] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = "JavaLexerImp.single_verbatim_string_literal_character ::= `[. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4660] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4662] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4663] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\\\\\";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4663] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4663] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4663] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\\\\\. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4664] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `]";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4666] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4667] = "JavaLexerImp.single_verbatim_string_literal_character ::= `]";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4667] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4667] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4667] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = "JavaLexerImp.single_verbatim_string_literal_character ::= `]. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4668] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `^";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4670] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4671] = "JavaLexerImp.single_verbatim_string_literal_character ::= `^";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4671] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4671] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4671] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = "JavaLexerImp.single_verbatim_string_literal_character ::= `^. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4672] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4674] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4675] = "JavaLexerImp.single_verbatim_string_literal_character ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4675] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4675] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4675] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = "JavaLexerImp.single_verbatim_string_literal_character ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4676] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4678] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4679] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\`";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4679] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4679] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4679] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\`. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4680] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `a";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4682] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4683] = "JavaLexerImp.single_verbatim_string_literal_character ::= `a";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4683] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4683] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4683] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = "JavaLexerImp.single_verbatim_string_literal_character ::= `a. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4684] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `b";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4686] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4687] = "JavaLexerImp.single_verbatim_string_literal_character ::= `b";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4687] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4687] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4687] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = "JavaLexerImp.single_verbatim_string_literal_character ::= `b. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4688] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `c";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4690] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4691] = "JavaLexerImp.single_verbatim_string_literal_character ::= `c";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4691] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4691] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4691] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = "JavaLexerImp.single_verbatim_string_literal_character ::= `c. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4692] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `d";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4694] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4695] = "JavaLexerImp.single_verbatim_string_literal_character ::= `d";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4695] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4695] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4695] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = "JavaLexerImp.single_verbatim_string_literal_character ::= `d. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4696] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `f";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4698] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4699] = "JavaLexerImp.single_verbatim_string_literal_character ::= `f";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4699] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4699] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4699] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = "JavaLexerImp.single_verbatim_string_literal_character ::= `f. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4700] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `g";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4702] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4703] = "JavaLexerImp.single_verbatim_string_literal_character ::= `g";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4703] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4703] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4703] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = "JavaLexerImp.single_verbatim_string_literal_character ::= `g. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4704] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `h";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4706] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4707] = "JavaLexerImp.single_verbatim_string_literal_character ::= `h";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4707] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4707] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4707] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = "JavaLexerImp.single_verbatim_string_literal_character ::= `h. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4708] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `i";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4710] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4711] = "JavaLexerImp.single_verbatim_string_literal_character ::= `i";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4711] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4711] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4711] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = "JavaLexerImp.single_verbatim_string_literal_character ::= `i. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4712] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `j";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4714] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4715] = "JavaLexerImp.single_verbatim_string_literal_character ::= `j";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4715] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4715] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4715] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = "JavaLexerImp.single_verbatim_string_literal_character ::= `j. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4716] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `k";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4718] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4719] = "JavaLexerImp.single_verbatim_string_literal_character ::= `k";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4719] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4719] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4719] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = "JavaLexerImp.single_verbatim_string_literal_character ::= `k. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4720] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `l";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4722] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4723] = "JavaLexerImp.single_verbatim_string_literal_character ::= `l";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4723] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4723] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4723] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = "JavaLexerImp.single_verbatim_string_literal_character ::= `l. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4724] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `m";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4726] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4727] = "JavaLexerImp.single_verbatim_string_literal_character ::= `m";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4727] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4727] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4727] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = "JavaLexerImp.single_verbatim_string_literal_character ::= `m. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4728] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `n";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4730] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4731] = "JavaLexerImp.single_verbatim_string_literal_character ::= `n";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4731] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4731] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4731] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = "JavaLexerImp.single_verbatim_string_literal_character ::= `n. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4732] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `o";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4734] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4735] = "JavaLexerImp.single_verbatim_string_literal_character ::= `o";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4735] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4735] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4735] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = "JavaLexerImp.single_verbatim_string_literal_character ::= `o. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4736] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `p";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4738] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4739] = "JavaLexerImp.single_verbatim_string_literal_character ::= `p";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4739] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4739] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4739] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = "JavaLexerImp.single_verbatim_string_literal_character ::= `p. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4740] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `q";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4742] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4743] = "JavaLexerImp.single_verbatim_string_literal_character ::= `q";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4743] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4743] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4743] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = "JavaLexerImp.single_verbatim_string_literal_character ::= `q. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4744] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `r";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4746] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4747] = "JavaLexerImp.single_verbatim_string_literal_character ::= `r";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4747] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4747] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4747] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = "JavaLexerImp.single_verbatim_string_literal_character ::= `r. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4748] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `s";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4750] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4751] = "JavaLexerImp.single_verbatim_string_literal_character ::= `s";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4751] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4751] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4751] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = "JavaLexerImp.single_verbatim_string_literal_character ::= `s. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4752] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `t";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4754] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4755] = "JavaLexerImp.single_verbatim_string_literal_character ::= `t";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4755] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4755] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4755] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = "JavaLexerImp.single_verbatim_string_literal_character ::= `t. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4756] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `u";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4758] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4759] = "JavaLexerImp.single_verbatim_string_literal_character ::= `u";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4759] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4759] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4759] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = "JavaLexerImp.single_verbatim_string_literal_character ::= `u. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4760] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `v";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4762] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4763] = "JavaLexerImp.single_verbatim_string_literal_character ::= `v";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4763] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4763] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4763] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = "JavaLexerImp.single_verbatim_string_literal_character ::= `v. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4764] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `w";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4766] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4767] = "JavaLexerImp.single_verbatim_string_literal_character ::= `w";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4767] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4767] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4767] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = "JavaLexerImp.single_verbatim_string_literal_character ::= `w. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4768] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `x";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4770] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4771] = "JavaLexerImp.single_verbatim_string_literal_character ::= `x";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4771] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4771] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4771] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = "JavaLexerImp.single_verbatim_string_literal_character ::= `x. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4772] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `y";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4774] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4775] = "JavaLexerImp.single_verbatim_string_literal_character ::= `y";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4775] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4775] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4775] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = "JavaLexerImp.single_verbatim_string_literal_character ::= `y. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4776] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `z";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4778] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4779] = "JavaLexerImp.single_verbatim_string_literal_character ::= `z";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4779] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4779] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4779] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = "JavaLexerImp.single_verbatim_string_literal_character ::= `z. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4780] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `{";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4782] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4783] = "JavaLexerImp.single_verbatim_string_literal_character ::= `{";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4783] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4783] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4783] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = "JavaLexerImp.single_verbatim_string_literal_character ::= `{. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4784] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `|";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4786] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4787] = "JavaLexerImp.single_verbatim_string_literal_character ::= `|";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4787] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4787] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4787] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = "JavaLexerImp.single_verbatim_string_literal_character ::= `|. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4788] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `}";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4790] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4791] = "JavaLexerImp.single_verbatim_string_literal_character ::= `}";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4791] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4791] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4791] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = "JavaLexerImp.single_verbatim_string_literal_character ::= `}. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4792] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `~";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4794] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4795] = "JavaLexerImp.single_verbatim_string_literal_character ::= `~";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4795] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4795] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4795] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = "JavaLexerImp.single_verbatim_string_literal_character ::= `~. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4796] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4798] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4799] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\n";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4799] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4799] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4799] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\n. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4800] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802] = "JavaLexerImp.single_verbatim_string_literal_character ::= . `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4802] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4803] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\r";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4803] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4803] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4803] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = "JavaLexerImp.single_verbatim_string_literal_character ::= `\\\\r. ";
		artLabelStrings[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = "";
		lhsL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = ART_L_JavaLexerImp_single_verbatim_string_literal_character;
		artKindOfs[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = true;
		eoR_pL[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = true;
		popD[ART_L_JavaLexerImp_single_verbatim_string_literal_character_4804] = true;
	}

	public void artTableInitialiser_188() {
		artLabelInternalStrings[ART_L_JavaLexerImp_static] = "JavaLexerImp.static ";
		artLabelStrings[ART_L_JavaLexerImp_static] = "static";
		artKindOfs[ART_L_JavaLexerImp_static] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_782] = "JavaLexerImp.static ::= . `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_782] = "";
		lhsL[ART_L_JavaLexerImp_static_782] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_782] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_static_782] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_783] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_783] = "";
		lhsL[ART_L_JavaLexerImp_static_783] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_783] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_784] = "JavaLexerImp.static ::= `s. `t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_784] = "";
		lhsL[ART_L_JavaLexerImp_static_784] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_784] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_static_784] = true;
		popD[ART_L_JavaLexerImp_static_784] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_785] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_785] = "";
		lhsL[ART_L_JavaLexerImp_static_785] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_785] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_786] = "JavaLexerImp.static ::= `s`t. `a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_786] = "";
		lhsL[ART_L_JavaLexerImp_static_786] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_786] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_static_786] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_787] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_787] = "";
		lhsL[ART_L_JavaLexerImp_static_787] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_787] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_788] = "JavaLexerImp.static ::= `s`t`a. `t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_788] = "";
		lhsL[ART_L_JavaLexerImp_static_788] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_788] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_static_788] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_789] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_789] = "";
		lhsL[ART_L_JavaLexerImp_static_789] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_789] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_790] = "JavaLexerImp.static ::= `s`t`a`t. `i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_790] = "";
		lhsL[ART_L_JavaLexerImp_static_790] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_790] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_static_790] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_791] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_791] = "";
		lhsL[ART_L_JavaLexerImp_static_791] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_791] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_792] = "JavaLexerImp.static ::= `s`t`a`t`i. `c";
		artLabelStrings[ART_L_JavaLexerImp_static_792] = "";
		lhsL[ART_L_JavaLexerImp_static_792] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_792] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_static_792] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_793] = "JavaLexerImp.static ::= `s`t`a`t`i`c";
		artLabelStrings[ART_L_JavaLexerImp_static_793] = "";
		lhsL[ART_L_JavaLexerImp_static_793] = ART_L_JavaLexerImp_static;
		popD[ART_L_JavaLexerImp_static_793] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_static_794] = "JavaLexerImp.static ::= `s`t`a`t`i`c. ";
		artLabelStrings[ART_L_JavaLexerImp_static_794] = "";
		lhsL[ART_L_JavaLexerImp_static_794] = ART_L_JavaLexerImp_static;
		artKindOfs[ART_L_JavaLexerImp_static_794] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_static_794] = true;
		eoR_pL[ART_L_JavaLexerImp_static_794] = true;
		popD[ART_L_JavaLexerImp_static_794] = true;
	}

	public void artTableInitialiser_189() {
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp] = "JavaLexerImp.strictfp ";
		artLabelStrings[ART_L_JavaLexerImp_strictfp] = "strictfp";
		artKindOfs[ART_L_JavaLexerImp_strictfp] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_797] = "JavaLexerImp.strictfp ::= . `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_797] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_797] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_797] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_797] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_798] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_798] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_798] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_798] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_799] = "JavaLexerImp.strictfp ::= `s. `t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_799] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_799] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_799] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_strictfp_799] = true;
		popD[ART_L_JavaLexerImp_strictfp_799] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_800] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_800] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_800] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_800] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_801] = "JavaLexerImp.strictfp ::= `s`t. `r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_801] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_801] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_801] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_801] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_802] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_802] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_802] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_802] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_803] = "JavaLexerImp.strictfp ::= `s`t`r. `i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_803] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_803] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_803] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_803] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_804] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_804] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_804] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_804] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_805] = "JavaLexerImp.strictfp ::= `s`t`r`i. `c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_805] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_805] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_805] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_805] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_806] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_806] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_806] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_806] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_807] = "JavaLexerImp.strictfp ::= `s`t`r`i`c. `t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_807] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_807] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_807] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_807] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_808] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_808] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_808] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_808] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_809] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t. `f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_809] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_809] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_809] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_809] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_810] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_810] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_810] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_810] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_811] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f. `p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_811] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_811] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_811] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_strictfp_811] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_812] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_812] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_812] = ART_L_JavaLexerImp_strictfp;
		popD[ART_L_JavaLexerImp_strictfp_812] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_strictfp_813] = "JavaLexerImp.strictfp ::= `s`t`r`i`c`t`f`p. ";
		artLabelStrings[ART_L_JavaLexerImp_strictfp_813] = "";
		lhsL[ART_L_JavaLexerImp_strictfp_813] = ART_L_JavaLexerImp_strictfp;
		artKindOfs[ART_L_JavaLexerImp_strictfp_813] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_strictfp_813] = true;
		eoR_pL[ART_L_JavaLexerImp_strictfp_813] = true;
		popD[ART_L_JavaLexerImp_strictfp_813] = true;
	}

	public void artTableInitialiser_190() {
		artLabelInternalStrings[ART_L_JavaLexerImp_super] = "JavaLexerImp.super ";
		artLabelStrings[ART_L_JavaLexerImp_super] = "super";
		artKindOfs[ART_L_JavaLexerImp_super] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_816] = "JavaLexerImp.super ::= . `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_816] = "";
		lhsL[ART_L_JavaLexerImp_super_816] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_816] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_super_816] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_817] = "JavaLexerImp.super ::= `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_817] = "";
		lhsL[ART_L_JavaLexerImp_super_817] = ART_L_JavaLexerImp_super;
		popD[ART_L_JavaLexerImp_super_817] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_818] = "JavaLexerImp.super ::= `s. `u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_818] = "";
		lhsL[ART_L_JavaLexerImp_super_818] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_818] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_super_818] = true;
		popD[ART_L_JavaLexerImp_super_818] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_819] = "JavaLexerImp.super ::= `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_819] = "";
		lhsL[ART_L_JavaLexerImp_super_819] = ART_L_JavaLexerImp_super;
		popD[ART_L_JavaLexerImp_super_819] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_820] = "JavaLexerImp.super ::= `s`u. `p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_820] = "";
		lhsL[ART_L_JavaLexerImp_super_820] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_820] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_super_820] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_821] = "JavaLexerImp.super ::= `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_821] = "";
		lhsL[ART_L_JavaLexerImp_super_821] = ART_L_JavaLexerImp_super;
		popD[ART_L_JavaLexerImp_super_821] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_822] = "JavaLexerImp.super ::= `s`u`p. `e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_822] = "";
		lhsL[ART_L_JavaLexerImp_super_822] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_822] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_super_822] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_823] = "JavaLexerImp.super ::= `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_823] = "";
		lhsL[ART_L_JavaLexerImp_super_823] = ART_L_JavaLexerImp_super;
		popD[ART_L_JavaLexerImp_super_823] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_824] = "JavaLexerImp.super ::= `s`u`p`e. `r";
		artLabelStrings[ART_L_JavaLexerImp_super_824] = "";
		lhsL[ART_L_JavaLexerImp_super_824] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_824] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_super_824] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_825] = "JavaLexerImp.super ::= `s`u`p`e`r";
		artLabelStrings[ART_L_JavaLexerImp_super_825] = "";
		lhsL[ART_L_JavaLexerImp_super_825] = ART_L_JavaLexerImp_super;
		popD[ART_L_JavaLexerImp_super_825] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_super_826] = "JavaLexerImp.super ::= `s`u`p`e`r. ";
		artLabelStrings[ART_L_JavaLexerImp_super_826] = "";
		lhsL[ART_L_JavaLexerImp_super_826] = ART_L_JavaLexerImp_super;
		artKindOfs[ART_L_JavaLexerImp_super_826] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_super_826] = true;
		eoR_pL[ART_L_JavaLexerImp_super_826] = true;
		popD[ART_L_JavaLexerImp_super_826] = true;
	}

	public void artTableInitialiser_191() {
		artLabelInternalStrings[ART_L_JavaLexerImp_switch] = "JavaLexerImp.switch ";
		artLabelStrings[ART_L_JavaLexerImp_switch] = "switch";
		artKindOfs[ART_L_JavaLexerImp_switch] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_829] = "JavaLexerImp.switch ::= . `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_829] = "";
		lhsL[ART_L_JavaLexerImp_switch_829] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_829] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_switch_829] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_830] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_830] = "";
		lhsL[ART_L_JavaLexerImp_switch_830] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_830] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_831] = "JavaLexerImp.switch ::= `s. `w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_831] = "";
		lhsL[ART_L_JavaLexerImp_switch_831] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_831] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_switch_831] = true;
		popD[ART_L_JavaLexerImp_switch_831] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_832] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_832] = "";
		lhsL[ART_L_JavaLexerImp_switch_832] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_832] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_833] = "JavaLexerImp.switch ::= `s`w. `i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_833] = "";
		lhsL[ART_L_JavaLexerImp_switch_833] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_833] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_switch_833] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_834] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_834] = "";
		lhsL[ART_L_JavaLexerImp_switch_834] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_834] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_835] = "JavaLexerImp.switch ::= `s`w`i. `t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_835] = "";
		lhsL[ART_L_JavaLexerImp_switch_835] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_835] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_switch_835] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_836] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_836] = "";
		lhsL[ART_L_JavaLexerImp_switch_836] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_836] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_837] = "JavaLexerImp.switch ::= `s`w`i`t. `c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_837] = "";
		lhsL[ART_L_JavaLexerImp_switch_837] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_837] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_switch_837] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_838] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_838] = "";
		lhsL[ART_L_JavaLexerImp_switch_838] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_838] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_839] = "JavaLexerImp.switch ::= `s`w`i`t`c. `h";
		artLabelStrings[ART_L_JavaLexerImp_switch_839] = "";
		lhsL[ART_L_JavaLexerImp_switch_839] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_839] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_switch_839] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_840] = "JavaLexerImp.switch ::= `s`w`i`t`c`h";
		artLabelStrings[ART_L_JavaLexerImp_switch_840] = "";
		lhsL[ART_L_JavaLexerImp_switch_840] = ART_L_JavaLexerImp_switch;
		popD[ART_L_JavaLexerImp_switch_840] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_switch_841] = "JavaLexerImp.switch ::= `s`w`i`t`c`h. ";
		artLabelStrings[ART_L_JavaLexerImp_switch_841] = "";
		lhsL[ART_L_JavaLexerImp_switch_841] = ART_L_JavaLexerImp_switch;
		artKindOfs[ART_L_JavaLexerImp_switch_841] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_switch_841] = true;
		eoR_pL[ART_L_JavaLexerImp_switch_841] = true;
		popD[ART_L_JavaLexerImp_switch_841] = true;
	}

	public void artTableInitialiser_192() {
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized] = "JavaLexerImp.synchronized ";
		artLabelStrings[ART_L_JavaLexerImp_synchronized] = "synchronized";
		artKindOfs[ART_L_JavaLexerImp_synchronized] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_844] = "JavaLexerImp.synchronized ::= . `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_844] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_844] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_844] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_844] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_845] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_845] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_845] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_845] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_846] = "JavaLexerImp.synchronized ::= `s. `y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_846] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_846] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_846] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_synchronized_846] = true;
		popD[ART_L_JavaLexerImp_synchronized_846] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_847] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_847] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_847] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_847] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_848] = "JavaLexerImp.synchronized ::= `s`y. `n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_848] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_848] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_848] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_848] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_849] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_849] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_849] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_849] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_850] = "JavaLexerImp.synchronized ::= `s`y`n. `c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_850] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_850] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_850] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_850] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_851] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_851] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_851] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_851] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_852] = "JavaLexerImp.synchronized ::= `s`y`n`c. `h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_852] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_852] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_852] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_852] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_853] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_853] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_853] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_853] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_854] = "JavaLexerImp.synchronized ::= `s`y`n`c`h. `r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_854] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_854] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_854] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_854] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_855] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_855] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_855] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_855] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_856] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r. `o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_856] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_856] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_856] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_856] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_857] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_857] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_857] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_857] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_858] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o. `n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_858] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_858] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_858] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_858] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_859] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_859] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_859] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_859] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_860] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n. `i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_860] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_860] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_860] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_860] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_861] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_861] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_861] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_861] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_862] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i. `z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_862] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_862] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_862] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_862] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_863] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_863] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_863] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_863] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_864] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z. `e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_864] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_864] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_864] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_864] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_865] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_865] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_865] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_865] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_866] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e. `d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_866] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_866] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_866] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_synchronized_866] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_867] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_867] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_867] = ART_L_JavaLexerImp_synchronized;
		popD[ART_L_JavaLexerImp_synchronized_867] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_synchronized_868] = "JavaLexerImp.synchronized ::= `s`y`n`c`h`r`o`n`i`z`e`d. ";
		artLabelStrings[ART_L_JavaLexerImp_synchronized_868] = "";
		lhsL[ART_L_JavaLexerImp_synchronized_868] = ART_L_JavaLexerImp_synchronized;
		artKindOfs[ART_L_JavaLexerImp_synchronized_868] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_synchronized_868] = true;
		eoR_pL[ART_L_JavaLexerImp_synchronized_868] = true;
		popD[ART_L_JavaLexerImp_synchronized_868] = true;
	}

	public void artTableInitialiser_193() {
		artLabelInternalStrings[ART_L_JavaLexerImp_this] = "JavaLexerImp.this ";
		artLabelStrings[ART_L_JavaLexerImp_this] = "this";
		artKindOfs[ART_L_JavaLexerImp_this] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_871] = "JavaLexerImp.this ::= . `t`h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_871] = "";
		lhsL[ART_L_JavaLexerImp_this_871] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_this_871] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_this_871] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_872] = "JavaLexerImp.this ::= `t`h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_872] = "";
		lhsL[ART_L_JavaLexerImp_this_872] = ART_L_JavaLexerImp_this;
		popD[ART_L_JavaLexerImp_this_872] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_873] = "JavaLexerImp.this ::= `t. `h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_873] = "";
		lhsL[ART_L_JavaLexerImp_this_873] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_this_873] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_this_873] = true;
		popD[ART_L_JavaLexerImp_this_873] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_874] = "JavaLexerImp.this ::= `t`h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_874] = "";
		lhsL[ART_L_JavaLexerImp_this_874] = ART_L_JavaLexerImp_this;
		popD[ART_L_JavaLexerImp_this_874] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_875] = "JavaLexerImp.this ::= `t`h. `i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_875] = "";
		lhsL[ART_L_JavaLexerImp_this_875] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_this_875] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_this_875] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_876] = "JavaLexerImp.this ::= `t`h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_876] = "";
		lhsL[ART_L_JavaLexerImp_this_876] = ART_L_JavaLexerImp_this;
		popD[ART_L_JavaLexerImp_this_876] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_877] = "JavaLexerImp.this ::= `t`h`i. `s";
		artLabelStrings[ART_L_JavaLexerImp_this_877] = "";
		lhsL[ART_L_JavaLexerImp_this_877] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_this_877] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_this_877] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_878] = "JavaLexerImp.this ::= `t`h`i`s";
		artLabelStrings[ART_L_JavaLexerImp_this_878] = "";
		lhsL[ART_L_JavaLexerImp_this_878] = ART_L_JavaLexerImp_this;
		popD[ART_L_JavaLexerImp_this_878] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_this_879] = "JavaLexerImp.this ::= `t`h`i`s. ";
		artLabelStrings[ART_L_JavaLexerImp_this_879] = "";
		lhsL[ART_L_JavaLexerImp_this_879] = ART_L_JavaLexerImp_this;
		artKindOfs[ART_L_JavaLexerImp_this_879] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_this_879] = true;
		eoR_pL[ART_L_JavaLexerImp_this_879] = true;
		popD[ART_L_JavaLexerImp_this_879] = true;
	}

	public void artTableInitialiser_194() {
		artLabelInternalStrings[ART_L_JavaLexerImp_throw] = "JavaLexerImp.throw ";
		artLabelStrings[ART_L_JavaLexerImp_throw] = "throw";
		artKindOfs[ART_L_JavaLexerImp_throw] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_882] = "JavaLexerImp.throw ::= . `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_882] = "";
		lhsL[ART_L_JavaLexerImp_throw_882] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_882] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throw_882] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_883] = "JavaLexerImp.throw ::= `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_883] = "";
		lhsL[ART_L_JavaLexerImp_throw_883] = ART_L_JavaLexerImp_throw;
		popD[ART_L_JavaLexerImp_throw_883] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_884] = "JavaLexerImp.throw ::= `t. `h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_884] = "";
		lhsL[ART_L_JavaLexerImp_throw_884] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_884] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_throw_884] = true;
		popD[ART_L_JavaLexerImp_throw_884] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_885] = "JavaLexerImp.throw ::= `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_885] = "";
		lhsL[ART_L_JavaLexerImp_throw_885] = ART_L_JavaLexerImp_throw;
		popD[ART_L_JavaLexerImp_throw_885] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_886] = "JavaLexerImp.throw ::= `t`h. `r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_886] = "";
		lhsL[ART_L_JavaLexerImp_throw_886] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_886] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throw_886] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_887] = "JavaLexerImp.throw ::= `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_887] = "";
		lhsL[ART_L_JavaLexerImp_throw_887] = ART_L_JavaLexerImp_throw;
		popD[ART_L_JavaLexerImp_throw_887] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_888] = "JavaLexerImp.throw ::= `t`h`r. `o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_888] = "";
		lhsL[ART_L_JavaLexerImp_throw_888] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_888] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throw_888] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_889] = "JavaLexerImp.throw ::= `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_889] = "";
		lhsL[ART_L_JavaLexerImp_throw_889] = ART_L_JavaLexerImp_throw;
		popD[ART_L_JavaLexerImp_throw_889] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_890] = "JavaLexerImp.throw ::= `t`h`r`o. `w";
		artLabelStrings[ART_L_JavaLexerImp_throw_890] = "";
		lhsL[ART_L_JavaLexerImp_throw_890] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_890] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throw_890] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_891] = "JavaLexerImp.throw ::= `t`h`r`o`w";
		artLabelStrings[ART_L_JavaLexerImp_throw_891] = "";
		lhsL[ART_L_JavaLexerImp_throw_891] = ART_L_JavaLexerImp_throw;
		popD[ART_L_JavaLexerImp_throw_891] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throw_892] = "JavaLexerImp.throw ::= `t`h`r`o`w. ";
		artLabelStrings[ART_L_JavaLexerImp_throw_892] = "";
		lhsL[ART_L_JavaLexerImp_throw_892] = ART_L_JavaLexerImp_throw;
		artKindOfs[ART_L_JavaLexerImp_throw_892] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_throw_892] = true;
		eoR_pL[ART_L_JavaLexerImp_throw_892] = true;
		popD[ART_L_JavaLexerImp_throw_892] = true;
	}

	public void artTableInitialiser_195() {
		artLabelInternalStrings[ART_L_JavaLexerImp_throws] = "JavaLexerImp.throws ";
		artLabelStrings[ART_L_JavaLexerImp_throws] = "throws";
		artKindOfs[ART_L_JavaLexerImp_throws] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_895] = "JavaLexerImp.throws ::= . `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_895] = "";
		lhsL[ART_L_JavaLexerImp_throws_895] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_895] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throws_895] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_896] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_896] = "";
		lhsL[ART_L_JavaLexerImp_throws_896] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_896] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_897] = "JavaLexerImp.throws ::= `t. `h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_897] = "";
		lhsL[ART_L_JavaLexerImp_throws_897] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_897] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_throws_897] = true;
		popD[ART_L_JavaLexerImp_throws_897] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_898] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_898] = "";
		lhsL[ART_L_JavaLexerImp_throws_898] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_898] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_899] = "JavaLexerImp.throws ::= `t`h. `r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_899] = "";
		lhsL[ART_L_JavaLexerImp_throws_899] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_899] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throws_899] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_900] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_900] = "";
		lhsL[ART_L_JavaLexerImp_throws_900] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_900] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_901] = "JavaLexerImp.throws ::= `t`h`r. `o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_901] = "";
		lhsL[ART_L_JavaLexerImp_throws_901] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_901] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throws_901] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_902] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_902] = "";
		lhsL[ART_L_JavaLexerImp_throws_902] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_902] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_903] = "JavaLexerImp.throws ::= `t`h`r`o. `w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_903] = "";
		lhsL[ART_L_JavaLexerImp_throws_903] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_903] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throws_903] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_904] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_904] = "";
		lhsL[ART_L_JavaLexerImp_throws_904] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_904] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_905] = "JavaLexerImp.throws ::= `t`h`r`o`w. `s";
		artLabelStrings[ART_L_JavaLexerImp_throws_905] = "";
		lhsL[ART_L_JavaLexerImp_throws_905] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_905] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_throws_905] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_906] = "JavaLexerImp.throws ::= `t`h`r`o`w`s";
		artLabelStrings[ART_L_JavaLexerImp_throws_906] = "";
		lhsL[ART_L_JavaLexerImp_throws_906] = ART_L_JavaLexerImp_throws;
		popD[ART_L_JavaLexerImp_throws_906] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_throws_907] = "JavaLexerImp.throws ::= `t`h`r`o`w`s. ";
		artLabelStrings[ART_L_JavaLexerImp_throws_907] = "";
		lhsL[ART_L_JavaLexerImp_throws_907] = ART_L_JavaLexerImp_throws;
		artKindOfs[ART_L_JavaLexerImp_throws_907] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_throws_907] = true;
		eoR_pL[ART_L_JavaLexerImp_throws_907] = true;
		popD[ART_L_JavaLexerImp_throws_907] = true;
	}

	public void artTableInitialiser_196() {
		artLabelInternalStrings[ART_L_JavaLexerImp_transient] = "JavaLexerImp.transient ";
		artLabelStrings[ART_L_JavaLexerImp_transient] = "transient";
		artKindOfs[ART_L_JavaLexerImp_transient] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_910] = "JavaLexerImp.transient ::= . `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_910] = "";
		lhsL[ART_L_JavaLexerImp_transient_910] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_910] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_910] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_911] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_911] = "";
		lhsL[ART_L_JavaLexerImp_transient_911] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_911] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_912] = "JavaLexerImp.transient ::= `t. `r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_912] = "";
		lhsL[ART_L_JavaLexerImp_transient_912] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_912] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_transient_912] = true;
		popD[ART_L_JavaLexerImp_transient_912] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_913] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_913] = "";
		lhsL[ART_L_JavaLexerImp_transient_913] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_913] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_914] = "JavaLexerImp.transient ::= `t`r. `a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_914] = "";
		lhsL[ART_L_JavaLexerImp_transient_914] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_914] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_914] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_915] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_915] = "";
		lhsL[ART_L_JavaLexerImp_transient_915] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_915] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_916] = "JavaLexerImp.transient ::= `t`r`a. `n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_916] = "";
		lhsL[ART_L_JavaLexerImp_transient_916] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_916] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_916] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_917] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_917] = "";
		lhsL[ART_L_JavaLexerImp_transient_917] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_917] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_918] = "JavaLexerImp.transient ::= `t`r`a`n. `s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_918] = "";
		lhsL[ART_L_JavaLexerImp_transient_918] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_918] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_918] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_919] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_919] = "";
		lhsL[ART_L_JavaLexerImp_transient_919] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_919] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_920] = "JavaLexerImp.transient ::= `t`r`a`n`s. `i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_920] = "";
		lhsL[ART_L_JavaLexerImp_transient_920] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_920] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_920] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_921] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_921] = "";
		lhsL[ART_L_JavaLexerImp_transient_921] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_921] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_922] = "JavaLexerImp.transient ::= `t`r`a`n`s`i. `e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_922] = "";
		lhsL[ART_L_JavaLexerImp_transient_922] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_922] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_922] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_923] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_923] = "";
		lhsL[ART_L_JavaLexerImp_transient_923] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_923] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_924] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e. `n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_924] = "";
		lhsL[ART_L_JavaLexerImp_transient_924] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_924] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_924] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_925] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_925] = "";
		lhsL[ART_L_JavaLexerImp_transient_925] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_925] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_926] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n. `t";
		artLabelStrings[ART_L_JavaLexerImp_transient_926] = "";
		lhsL[ART_L_JavaLexerImp_transient_926] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_926] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_transient_926] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_927] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t";
		artLabelStrings[ART_L_JavaLexerImp_transient_927] = "";
		lhsL[ART_L_JavaLexerImp_transient_927] = ART_L_JavaLexerImp_transient;
		popD[ART_L_JavaLexerImp_transient_927] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_transient_928] = "JavaLexerImp.transient ::= `t`r`a`n`s`i`e`n`t. ";
		artLabelStrings[ART_L_JavaLexerImp_transient_928] = "";
		lhsL[ART_L_JavaLexerImp_transient_928] = ART_L_JavaLexerImp_transient;
		artKindOfs[ART_L_JavaLexerImp_transient_928] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_transient_928] = true;
		eoR_pL[ART_L_JavaLexerImp_transient_928] = true;
		popD[ART_L_JavaLexerImp_transient_928] = true;
	}

	public void artTableInitialiser_197() {
		artLabelInternalStrings[ART_L_JavaLexerImp_try] = "JavaLexerImp.try ";
		artLabelStrings[ART_L_JavaLexerImp_try] = "try";
		artKindOfs[ART_L_JavaLexerImp_try] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_931] = "JavaLexerImp.try ::= . `t`r`y";
		artLabelStrings[ART_L_JavaLexerImp_try_931] = "";
		lhsL[ART_L_JavaLexerImp_try_931] = ART_L_JavaLexerImp_try;
		artKindOfs[ART_L_JavaLexerImp_try_931] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_try_931] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_932] = "JavaLexerImp.try ::= `t`r`y";
		artLabelStrings[ART_L_JavaLexerImp_try_932] = "";
		lhsL[ART_L_JavaLexerImp_try_932] = ART_L_JavaLexerImp_try;
		popD[ART_L_JavaLexerImp_try_932] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_933] = "JavaLexerImp.try ::= `t. `r`y";
		artLabelStrings[ART_L_JavaLexerImp_try_933] = "";
		lhsL[ART_L_JavaLexerImp_try_933] = ART_L_JavaLexerImp_try;
		artKindOfs[ART_L_JavaLexerImp_try_933] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_try_933] = true;
		popD[ART_L_JavaLexerImp_try_933] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_934] = "JavaLexerImp.try ::= `t`r`y";
		artLabelStrings[ART_L_JavaLexerImp_try_934] = "";
		lhsL[ART_L_JavaLexerImp_try_934] = ART_L_JavaLexerImp_try;
		popD[ART_L_JavaLexerImp_try_934] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_935] = "JavaLexerImp.try ::= `t`r. `y";
		artLabelStrings[ART_L_JavaLexerImp_try_935] = "";
		lhsL[ART_L_JavaLexerImp_try_935] = ART_L_JavaLexerImp_try;
		artKindOfs[ART_L_JavaLexerImp_try_935] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_try_935] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_936] = "JavaLexerImp.try ::= `t`r`y";
		artLabelStrings[ART_L_JavaLexerImp_try_936] = "";
		lhsL[ART_L_JavaLexerImp_try_936] = ART_L_JavaLexerImp_try;
		popD[ART_L_JavaLexerImp_try_936] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_try_937] = "JavaLexerImp.try ::= `t`r`y. ";
		artLabelStrings[ART_L_JavaLexerImp_try_937] = "";
		lhsL[ART_L_JavaLexerImp_try_937] = ART_L_JavaLexerImp_try;
		artKindOfs[ART_L_JavaLexerImp_try_937] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_try_937] = true;
		eoR_pL[ART_L_JavaLexerImp_try_937] = true;
		popD[ART_L_JavaLexerImp_try_937] = true;
	}

	public void artTableInitialiser_198() {
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores] = "JavaLexerImp.underscores ";
		artLabelStrings[ART_L_JavaLexerImp_underscores] = "underscores";
		artKindOfs[ART_L_JavaLexerImp_underscores] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2990] = "JavaLexerImp.underscores ::= . `_";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2990] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2990] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_underscores_2990] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_underscores_2990] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2991] = "JavaLexerImp.underscores ::= `_";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2991] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2991] = ART_L_JavaLexerImp_underscores;
		popD[ART_L_JavaLexerImp_underscores_2991] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2992] = "JavaLexerImp.underscores ::= `_. ";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2992] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2992] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_underscores_2992] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_underscores_2992] = true;
		eoR_pL[ART_L_JavaLexerImp_underscores_2992] = true;
		popD[ART_L_JavaLexerImp_underscores_2992] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2994] = "JavaLexerImp.underscores ::= . JavaLexerImp.underscores `_";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2994] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2994] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_underscores_2994] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2996] = "JavaLexerImp.underscores ::= JavaLexerImp.underscores . `_";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2996] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2996] = ART_L_JavaLexerImp_underscores;
		artSlotInstanceOfs[ART_L_JavaLexerImp_underscores_2996] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_underscores_2996] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_underscores_2996] = true;
		popD[ART_L_JavaLexerImp_underscores_2996] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2997] = "JavaLexerImp.underscores ::= JavaLexerImp.underscores `_";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2997] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2997] = ART_L_JavaLexerImp_underscores;
		popD[ART_L_JavaLexerImp_underscores_2997] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_underscores_2998] = "JavaLexerImp.underscores ::= JavaLexerImp.underscores `_. ";
		artLabelStrings[ART_L_JavaLexerImp_underscores_2998] = "";
		lhsL[ART_L_JavaLexerImp_underscores_2998] = ART_L_JavaLexerImp_underscores;
		artKindOfs[ART_L_JavaLexerImp_underscores_2998] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_underscores_2998] = true;
		eoR_pL[ART_L_JavaLexerImp_underscores_2998] = true;
		popD[ART_L_JavaLexerImp_underscores_2998] = true;
	}

	public void artTableInitialiser_199() {
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence] = "JavaLexerImp.unicode_character_escape_sequence ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence] = "unicode_character_escape_sequence";
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2306] = "JavaLexerImp.unicode_character_escape_sequence ::= . `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2306] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2306] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2306] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2307] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2307] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2307] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2308] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\. `uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2308] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2308] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2308] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2308] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2309] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2309] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2309] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2310] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`u. JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2310] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2310] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2310] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2312] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2312] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2312] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2312] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2312] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2314] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2314] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2314] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2314] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2314] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2316] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2316] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2316] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2316] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2316] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`uJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = true;
		eoR_pL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = true;
		popD[ART_L_JavaLexerImp_unicode_character_escape_sequence_2318] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2320] = "JavaLexerImp.unicode_character_escape_sequence ::= . `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2320] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2320] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2320] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2321] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2321] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2321] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2322] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\. `UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2322] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2322] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2322] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2322] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2323] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2323] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2323] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2324] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`U. JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2324] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2324] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2324] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2326] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2326] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2326] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2326] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2326] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2328] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2328] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2328] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2328] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2328] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2330] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2330] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2330] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2330] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2330] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2332] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2332] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2332] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2332] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2332] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2334] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2334] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2334] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2334] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2334] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2336] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2336] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2336] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2336] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2336] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2338] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . JavaLexerImp.hex_digit ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2338] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2338] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2338] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2338] = ART_K_INTERMEDIATE;
		artLabelInternalStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = "JavaLexerImp.unicode_character_escape_sequence ::= `\\\\\\\\`UJavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit JavaLexerImp.hex_digit . ";
		artLabelStrings[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = "";
		lhsL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = ART_L_JavaLexerImp_unicode_character_escape_sequence;
		artSlotInstanceOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = ART_L_JavaLexerImp_hex_digit;
		artKindOfs[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = true;
		eoR_pL[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = true;
		popD[ART_L_JavaLexerImp_unicode_character_escape_sequence_2340] = true;
	}

	public void artTableInitialiser_200() {
		artLabelInternalStrings[ART_L_JavaLexerImp_void] = "JavaLexerImp.void ";
		artLabelStrings[ART_L_JavaLexerImp_void] = "void";
		artKindOfs[ART_L_JavaLexerImp_void] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_940] = "JavaLexerImp.void ::= . `v`o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_940] = "";
		lhsL[ART_L_JavaLexerImp_void_940] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_void_940] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_void_940] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_941] = "JavaLexerImp.void ::= `v`o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_941] = "";
		lhsL[ART_L_JavaLexerImp_void_941] = ART_L_JavaLexerImp_void;
		popD[ART_L_JavaLexerImp_void_941] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_942] = "JavaLexerImp.void ::= `v. `o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_942] = "";
		lhsL[ART_L_JavaLexerImp_void_942] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_void_942] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_void_942] = true;
		popD[ART_L_JavaLexerImp_void_942] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_943] = "JavaLexerImp.void ::= `v`o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_943] = "";
		lhsL[ART_L_JavaLexerImp_void_943] = ART_L_JavaLexerImp_void;
		popD[ART_L_JavaLexerImp_void_943] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_944] = "JavaLexerImp.void ::= `v`o. `i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_944] = "";
		lhsL[ART_L_JavaLexerImp_void_944] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_void_944] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_void_944] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_945] = "JavaLexerImp.void ::= `v`o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_945] = "";
		lhsL[ART_L_JavaLexerImp_void_945] = ART_L_JavaLexerImp_void;
		popD[ART_L_JavaLexerImp_void_945] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_946] = "JavaLexerImp.void ::= `v`o`i. `d";
		artLabelStrings[ART_L_JavaLexerImp_void_946] = "";
		lhsL[ART_L_JavaLexerImp_void_946] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_void_946] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_void_946] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_947] = "JavaLexerImp.void ::= `v`o`i`d";
		artLabelStrings[ART_L_JavaLexerImp_void_947] = "";
		lhsL[ART_L_JavaLexerImp_void_947] = ART_L_JavaLexerImp_void;
		popD[ART_L_JavaLexerImp_void_947] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_void_948] = "JavaLexerImp.void ::= `v`o`i`d. ";
		artLabelStrings[ART_L_JavaLexerImp_void_948] = "";
		lhsL[ART_L_JavaLexerImp_void_948] = ART_L_JavaLexerImp_void;
		artKindOfs[ART_L_JavaLexerImp_void_948] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_void_948] = true;
		eoR_pL[ART_L_JavaLexerImp_void_948] = true;
		popD[ART_L_JavaLexerImp_void_948] = true;
	}

	public void artTableInitialiser_201() {
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile] = "JavaLexerImp.volatile ";
		artLabelStrings[ART_L_JavaLexerImp_volatile] = "volatile";
		artKindOfs[ART_L_JavaLexerImp_volatile] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_951] = "JavaLexerImp.volatile ::= . `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_951] = "";
		lhsL[ART_L_JavaLexerImp_volatile_951] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_951] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_951] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_952] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_952] = "";
		lhsL[ART_L_JavaLexerImp_volatile_952] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_952] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_953] = "JavaLexerImp.volatile ::= `v. `o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_953] = "";
		lhsL[ART_L_JavaLexerImp_volatile_953] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_953] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_volatile_953] = true;
		popD[ART_L_JavaLexerImp_volatile_953] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_954] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_954] = "";
		lhsL[ART_L_JavaLexerImp_volatile_954] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_954] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_955] = "JavaLexerImp.volatile ::= `v`o. `l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_955] = "";
		lhsL[ART_L_JavaLexerImp_volatile_955] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_955] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_955] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_956] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_956] = "";
		lhsL[ART_L_JavaLexerImp_volatile_956] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_956] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_957] = "JavaLexerImp.volatile ::= `v`o`l. `a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_957] = "";
		lhsL[ART_L_JavaLexerImp_volatile_957] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_957] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_957] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_958] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_958] = "";
		lhsL[ART_L_JavaLexerImp_volatile_958] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_958] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_959] = "JavaLexerImp.volatile ::= `v`o`l`a. `t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_959] = "";
		lhsL[ART_L_JavaLexerImp_volatile_959] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_959] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_959] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_960] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_960] = "";
		lhsL[ART_L_JavaLexerImp_volatile_960] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_960] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_961] = "JavaLexerImp.volatile ::= `v`o`l`a`t. `i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_961] = "";
		lhsL[ART_L_JavaLexerImp_volatile_961] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_961] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_961] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_962] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_962] = "";
		lhsL[ART_L_JavaLexerImp_volatile_962] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_962] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_963] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i. `l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_963] = "";
		lhsL[ART_L_JavaLexerImp_volatile_963] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_963] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_963] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_964] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_964] = "";
		lhsL[ART_L_JavaLexerImp_volatile_964] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_964] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_965] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l. `e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_965] = "";
		lhsL[ART_L_JavaLexerImp_volatile_965] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_965] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_volatile_965] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_966] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_volatile_966] = "";
		lhsL[ART_L_JavaLexerImp_volatile_966] = ART_L_JavaLexerImp_volatile;
		popD[ART_L_JavaLexerImp_volatile_966] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_volatile_967] = "JavaLexerImp.volatile ::= `v`o`l`a`t`i`l`e. ";
		artLabelStrings[ART_L_JavaLexerImp_volatile_967] = "";
		lhsL[ART_L_JavaLexerImp_volatile_967] = ART_L_JavaLexerImp_volatile;
		artKindOfs[ART_L_JavaLexerImp_volatile_967] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_volatile_967] = true;
		eoR_pL[ART_L_JavaLexerImp_volatile_967] = true;
		popD[ART_L_JavaLexerImp_volatile_967] = true;
	}

	public void artTableInitialiser_202() {
		artLabelInternalStrings[ART_L_JavaLexerImp_while] = "JavaLexerImp.while ";
		artLabelStrings[ART_L_JavaLexerImp_while] = "while";
		artKindOfs[ART_L_JavaLexerImp_while] = ART_K_NONTERMINAL;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_970] = "JavaLexerImp.while ::= . `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_970] = "";
		lhsL[ART_L_JavaLexerImp_while_970] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_970] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_while_970] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_971] = "JavaLexerImp.while ::= `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_971] = "";
		lhsL[ART_L_JavaLexerImp_while_971] = ART_L_JavaLexerImp_while;
		popD[ART_L_JavaLexerImp_while_971] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_972] = "JavaLexerImp.while ::= `w. `h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_972] = "";
		lhsL[ART_L_JavaLexerImp_while_972] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_972] = ART_K_INTERMEDIATE;
		fiRL[ART_L_JavaLexerImp_while_972] = true;
		popD[ART_L_JavaLexerImp_while_972] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_973] = "JavaLexerImp.while ::= `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_973] = "";
		lhsL[ART_L_JavaLexerImp_while_973] = ART_L_JavaLexerImp_while;
		popD[ART_L_JavaLexerImp_while_973] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_974] = "JavaLexerImp.while ::= `w`h. `i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_974] = "";
		lhsL[ART_L_JavaLexerImp_while_974] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_974] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_while_974] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_975] = "JavaLexerImp.while ::= `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_975] = "";
		lhsL[ART_L_JavaLexerImp_while_975] = ART_L_JavaLexerImp_while;
		popD[ART_L_JavaLexerImp_while_975] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_976] = "JavaLexerImp.while ::= `w`h`i. `l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_976] = "";
		lhsL[ART_L_JavaLexerImp_while_976] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_976] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_while_976] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_977] = "JavaLexerImp.while ::= `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_977] = "";
		lhsL[ART_L_JavaLexerImp_while_977] = ART_L_JavaLexerImp_while;
		popD[ART_L_JavaLexerImp_while_977] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_978] = "JavaLexerImp.while ::= `w`h`i`l. `e";
		artLabelStrings[ART_L_JavaLexerImp_while_978] = "";
		lhsL[ART_L_JavaLexerImp_while_978] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_978] = ART_K_INTERMEDIATE;
		popD[ART_L_JavaLexerImp_while_978] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_979] = "JavaLexerImp.while ::= `w`h`i`l`e";
		artLabelStrings[ART_L_JavaLexerImp_while_979] = "";
		lhsL[ART_L_JavaLexerImp_while_979] = ART_L_JavaLexerImp_while;
		popD[ART_L_JavaLexerImp_while_979] = true;
		artLabelInternalStrings[ART_L_JavaLexerImp_while_980] = "JavaLexerImp.while ::= `w`h`i`l`e. ";
		artLabelStrings[ART_L_JavaLexerImp_while_980] = "";
		lhsL[ART_L_JavaLexerImp_while_980] = ART_L_JavaLexerImp_while;
		artKindOfs[ART_L_JavaLexerImp_while_980] = ART_K_INTERMEDIATE;
		eoRL[ART_L_JavaLexerImp_while_980] = true;
		eoR_pL[ART_L_JavaLexerImp_while_980] = true;
		popD[ART_L_JavaLexerImp_while_980] = true;
	}

	public void artTableInitialise() {
		artLabelInternalStrings = new String[ART_X_LABEL_EXTENT + 1];
		artLabelStrings = new String[ART_X_LABEL_EXTENT + 1];
		artLabelInternalStrings[ART_L_EOS] = "ART__$";
		artLabelStrings[ART_L_EOS] = " EOS $";
		artLabelInternalStrings[ART_X_DESPATCH] = "ART_X_DESPATCH";
		artLabelStrings[ART_X_DESPATCH] = " DESPATCH";
		artLabelInternalStrings[ART_L_DUMMY] = "ART_L_DUMMY";
		artLabelStrings[ART_L_DUMMY] = " DUMMY";
		artLabelInternalStrings[ART_X_LABEL_EXTENT] = "!!ILLEGAL!!";
		artLabelStrings[ART_X_LABEL_EXTENT] = " ILLEGAL";
		artLabelStrings[ART_L_EPSILON] = "#";
		artLabelInternalStrings[ART_L_EPSILON] = "#";

		artAnnotations = new String[ART_X_LABEL_EXTENT];
		setStringArray(artAnnotations, 0, ART_X_LABEL_EXTENT, null);

		artPreSlots = new int[ART_X_LABEL_EXTENT];
		setIntArray(artPreSlots, 0, ART_X_LABEL_EXTENT);

		artPostSlots = new int[ART_X_LABEL_EXTENT];
		setIntArray(artPostSlots, 0, ART_X_LABEL_EXTENT);

		artInstanceOfs = new int[ART_X_LABEL_EXTENT];
		setIntArray(artInstanceOfs, 0, ART_X_LABEL_EXTENT);

		artSlotInstanceOfs = new int[ART_X_LABEL_EXTENT];
		setIntArray(artSlotInstanceOfs, 0, ART_X_LABEL_EXTENT);

		artKindOfs = new int[ART_X_LABEL_EXTENT + 1];
		artKindOfs[ART_L_EOS] = ART_K_EOS;
		artKindOfs[ART_L_EPSILON] = ART_K_EPSILON;

		artUserNameOfs = new int[ART_X_LABEL_EXTENT + 1];

		artTerminalRequiresWhiteSpace = new boolean[ART_L_EPSILON];
		setBoolArray(artTerminalRequiresWhiteSpace, 0, ART_L_EPSILON, false);

		artTerminalCaseInsensitive = new boolean[ART_L_EPSILON];
		setBoolArray(artTerminalCaseInsensitive, 0, ART_L_EPSILON, false);

		artGathers = new int[ART_X_LABEL_EXTENT];
		setIntArray(artGathers, 0, ART_X_LABEL_EXTENT);

		artFolds = new int[ART_X_LABEL_EXTENT];
		setIntArray(artFolds, 0, ART_X_LABEL_EXTENT, 0);

		lhsL = new int[ART_X_LABEL_EXTENT];
		setIntArray(lhsL, 0, ART_X_LABEL_EXTENT);
		lhsL[ART_X_DESPATCH] = ART_X_DESPATCH;

		pL = new int[ART_X_LABEL_EXTENT];
		setIntArray(pL, 0, ART_X_LABEL_EXTENT);

		aL = new int[ART_X_LABEL_EXTENT];
		setIntArray(aL, 0, ART_X_LABEL_EXTENT);

		eoOPL = new boolean[ART_X_LABEL_EXTENT];
		setBoolArray(eoOPL, 0, ART_X_LABEL_EXTENT, false);

		fiRL = new boolean[ART_X_LABEL_EXTENT];
		setBoolArray(fiRL, 0, ART_X_LABEL_EXTENT, false);

		eoRL = new boolean[ART_X_LABEL_EXTENT];
		setBoolArray(eoRL, 0, ART_X_LABEL_EXTENT, false);

		eoR_pL = new boolean[ART_X_LABEL_EXTENT];
		setBoolArray(eoR_pL, 0, ART_X_LABEL_EXTENT, false);

		popD = new boolean[ART_X_LABEL_EXTENT];
		setBoolArray(popD, 0, ART_X_LABEL_EXTENT, false);

		artLabelStrings[ART_TC_] = "";
		artLabelInternalStrings[ART_TC_] = "`";
		artKindOfs[ART_TC_] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__BEL] = "\007";
		artLabelInternalStrings[ART_TC__BEL] = "`\\\\007";
		artKindOfs[ART_TC__BEL] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__BS] = "\010";
		artLabelInternalStrings[ART_TC__BS] = "`\\\\010";
		artKindOfs[ART_TC__BS] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__HT] = "\t";
		artLabelInternalStrings[ART_TC__HT] = "`\\\\t";
		artKindOfs[ART_TC__HT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__LF] = "\n";
		artLabelInternalStrings[ART_TC__LF] = "`\\\\n";
		artKindOfs[ART_TC__LF] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__VT] = "\013";
		artLabelInternalStrings[ART_TC__VT] = "`\\\\013";
		artKindOfs[ART_TC__VT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__FF] = "\014";
		artLabelInternalStrings[ART_TC__FF] = "`\\\\014";
		artKindOfs[ART_TC__FF] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__CR] = "\r";
		artLabelInternalStrings[ART_TC__CR] = "`\\\\r";
		artKindOfs[ART_TC__CR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__SPACE] = " ";
		artLabelInternalStrings[ART_TC__SPACE] = "` ";
		artKindOfs[ART_TC__SPACE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__SHREIK] = "!";
		artLabelInternalStrings[ART_TC__SHREIK] = "`!";
		artKindOfs[ART_TC__SHREIK] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__DBLQUOTE] = "\"";
		artLabelInternalStrings[ART_TC__DBLQUOTE] = "`\\\"";
		artKindOfs[ART_TC__DBLQUOTE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__HASH] = "#";
		artLabelInternalStrings[ART_TC__HASH] = "`#";
		artKindOfs[ART_TC__HASH] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__DOLLAR] = "$";
		artLabelInternalStrings[ART_TC__DOLLAR] = "`$";
		artKindOfs[ART_TC__DOLLAR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__PERCENT] = "%";
		artLabelInternalStrings[ART_TC__PERCENT] = "`%";
		artKindOfs[ART_TC__PERCENT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__AMPERSAND] = "&";
		artLabelInternalStrings[ART_TC__AMPERSAND] = "`&";
		artKindOfs[ART_TC__AMPERSAND] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__QUOTE] = "'";
		artLabelInternalStrings[ART_TC__QUOTE] = "`\\\\'";
		artKindOfs[ART_TC__QUOTE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__LPAR] = "(";
		artLabelInternalStrings[ART_TC__LPAR] = "`(";
		artKindOfs[ART_TC__LPAR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__RPAR] = ")";
		artLabelInternalStrings[ART_TC__RPAR] = "`)";
		artKindOfs[ART_TC__RPAR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__STAR] = "*";
		artLabelInternalStrings[ART_TC__STAR] = "`*";
		artKindOfs[ART_TC__STAR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__PLUS] = "+";
		artLabelInternalStrings[ART_TC__PLUS] = "`+";
		artKindOfs[ART_TC__PLUS] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__COMMA] = ",";
		artLabelInternalStrings[ART_TC__COMMA] = "`,";
		artKindOfs[ART_TC__COMMA] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__MINUS] = "-";
		artLabelInternalStrings[ART_TC__MINUS] = "`-";
		artKindOfs[ART_TC__MINUS] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__PERIOD] = ".";
		artLabelInternalStrings[ART_TC__PERIOD] = "`.";
		artKindOfs[ART_TC__PERIOD] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__SLASH] = "/";
		artLabelInternalStrings[ART_TC__SLASH] = "`/";
		artKindOfs[ART_TC__SLASH] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_0] = "0";
		artLabelInternalStrings[ART_TC_0] = "`0";
		artKindOfs[ART_TC_0] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_1] = "1";
		artLabelInternalStrings[ART_TC_1] = "`1";
		artKindOfs[ART_TC_1] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_2] = "2";
		artLabelInternalStrings[ART_TC_2] = "`2";
		artKindOfs[ART_TC_2] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_3] = "3";
		artLabelInternalStrings[ART_TC_3] = "`3";
		artKindOfs[ART_TC_3] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_4] = "4";
		artLabelInternalStrings[ART_TC_4] = "`4";
		artKindOfs[ART_TC_4] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_5] = "5";
		artLabelInternalStrings[ART_TC_5] = "`5";
		artKindOfs[ART_TC_5] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_6] = "6";
		artLabelInternalStrings[ART_TC_6] = "`6";
		artKindOfs[ART_TC_6] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_7] = "7";
		artLabelInternalStrings[ART_TC_7] = "`7";
		artKindOfs[ART_TC_7] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_8] = "8";
		artLabelInternalStrings[ART_TC_8] = "`8";
		artKindOfs[ART_TC_8] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_9] = "9";
		artLabelInternalStrings[ART_TC_9] = "`9";
		artKindOfs[ART_TC_9] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__COLON] = ":";
		artLabelInternalStrings[ART_TC__COLON] = "`:";
		artKindOfs[ART_TC__COLON] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__SEMICOLON] = ";";
		artLabelInternalStrings[ART_TC__SEMICOLON] = "`;";
		artKindOfs[ART_TC__SEMICOLON] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__LT] = "<";
		artLabelInternalStrings[ART_TC__LT] = "`<";
		artKindOfs[ART_TC__LT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__EQUAL] = "=";
		artLabelInternalStrings[ART_TC__EQUAL] = "`=";
		artKindOfs[ART_TC__EQUAL] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__GT] = ">";
		artLabelInternalStrings[ART_TC__GT] = "`>";
		artKindOfs[ART_TC__GT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__QUERY] = "?";
		artLabelInternalStrings[ART_TC__QUERY] = "`?";
		artKindOfs[ART_TC__QUERY] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__AT] = "@";
		artLabelInternalStrings[ART_TC__AT] = "`@";
		artKindOfs[ART_TC__AT] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_A] = "A";
		artLabelInternalStrings[ART_TC_A] = "`A";
		artKindOfs[ART_TC_A] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_B] = "B";
		artLabelInternalStrings[ART_TC_B] = "`B";
		artKindOfs[ART_TC_B] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_C] = "C";
		artLabelInternalStrings[ART_TC_C] = "`C";
		artKindOfs[ART_TC_C] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_D] = "D";
		artLabelInternalStrings[ART_TC_D] = "`D";
		artKindOfs[ART_TC_D] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_E] = "E";
		artLabelInternalStrings[ART_TC_E] = "`E";
		artKindOfs[ART_TC_E] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_F] = "F";
		artLabelInternalStrings[ART_TC_F] = "`F";
		artKindOfs[ART_TC_F] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_G] = "G";
		artLabelInternalStrings[ART_TC_G] = "`G";
		artKindOfs[ART_TC_G] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_H] = "H";
		artLabelInternalStrings[ART_TC_H] = "`H";
		artKindOfs[ART_TC_H] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_I] = "I";
		artLabelInternalStrings[ART_TC_I] = "`I";
		artKindOfs[ART_TC_I] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_J] = "J";
		artLabelInternalStrings[ART_TC_J] = "`J";
		artKindOfs[ART_TC_J] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_K] = "K";
		artLabelInternalStrings[ART_TC_K] = "`K";
		artKindOfs[ART_TC_K] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_L] = "L";
		artLabelInternalStrings[ART_TC_L] = "`L";
		artKindOfs[ART_TC_L] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_M] = "M";
		artLabelInternalStrings[ART_TC_M] = "`M";
		artKindOfs[ART_TC_M] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_N] = "N";
		artLabelInternalStrings[ART_TC_N] = "`N";
		artKindOfs[ART_TC_N] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_O] = "O";
		artLabelInternalStrings[ART_TC_O] = "`O";
		artKindOfs[ART_TC_O] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_P] = "P";
		artLabelInternalStrings[ART_TC_P] = "`P";
		artKindOfs[ART_TC_P] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_Q] = "Q";
		artLabelInternalStrings[ART_TC_Q] = "`Q";
		artKindOfs[ART_TC_Q] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_R] = "R";
		artLabelInternalStrings[ART_TC_R] = "`R";
		artKindOfs[ART_TC_R] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_S] = "S";
		artLabelInternalStrings[ART_TC_S] = "`S";
		artKindOfs[ART_TC_S] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_T] = "T";
		artLabelInternalStrings[ART_TC_T] = "`T";
		artKindOfs[ART_TC_T] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_U] = "U";
		artLabelInternalStrings[ART_TC_U] = "`U";
		artKindOfs[ART_TC_U] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_V] = "V";
		artLabelInternalStrings[ART_TC_V] = "`V";
		artKindOfs[ART_TC_V] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_W] = "W";
		artLabelInternalStrings[ART_TC_W] = "`W";
		artKindOfs[ART_TC_W] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_X] = "X";
		artLabelInternalStrings[ART_TC_X] = "`X";
		artKindOfs[ART_TC_X] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_Y] = "Y";
		artLabelInternalStrings[ART_TC_Y] = "`Y";
		artKindOfs[ART_TC_Y] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_Z] = "Z";
		artLabelInternalStrings[ART_TC_Z] = "`Z";
		artKindOfs[ART_TC_Z] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__LBRACK] = "[";
		artLabelInternalStrings[ART_TC__LBRACK] = "`[";
		artKindOfs[ART_TC__LBRACK] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__BACKSLASH] = "\\";
		artLabelInternalStrings[ART_TC__BACKSLASH] = "`\\\\\\\\";
		artKindOfs[ART_TC__BACKSLASH] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__RBRACK] = "]";
		artLabelInternalStrings[ART_TC__RBRACK] = "`]";
		artKindOfs[ART_TC__RBRACK] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__UPARROW] = "^";
		artLabelInternalStrings[ART_TC__UPARROW] = "`^";
		artKindOfs[ART_TC__UPARROW] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__] = "_";
		artLabelInternalStrings[ART_TC__] = "`_";
		artKindOfs[ART_TC__] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__BACKQUOTE] = "`";
		artLabelInternalStrings[ART_TC__BACKQUOTE] = "`\\\\`";
		artKindOfs[ART_TC__BACKQUOTE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_a] = "a";
		artLabelInternalStrings[ART_TC_a] = "`a";
		artKindOfs[ART_TC_a] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_b] = "b";
		artLabelInternalStrings[ART_TC_b] = "`b";
		artKindOfs[ART_TC_b] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_c] = "c";
		artLabelInternalStrings[ART_TC_c] = "`c";
		artKindOfs[ART_TC_c] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_d] = "d";
		artLabelInternalStrings[ART_TC_d] = "`d";
		artKindOfs[ART_TC_d] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_e] = "e";
		artLabelInternalStrings[ART_TC_e] = "`e";
		artKindOfs[ART_TC_e] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_f] = "f";
		artLabelInternalStrings[ART_TC_f] = "`f";
		artKindOfs[ART_TC_f] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_g] = "g";
		artLabelInternalStrings[ART_TC_g] = "`g";
		artKindOfs[ART_TC_g] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_h] = "h";
		artLabelInternalStrings[ART_TC_h] = "`h";
		artKindOfs[ART_TC_h] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_i] = "i";
		artLabelInternalStrings[ART_TC_i] = "`i";
		artKindOfs[ART_TC_i] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_j] = "j";
		artLabelInternalStrings[ART_TC_j] = "`j";
		artKindOfs[ART_TC_j] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_k] = "k";
		artLabelInternalStrings[ART_TC_k] = "`k";
		artKindOfs[ART_TC_k] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_l] = "l";
		artLabelInternalStrings[ART_TC_l] = "`l";
		artKindOfs[ART_TC_l] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_m] = "m";
		artLabelInternalStrings[ART_TC_m] = "`m";
		artKindOfs[ART_TC_m] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_n] = "n";
		artLabelInternalStrings[ART_TC_n] = "`n";
		artKindOfs[ART_TC_n] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_o] = "o";
		artLabelInternalStrings[ART_TC_o] = "`o";
		artKindOfs[ART_TC_o] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_p] = "p";
		artLabelInternalStrings[ART_TC_p] = "`p";
		artKindOfs[ART_TC_p] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_q] = "q";
		artLabelInternalStrings[ART_TC_q] = "`q";
		artKindOfs[ART_TC_q] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_r] = "r";
		artLabelInternalStrings[ART_TC_r] = "`r";
		artKindOfs[ART_TC_r] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_s] = "s";
		artLabelInternalStrings[ART_TC_s] = "`s";
		artKindOfs[ART_TC_s] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_t] = "t";
		artLabelInternalStrings[ART_TC_t] = "`t";
		artKindOfs[ART_TC_t] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_u] = "u";
		artLabelInternalStrings[ART_TC_u] = "`u";
		artKindOfs[ART_TC_u] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_v] = "v";
		artLabelInternalStrings[ART_TC_v] = "`v";
		artKindOfs[ART_TC_v] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_w] = "w";
		artLabelInternalStrings[ART_TC_w] = "`w";
		artKindOfs[ART_TC_w] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_x] = "x";
		artLabelInternalStrings[ART_TC_x] = "`x";
		artKindOfs[ART_TC_x] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_y] = "y";
		artLabelInternalStrings[ART_TC_y] = "`y";
		artKindOfs[ART_TC_y] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC_z] = "z";
		artLabelInternalStrings[ART_TC_z] = "`z";
		artKindOfs[ART_TC_z] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__LBRACE] = "{";
		artLabelInternalStrings[ART_TC__LBRACE] = "`{";
		artKindOfs[ART_TC__LBRACE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__BAR] = "|";
		artLabelInternalStrings[ART_TC__BAR] = "`|";
		artKindOfs[ART_TC__BAR] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__RBRACE] = "}";
		artLabelInternalStrings[ART_TC__RBRACE] = "`}";
		artKindOfs[ART_TC__RBRACE] = ART_K_CHARACTER_TERMINAL;
		artLabelStrings[ART_TC__TILDE] = "~";
		artLabelInternalStrings[ART_TC__TILDE] = "`~";
		artKindOfs[ART_TC__TILDE] = ART_K_CHARACTER_TERMINAL;
		artTableInitialiser_105();
		artTableInitialiser_106();
		artTableInitialiser_107();
		artTableInitialiser_108();
		artTableInitialiser_109();
		artTableInitialiser_110();
		artTableInitialiser_111();
		artTableInitialiser_112();
		artTableInitialiser_113();
		artTableInitialiser_114();
		artTableInitialiser_115();
		artTableInitialiser_116();
		artTableInitialiser_117();
		artTableInitialiser_118();
		artTableInitialiser_119();
		artTableInitialiser_120();
		artTableInitialiser_121();
		artTableInitialiser_122();
		artTableInitialiser_123();
		artTableInitialiser_124();
		artTableInitialiser_125();
		artTableInitialiser_126();
		artTableInitialiser_127();
		artTableInitialiser_128();
		artTableInitialiser_129();
		artTableInitialiser_130();
		artTableInitialiser_131();
		artTableInitialiser_132();
		artTableInitialiser_133();
		artTableInitialiser_134();
		artTableInitialiser_135();
		artTableInitialiser_136();
		artTableInitialiser_137();
		artTableInitialiser_138();
		artTableInitialiser_139();
		artTableInitialiser_140();
		artTableInitialiser_141();
		artTableInitialiser_142();
		artTableInitialiser_143();
		artTableInitialiser_144();
		artTableInitialiser_145();
		artTableInitialiser_146();
		artTableInitialiser_147();
		artTableInitialiser_148();
		artTableInitialiser_149();
		artTableInitialiser_150();
		artTableInitialiser_151();
		artTableInitialiser_152();
		artTableInitialiser_153();
		artTableInitialiser_154();
		artTableInitialiser_155();
		artTableInitialiser_156();
		artTableInitialiser_157();
		artTableInitialiser_158();
		artTableInitialiser_159();
		artTableInitialiser_160();
		artTableInitialiser_161();
		artTableInitialiser_162();
		artTableInitialiser_163();
		artTableInitialiser_164();
		artTableInitialiser_165();
		artTableInitialiser_166();
		artTableInitialiser_167();
		artTableInitialiser_168();
		artTableInitialiser_169();
		artTableInitialiser_170();
		artTableInitialiser_171();
		artTableInitialiser_172();
		artTableInitialiser_173();
		artTableInitialiser_174();
		artTableInitialiser_175();
		artTableInitialiser_176();
		artTableInitialiser_177();
		artTableInitialiser_178();
		artTableInitialiser_179();
		artTableInitialiser_180();
		artTableInitialiser_181();
		artTableInitialiser_182();
		artTableInitialiser_183();
		artTableInitialiser_184();
		artTableInitialiser_185();
		artTableInitialiser_186();
		artTableInitialiser_187();
		artTableInitialiser_188();
		artTableInitialiser_189();
		artTableInitialiser_190();
		artTableInitialiser_191();
		artTableInitialiser_192();
		artTableInitialiser_193();
		artTableInitialiser_194();
		artTableInitialiser_195();
		artTableInitialiser_196();
		artTableInitialiser_197();
		artTableInitialiser_198();
		artTableInitialiser_199();
		artTableInitialiser_200();
		artTableInitialiser_201();
		artTableInitialiser_202();
	}

	public void constructorCore(Text textHandler) {
		text = textHandler;
		artFirstTerminalLabel = ART_TC_;
		artFirstUnusedLabel = ART_X_LABEL_EXTENT + 1;
		artSetExtent = ART_X_EPSILON + 1;
		ART_L_EOS = ART_X_EOS;
		ART_L_EPSILON = ART_X_EPSILON;
		ART_L_DUMMY = ART_X_DUMMY;
		grammarName = "JavaLexerImp";
		defaultStartSymbolLabel = ART_L_JavaLexerImp_input;
		buildOptions = " Java fragment HashPool";
		FIFODescriptors = false;
		setInitialise();
		artTableInitialise();
	}

	public JavaImpLexerParser() {
				constructorCore(new Text(new DefaultTextHandler()));
	}

	public JavaImpLexerParser(Text text) {
				constructorCore(text);
	}

};
